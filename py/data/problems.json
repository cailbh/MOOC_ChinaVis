[{
  "_id": {
    "$oid": "643e5f71796e2211ee982963"
  },
  "id": "1568086661408161792",
  "label": "",
  "score": 1,
  "problemId": "1477262017438560256",
  "title": "C语言中的转义字符‘\\n’表示的功能是换行。",
  "content": "C语言中的转义字符‘\\n’表示的功能是换行。 ",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "C语言中的转义字符‘\\n’表示的功能是换行。 ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982964"
  },
  "id": "1568086661408161793",
  "label": "",
  "score": 1,
  "problemId": "1503307092835577856",
  "title": "在C语言中，单精度的浮点类型用double表示。",
  "content": "在C语言中，单精度的浮点类型用double表示。",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "在C语言中，单精度的浮点类型用double表示。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982965"
  },
  "id": "1568086661408161794",
  "label": "",
  "score": 1,
  "problemId": "1503307243058769920",
  "title": "C语言中的转义字符‘\\t’表示的功能是换行。",
  "content": "C语言中的转义字符‘\\t’表示的功能是换行。",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "C语言中的转义字符‘\\t’表示的功能是换行。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982966"
  },
  "id": "1568086661408161795",
  "label": "",
  "score": 1,
  "problemId": "1503307934297763840",
  "title": "C语言标识符中，大小写字母是有区别的。",
  "content": "C语言标识符中，大小写字母是有区别的。",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "C语言标识符中，大小写字母是有区别的。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982967"
  },
  "id": "1568086661408161796",
  "label": "",
  "score": 1,
  "problemId": "1764",
  "title": "任何表达式语句都是表达式加分号组成的。",
  "content": "任何表达式语句都是表达式加分号组成的。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "吉首大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "任何表达式语句都是表达式加分号组成的。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982968"
  },
  "id": "1568086661408161797",
  "label": "",
  "score": 2,
  "problemId": "985",
  "title": "C 语言程序中可以对程序进行注释，注释部分必须用什么符号括起来？",
  "content": "C 语言程序中可以对程序进行注释，注释部分必须用什么符号括起来？ @[](2)\nA. '{' 和‘}'\nB. '[' 和 ']'\nC. '/\\*' 和 '\\*/'\nD. '\\*/' 和 '/\\*'",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "C 语言程序中可以对程序进行注释，注释部分必须用什么符号括起来？",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982969"
  },
  "id": "1568086661408161798",
  "label": "",
  "score": 2,
  "problemId": "988",
  "title": "已知字符 'a' 的ASCII码为 97，执行下列语句的输出是\\_\\_\\_\\_。",
  "content": "已知字符 'a' 的ASCII码为 97，执行下列语句的输出是\\_\\_\\_\\_。@[](2)\n\n`printf (\"%d, %c\", 'b', 'b'+1 ) ; `\n\nA. 98, b\nB. 语法不合法\nC. 98, 99\nD. 98, c",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "已知字符 'a' 的ASCII码为 97，执行下列语句的输出是\\_\\_\\_\\_。\n\n`printf (\"%d, %c\", 'b', 'b'+1 ) ; `",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296a"
  },
  "id": "1568086661408161799",
  "label": "",
  "score": 2,
  "problemId": "992",
  "title": "判断 i 和 j 至少有一个值为非0的表达式是\\_\\_\\_\\_。",
  "content": "判断 i 和 j 至少有一个值为非0的表达式是\\_\\_\\_\\_。  @[](2)\n\nA. i!=0 && j!=0\nB. i+j!=0\nC. i || j\nD. i&&j",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "判断 i 和 j 至少有一个值为非0的表达式是\\_\\_\\_\\_。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296b"
  },
  "id": "1568086661408161800",
  "label": "",
  "score": 2,
  "problemId": "1073",
  "title": "若变量已正确定义并赋值，表达式（ ）不符合C语言语法。",
  "content": "若变量已正确定义并赋值，表达式（ ）不符合C语言语法。   @[](2)\n\nA. `5&&3\t`\nB. `int(5.5)`\nC. `+a`\nD. `a=b=c=3`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福州大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "若变量已正确定义并赋值，表达式（ ）不符合C语言语法。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296c"
  },
  "id": "1568086661408161801",
  "label": "",
  "score": 2,
  "problemId": "1041",
  "title": "表达式__不能用于判断“x和y不同时为零”。",
  "content": "表达式__不能用于判断“x和y不同时为零”。   @[](2)\n\nA. x!=0 || y!=0\nB. x || y\nC. !(x==0 || y==0)\nD. !(x==0 && y==0)",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "表达式__不能用于判断“x和y不同时为零”。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296d"
  },
  "id": "1568086661408161802",
  "label": "",
  "score": 2,
  "problemId": "1075",
  "title": "若变量已正确定义并赋值，表达式 `-k++` 等价于（ ）。",
  "content": "若变量已正确定义并赋值，表达式 `-k++` 等价于（ ）。   @[](2)\n\nA. `-(k++)\t`\nB. `-(k+1)`\nC. `-(++k)`\nD. `(-k)++`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福州大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "若变量已正确定义并赋值，表达式 `-k++` 等价于（ ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296e"
  },
  "id": "1568086661408161803",
  "label": "",
  "score": 2,
  "problemId": "1083",
  "title": "已知`int i, a;` 执行语句`i=(a=2*3,a*5),a+6;`后，变量`i`的值是（ ）。",
  "content": "已知`int i, a;` 执行语句`i=(a=2*3,a*5),a+6;`后，变量`i`的值是（ ）。   @[](2)\n\nA. 6 \t\nB. 12\nC. 30\nD. 36",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福州大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "已知`int i, a;` 执行语句`i=(a=2*3,a*5),a+6;`后，变量`i`的值是（ ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98296f"
  },
  "id": "1568086661408161804",
  "label": "",
  "score": 2,
  "problemId": "1302789019088277504",
  "title": "为表示x≥y≥z，须用的C语言表达式为（  ）。",
  "content": "为表示x≥y≥z，须用的C语言表达式为（  ）。\n\n@[](2)\n\nA. (x>=y)&&(y>=z) \nB.  (x>=y)AND(y>=x)\nC. x>=y>=z    \nD. (x≥y)&&(y≥z)",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "湖南工程学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "为表示x≥y≥z，须用的C语言表达式为（  ）。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982970"
  },
  "id": "1568086661408161805",
  "label": "",
  "score": 2,
  "problemId": "1363686766195081216",
  "title": "以下运算符优先级按从高到低排列正确的是(     )。",
  "content": "以下运算符优先级按从高到低排列正确的是(     )。\n\n@[](2)\n\nA. 算术运算、赋值运算、关系运算\nB. 关系运算、赋值运算、算术运算\nC. 算术运算、关系运算、赋值运算\nD. 关系运算、算术运算、赋值运算",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "以下运算符优先级按从高到低排列正确的是(     )。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982971"
  },
  "id": "1568086661408161806",
  "label": "",
  "score": 1,
  "problemId": "944548697331687424",
  "title": "将十进制数215转换成二进制数是   ",
  "content": "将十进制数215转换成二进制数是   @[](1)\n\nA. 11010110\nB. 11010111\nC. 11101011\nD. 11101010\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "武汉理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "将十进制数215转换成二进制数是",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982972"
  },
  "id": "1568086661408161807",
  "label": "",
  "score": 2,
  "problemId": "1174346577650094080",
  "title": "十进制数95的二进制数为（   ） 。   ",
  "content": "十进制数95的二进制数为（   ） 。   @[](2)\n\nA. 10010101\nB. 1011111\nC. 1011110\nD. 101111\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "十进制数95的二进制数为（   ） 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982973"
  },
  "id": "1568086661408161808",
  "label": "",
  "score": 2,
  "problemId": "1174346965988118528",
  "title": "十进制数95的十六进制数为（） 。   ",
  "content": "十进制数95的十六进制数为（） 。   @[](2)\n\nA. 5F\nB. F5\nC. 5E\nD. E\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "十进制数95的十六进制数为（） 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982974"
  },
  "id": "1568086661408161809",
  "label": "",
  "score": 2,
  "problemId": "1174347535029342208",
  "title": "十进制数95的八进制数为（） 。   ",
  "content": "十进制数95的八进制数为（） 。   @[](2)\n\nA. 731\nB. 137\nC. 5F\nD. 136\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "十进制数95的八进制数为（） 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982975"
  },
  "id": "1568086661408161810",
  "label": "",
  "score": 2,
  "problemId": "1174348464466137088",
  "title": "二进制数100011，对应的十六进制数为（） 。 ",
  "content": "二进制数100011，对应的十六进制数为（） 。 @[](2)\n\nA. 20\nB. 35\nC. 23\nD. 36\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "二进制数100011，对应的十六进制数为（） 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982976"
  },
  "id": "1568086661408161811",
  "label": "",
  "score": 1,
  "problemId": "1090091348309131264",
  "title": "输出整数",
  "content": "输出整数\n\nprintf 函数输出整数时不能使用 ▁▁▁▁▁ 格式限定符。",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "输出整数\n\nprintf 函数输出整数时不能使用 ▁▁▁▁▁ 格式限定符。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982977"
  },
  "id": "1568086661408161812",
  "label": "",
  "score": 3,
  "problemId": "904937568070164480",
  "title": "字符串 \"123\"",
  "content": "字符串 \"123\"\n\n字符串 \"123\" 长度为  个字符，\n\n占用内存  个字节，\n\n这些字节的值依次是  。\n\n---\n\n注：请填十进制数，以西文逗号间隔，不留空格。数字 0 的 ASCII 码为 48。\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "3"
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "4"
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "49,50,51,0"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "字符串 \"123\"\n\n字符串 \"123\" 长度为  个字符，\n\n占用内存  个字节，\n\n这些字节的值依次是  。\n\n---\n\n注：请填十进制数，以西文逗号间隔，不留空格。数字 0 的 ASCII 码为 48。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982978"
  },
  "id": "1568086661408161813",
  "label": "",
  "score": 2,
  "problemId": "991667420013817856",
  "title": "表达式 !!2 的值为@",
  "content": "表达式 !!2 的值为@@[](2) ",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "1"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "表达式 !!2 的值为 ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982979"
  },
  "id": "1568086661408161814",
  "label": "",
  "score": 6,
  "problemId": "1561918336450572288",
  "title": "进制转换 - C/C++ 位操作",
  "content": "0x0310 =  （十进制）\n0b01111010 =    （十进制）\n0x8F =   （二进制 ，不含0b）\n\n\n### 感觉不会？  那试着听听**免费的B站网课**\n[简洁的C和C++ - 重庆大学在线课程](https://www.bilibili.com/video/BV1it411d7zx/)\n[Python编程基础及应用 - 重庆大学在线课程](https://www.bilibili.com/video/BV1kt411R7uW/)\n![image.png](~/6e79c9e3-cb7f-486d-ab78-36b5a8f655c0.png)\n\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "重庆大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "784 "
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "122"
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "10001111"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "0x0310 =  （十进制）\n0b01111010 =    （十进制）\n0x8F =   （二进制 ，不含0b）\n\n\n### 感觉不会？  那试着听听**免费的B站网课**\n[简洁的C和C++ - 重庆大学在线课程](https://www.bilibili.com/video/BV1it411d7zx/)\n[Python编程基础及应用 - 重庆大学在线课程](https://www.bilibili.com/video/BV1kt411R7uW/)\n![image.png](~/6e79c9e3-cb7f-486d-ab78-36b5a8f655c0.png)\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297a"
  },
  "id": "1568086661408161815",
  "label": "",
  "score": 2,
  "problemId": "1176515207892537344",
  "title": "下列程序段的输出结果是@。",
  "content": "下列程序段的输出结果是@@[](2)。\n```\nint main(void)\n{   float  a;  \n    int  b=5;\n    a=5/2;  \n    b=b/2*a;\n    printf(\"%f,%d\\n\",a,b);\t\n    return 0;\t\t\n}\n```\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "2.000000,4"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "下列程序段的输出结果是。\n```\nint main(void)\n{   float  a;  \n    int  b=5;\n    a=5/2;  \n    b=b/2*a;\n    printf(\"%f,%d\\n\",a,b);\t\n    return 0;\t\t\n}\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297b"
  },
  "id": "1568086661408161816",
  "label": "",
  "score": 2,
  "problemId": "991674936495980544",
  "title": "已知字符'a'的ASCII码为97，则下列语句的输出结果为  @ ",
  "content": "已知字符'a'的ASCII码为97，则下列语句的输出结果为  @@[](2) \n\n```\nprintf(\"%c#%d#\", 98 , 'c' );\n```",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "b#99#"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "已知字符'a'的ASCII码为97，则下列语句的输出结果为   \n\n```\nprintf(\"%c#%d#\", 98 , 'c' );\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297c"
  },
  "id": "1568086661408161817",
  "label": "",
  "score": 10,
  "problemId": "5",
  "title": "计算摄氏温度",
  "content": "给定一个华氏温度$$F$$，本题要求编写程序，计算对应的摄氏温度$$C$$。计算公式：$$C = 5\\times (F-32)/9$$。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出一个华氏温度。\n\n### 输出格式:\n\n在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 \n\n### 输入样例:\n```in\n150\n```\n\n### 输出样例:\n```out\nCelsius = 65\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 291,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb8f",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": true,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "给定一个华氏温度$$F$$，本题要求编写程序，计算对应的摄氏温度$$C$$。计算公式：$$C = 5\\times (F-32)/9$$。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出一个华氏温度。\n\n### 输出格式:\n\n在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 \n\n### 输入样例:\n```in\n150\n```\n\n### 输出样例:\n```out\nCelsius = 65\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297d"
  },
  "id": "1568086661408161818",
  "label": "",
  "score": 5,
  "problemId": "477",
  "title": "输出菱形图案",
  "content": "本题要求编写程序，输出指定的由“A”组成的菱形图案。\n\n### 输入格式：\n\n本题无输入\n\n### 输出格式：\n\n按照下列格式输出由“A”组成的菱形图案。\n\n```\n  A\nA   A\n  A\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 175,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc60",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，输出指定的由“A”组成的菱形图案。\n\n### 输入格式：\n\n本题无输入\n\n### 输出格式：\n\n按照下列格式输出由“A”组成的菱形图案。\n\n```\n  A\nA   A\n  A\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297e"
  },
  "id": "1568086661408161819",
  "label": "",
  "score": 10,
  "problemId": "1068",
  "title": "算术入门之加减乘除",
  "content": "对于输入的两个整数，按照要求输出其和差积商。\n\n### 输入格式:\n\n在一行内输入两个不超过100的非负整数a和b，中间以一个空格间隔，且保证b不为0。\n\n### 输出格式:\n\n共四行，格式是：\n```\n[a] + [b] = [a+b]\n[a] - [b] = [a-b]\n[a] * [b] = [a*b]\n[a] / [b] = [a/b]\n```\n 其中，带有方括号的内容（如`[a]`、`[b]`、`[a+b]`等）表示相应整数或运算结果的值，在输出时要用实际的值代替。\n\n 并且：如果a能够被b整除，那么a/b应输出为整数格式，否则a/b输出为带两位小数的格式。\n\n**提示：**注意表达式中的空格。\n\n### 输入样例1:\n```in\n6 3\n```\n\n### 输出样例1:\n```out\n6 + 3 = 9\n6 - 3 = 3\n6 * 3 = 18\n6 / 3 = 2\n```\n### 输入样例2:\n```\n8 6\n```\n\n### 输出样例2:\n```\n8 + 6 = 14\n8 - 6 = 2\n8 * 6 = 48\n8 / 6 = 1.33\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "青岛大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 465,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4c93d1de004a0fcd2d",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "对于输入的两个整数，按照要求输出其和差积商。\n\n### 输入格式:\n\n在一行内输入两个不超过100的非负整数a和b，中间以一个空格间隔，且保证b不为0。\n\n### 输出格式:\n\n共四行，格式是：\n```\n[a] + [b] = [a+b]\n[a] - [b] = [a-b]\n[a] * [b] = [a*b]\n[a] / [b] = [a/b]\n```\n 其中，带有方括号的内容（如`[a]`、`[b]`、`[a+b]`等）表示相应整数或运算结果的值，在输出时要用实际的值代替。\n\n 并且：如果a能够被b整除，那么a/b应输出为整数格式，否则a/b输出为带两位小数的格式。\n\n**提示：**注意表达式中的空格。\n\n### 输入样例1:\n```in\n6 3\n```\n\n### 输出样例1:\n```out\n6 + 3 = 9\n6 - 3 = 3\n6 * 3 = 18\n6 / 3 = 2\n```\n### 输入样例2:\n```\n8 6\n```\n\n### 输出样例2:\n```\n8 + 6 = 14\n8 - 6 = 2\n8 * 6 = 48\n8 / 6 = 1.33\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee98297f"
  },
  "id": "1568086661408161820",
  "label": "",
  "score": 5,
  "problemId": "10574",
  "title": "Hello World",
  "content": "这道超级简单的题目没有任何输入。\n\n你只需要在一行中输出著名短句“Hello World!”就可以了。\n\n### 输入样例：\n```in\n无\n```\n\n### 输出样例：\n```out\nHello World!\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 91,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af50fc18c3638000a2d9326",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "这道超级简单的题目没有任何输入。\n\n你只需要在一行中输出著名短句“Hello World!”就可以了。\n\n### 输入样例：\n```in\n无\n```\n\n### 输出样例：\n```out\nHello World!\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "643e5f71796e2211ee982980"
  },
  "id": "1568086661408161821",
  "label": "",
  "score": 5,
  "problemId": "10598",
  "title": "简单题",
  "content": "这次真的没骗你 —— 这道超级简单的题目没有任何输入。\n\n你只需要在一行中输出事实：`This is a simple problem.` 就可以了。\n\n### 输入样例：\n```in\n无\n```\n\n### 输出样例：\n```out\nThis is a simple problem.\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 96,
  "problemSetId": "1568086661336858624",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af50fd48c3638000a2d933e",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "这次真的没骗你 —— 这道超级简单的题目没有任何输入。\n\n你只需要在一行中输出事实：`This is a simple problem.` 就可以了。\n\n### 输入样例：\n```in\n无\n```\n\n### 输出样例：\n```out\nThis is a simple problem.\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bca8"
  },
  "id": "1570609751279202304",
  "label": "",
  "score": 1,
  "problemId": "2878",
  "title": "C语言程序是从源文件的第一条语句开始执行的。",
  "content": "C语言程序是从源文件的第一条语句开始执行的。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "重庆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "C语言程序是从源文件的第一条语句开始执行的。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bca9"
  },
  "id": "1570609751279202305",
  "label": "",
  "score": 1,
  "problemId": "4026",
  "title": "语句`printf(\"%.2f\",1.0/3);`输出为`0.33`。  ",
  "content": "语句`printf(\"%.2f\",1.0/3);`输出为`0.33`。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "吉首大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "语句`printf(\"%.2f\",1.0/3);`输出为`0.33`。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcaa"
  },
  "id": "1570609751279202306",
  "label": "",
  "score": 1,
  "problemId": "1127780435718676480",
  "title": "实型数据可以进行求余数运算%。",
  "content": "实型数据可以进行求余数运算%。",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "山东理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "实型数据可以进行求余数运算%。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcab"
  },
  "id": "1570609751279202307",
  "label": "",
  "score": 1,
  "problemId": "1248428068923158528",
  "title": "判断两个浮点数是否相同的运算虽然符合C语言规则，但是应该尽量避免。",
  "content": "判断两个浮点数是否相同的运算虽然符合C语言规则，但是应该尽量避免。  ",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "判断两个浮点数是否相同的运算虽然符合C语言规则，但是应该尽量避免。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcac"
  },
  "id": "1570609751279202308",
  "label": "",
  "score": 1,
  "problemId": "951037528910290944",
  "title": "C语言源代码可以不经过编译而被计算机直接运行。（ ）。  ",
  "content": "C语言源代码可以不经过编译而被计算机直接运行。（ ）。  ~@[](2)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "怀化学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "C语言源代码可以不经过编译而被计算机直接运行。（ ）。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcad"
  },
  "id": "1570609751279202309",
  "label": "",
  "score": 2,
  "problemId": "1086",
  "title": "表达式（ ）的值是0。",
  "content": "表达式（ ）的值是0。   @[](2)\n\nA. 3/5\nB. 3<5\nC. 3%5\nD. 3/5.0",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福州大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "表达式（ ）的值是0。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcae"
  },
  "id": "1570609751279202310",
  "label": "",
  "score": 2,
  "problemId": "1289",
  "title": "设`x`和`y`均为`int`型变量，则以下语句：`x+=y; y=x-y; x-=y; `的功能是____。",
  "content": "设`x`和`y`均为`int`型变量，则以下语句：`x+=y; y=x-y; x-=y; `的功能是____。 @[](2)\n\nA. 把`x`和`y`按从大到小排列    \nB. 把`x`和`y`按从小到大排列  \nC. 无确定结果    \nD. 交换`x`和`y`中 的值",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "设`x`和`y`均为`int`型变量，则以下语句：`x+=y; y=x-y; x-=y; `的功能是____。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcaf"
  },
  "id": "1570609751279202311",
  "label": "",
  "score": 1,
  "problemId": "1016361551937437696",
  "title": "表达式(整数除法-商)",
  "content": "表达式\n\n下面的程序段将输出 ▁▁▁▁▁ 。\n\n```c\nint a = -5, b = -3, c;\nc = a / b;\nprintf(\"%d\\n\", c);\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "表达式\n\n下面的程序段将输出 ▁▁▁▁▁ 。\n\n```c\nint a = -5, b = -3, c;\nc = a / b;\nprintf(\"%d\\n\", c);\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb0"
  },
  "id": "1570609751279202312",
  "label": "",
  "score": 3,
  "problemId": "1354720468908638208",
  "title": "如果int a=3,b=4；则条件表达式\"a<b? a:b\"的值是（   ）。",
  "content": "如果int a=3,b=4；则条件表达式\"a<b? a:b\"的值是（   ）。\n@[](3)\n\nA. 3\nB.  4\nC. 0\nD. 1",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新疆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "如果int a=3,b=4；则条件表达式\"a<b? a:b\"的值是（   ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb1"
  },
  "id": "1570609751279202313",
  "label": "",
  "score": 2,
  "problemId": "1372421146486362112",
  "title": "根据下面的定义，能打印出字母M的语句是（    ）。",
  "content": "根据下面的定义，能打印出字母M的语句是（    ）。\n\nStruct person {\nChar name[10];\nint age;}\nc[10] = { “John”, 17, ”Paul”, 19, ”Mary”, 18, ”Adam”, 16 };\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新疆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "84",
          "name": "结构",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "根据下面的定义，能打印出字母M的语句是（    ）。\n\nStruct person {\nChar name[10];\nint age;}\nc[10] = { “John”, 17, ”Paul”, 19, ”Mary”, 18, ”Adam”, 16 };\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb2"
  },
  "id": "1570609751279202314",
  "label": "",
  "score": 1,
  "problemId": "1447756415476408320",
  "title": "有一函数，以下程序段中错误的是？",
  "content": "有一函数\n![QQ截图20211012104411.jpg](~/bbc9231e-27eb-4d8c-842c-9b32fcd67748.jpg)\n，以下程序段中错误的是？",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "桂林学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "有一函数\n![QQ截图20211012104411.jpg](~/bbc9231e-27eb-4d8c-842c-9b32fcd67748.jpg)\n，以下程序段中错误的是？",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb3"
  },
  "id": "1570609751279202315",
  "label": "",
  "score": 2,
  "problemId": "1500519304788885504",
  "title": "能正确表示逻辑关系：“10≤x≤20” 的C语言表达式是（    ）。",
  "content": "能正确表示逻辑关系：“10≤x≤20” 的C语言表达式是（    ）。",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "能正确表示逻辑关系：“10≤x≤20” 的C语言表达式是（    ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb4"
  },
  "id": "1570609751279202316",
  "label": "",
  "score": 2,
  "problemId": "1500521764944482304",
  "title": "若有变量定义：char c; int i; double x;则表达式c+5`*`i-x的最终计算结果为（    ）类型。",
  "content": "若有变量定义：char c; int i; double x;则表达式`c+5*i-x`的最终计算结果为（    ）类型。",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新余学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "若有变量定义：char c; int i; double x;则表达式`c+5*i-x`的最终计算结果为（    ）类型。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb5"
  },
  "id": "1570609751279202317",
  "label": "",
  "score": 1,
  "problemId": "1506439888545984512",
  "title": "下列程序执行后的输出结果是",
  "content": "下列程序执行后的输出结果是\n```{c}\nmain()\n{\n\tint x='f';\n\tprintf(\"%c \\n\",'A'+(x-'a'+1));\n}\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福建农林大学金山学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "下列程序执行后的输出结果是\n```{c}\nmain()\n{\n\tint x='f';\n\tprintf(\"%c \\n\",'A'+(x-'a'+1));\n}\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb6"
  },
  "id": "1570609751279202318",
  "label": "",
  "score": 1,
  "problemId": "1506441727963578368",
  "title": "putchar()函数的功能是向终端输出",
  "content": "putchar()函数的功能是向终端输出",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "福建农林大学金山学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "putchar()函数的功能是向终端输出",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb7"
  },
  "id": "1570609751279202319",
  "label": "",
  "score": 1,
  "problemId": "5137",
  "title": "能正确表示逻辑关系\"$$a\\ge10$$ 或 $$a\\le0$$\"的C语言表达式是（）。   ",
  "content": "能正确表示逻辑关系\"$$a\\ge10$$ 或 $$a\\le0$$\"的C语言表达式是（）。   @[](1)\n\nA. a>=10 or a<=0\nB. a>=0 | a<=10\nC. a>=10 && a<=0\nD. a>=10 || a<=0\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "能正确表示逻辑关系\"$$a\\ge10$$ 或 $$a\\le0$$\"的C语言表达式是（）。   \n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb8"
  },
  "id": "1570609751279202320",
  "label": "",
  "score": 2,
  "problemId": "1302445283271593984",
  "title": "要求通过 while 循环不断输出字符，当读入字母 N 时结束循环。若变量已正确定义，下列程序段正确的是（  ）。",
  "content": "要求通过 while 循环不断输出字符，当读入字母 N 时结束循环。若变量已正确定义，下列程序段正确的是（  ）。",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "湖南工程学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "要求通过 while 循环不断输出字符，当读入字母 N 时结束循环。若变量已正确定义，下列程序段正确的是（  ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcb9"
  },
  "id": "1570609751279202321",
  "label": "",
  "score": 2,
  "problemId": "1302789019088277504",
  "title": "为表示x≥y≥z，须用的C语言表达式为（  ）。",
  "content": "为表示x≥y≥z，须用的C语言表达式为（  ）。\n\n@[](2)\n\nA. (x>=y)&&(y>=z) \nB.  (x>=y)AND(y>=x)\nC. x>=y>=z    \nD. (x≥y)&&(y≥z)",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "湖南工程学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "为表示x≥y≥z，须用的C语言表达式为（  ）。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcba"
  },
  "id": "1570609751279202322",
  "label": "",
  "score": 2,
  "problemId": "1403323578279960576",
  "title": "下述代码执行后，a,b的值各为多少？",
  "content": "下述代码执行后，a,b的值各为多少？\n\n```\n    int a = 0, b = 0;\n    a = (b++, 4);\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "重庆大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "下述代码执行后，a,b的值各为多少？\n\n```\n    int a = 0, b = 0;\n    a = (b++, 4);\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcbb"
  },
  "id": "1570609751279202323",
  "label": "",
  "score": 1,
  "problemId": "1255797599237132288",
  "title": "设变量已正确定义并赋值,以下正确的表达式是_____。 ",
  "content": "设变量已正确定义并赋值,以下正确的表达式是_____。 @[](1.5)\nA. x=y*5=x+z\t\nB.  int(15.8%5) \nC.  x=25%5.0\nD. x=y+z+5,++y\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "长春理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "设变量已正确定义并赋值,以下正确的表达式是_____。 \n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcbc"
  },
  "id": "1570609751279202324",
  "label": "",
  "score": 5,
  "problemId": "10596",
  "title": "计算指数",
  "content": "真的没骗你，这道才是简单题 —— 对任意给定的不超过 10 的正整数 $$n$$，要求你输出 $$2^n$$。不难吧？\n\n### 输入格式：\n\n输入在一行中给出一个不超过 10 的正整数 $$n$$。\n\n### 输出格式：\n\n在一行中按照格式  `2^n = 计算结果`  输出 $$2^n$$ 的值。\n\n### 输入样例：\n```in\n5\n```\n\n### 输出样例：\n```out\n2^5 = 32\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 172,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af50fd38c3638000a2d933c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "真的没骗你，这道才是简单题 —— 对任意给定的不超过 10 的正整数 $$n$$，要求你输出 $$2^n$$。不难吧？\n\n### 输入格式：\n\n输入在一行中给出一个不超过 10 的正整数 $$n$$。\n\n### 输出格式：\n\n在一行中按照格式  `2^n = 计算结果`  输出 $$2^n$$ 的值。\n\n### 输入样例：\n```in\n5\n```\n\n### 输出样例：\n```out\n2^5 = 32\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcbd"
  },
  "id": "1570609751279202325",
  "label": "",
  "score": 5,
  "problemId": "1090591322608398336",
  "title": "考试周",
  "content": "![ksz.jpg](~/6ea1fd32-0cef-4111-b263-5ef29393be2b.jpg)\n\n\n考试周快到了，浙江大学的电子屏又调皮了…… 本题请你帮小编写一个自动倒计时的程序，对给定的日期（例如“腊八”就对应 8）和倒计时天数（例如电子屏上的“四天之后”就对应 4），自动调整公式里的分母（例如 8/2=4 里面的那个 2）。\n\n### 输入格式：\n\n输入在一行中给出两个正整数：$$A$$ 是给定的日期，不超过 30；$$B$$ 是倒计时天数，不超过 10。\n\n### 输出格式：\n\n在一行中输出公式 $$A/X=B$$，其中 $$X$$ 是满足等式的数字，输出时保留小数点后 1 位即可。\n\n### 输入样例：\n```in\n8 3\n```\n\n### 输出样例：\n```out\n8/2.7=3\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 135,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c519beda734c4000973b208",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![ksz.jpg](~/6ea1fd32-0cef-4111-b263-5ef29393be2b.jpg)\n\n\n考试周快到了，浙江大学的电子屏又调皮了…… 本题请你帮小编写一个自动倒计时的程序，对给定的日期（例如“腊八”就对应 8）和倒计时天数（例如电子屏上的“四天之后”就对应 4），自动调整公式里的分母（例如 8/2=4 里面的那个 2）。\n\n### 输入格式：\n\n输入在一行中给出两个正整数：$$A$$ 是给定的日期，不超过 30；$$B$$ 是倒计时天数，不超过 10。\n\n### 输出格式：\n\n在一行中输出公式 $$A/X=B$$，其中 $$X$$ 是满足等式的数字，输出时保留小数点后 1 位即可。\n\n### 输入样例：\n```in\n8 3\n```\n\n### 输出样例：\n```out\n8/2.7=3\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcbe"
  },
  "id": "1570609751279202326",
  "label": "",
  "score": 5,
  "problemId": "1227594932566511616",
  "title": "猫是液体",
  "content": "\n![cat.JPG](~/d5ae2430-b2b4-47b9-aaf6-ad15f5babbf6.JPG)\n\n\n测量一个人的体积是很难的，但猫就不一样了。因为猫是液体，所以可以很容易地通过测量一个长方体容器的容积来得到容器里猫的体积。本题就请你完成这个计算。\n\n### 输入格式：\n\n输入在第一行中给出 3 个不超过 100 的正整数，分别对应容器的长、宽、高。\n\n### 输出格式：\n\n在一行中输出猫的体积。\n\n### 输入样例：\n```in\n23 15 20\n```\n\n### 输出样例：\n```out\n6900\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 73,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5e4406796d31f80005315c3c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![cat.JPG](~/d5ae2430-b2b4-47b9-aaf6-ad15f5babbf6.JPG)\n\n\n测量一个人的体积是很难的，但猫就不一样了。因为猫是液体，所以可以很容易地通过测量一个长方体容器的容积来得到容器里猫的体积。本题就请你完成这个计算。\n\n### 输入格式：\n\n输入在第一行中给出 3 个不超过 100 的正整数，分别对应容器的长、宽、高。\n\n### 输出格式：\n\n在一行中输出猫的体积。\n\n### 输入样例：\n```in\n23 15 20\n```\n\n### 输出样例：\n```out\n6900\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcbf"
  },
  "id": "1570609751279202327",
  "label": "",
  "score": 5,
  "problemId": "1378922457282224128",
  "title": "两小时学完C语言",
  "content": "\n![Q.JPG](~/b388314c-c7d3-48d8-befa-0fc45cf853a9.JPG)\n\n\n知乎上有个宝宝问：“两个小时内如何学完 C 语言？”当然，问的是“学完”并不是“学会”。\n\n假设一本 C 语言教科书有 N 个字，这个宝宝每分钟能看 K 个字，看了 M 分钟。还剩多少字没有看？\n\n### 输入格式：\n\n输入在一行中给出 3 个正整数，分别是 N（不超过 400 000），教科书的总字数；K（不超过 3 000），是宝宝每分钟能看的字数；M（不超过 120），是宝宝看书的分钟数。\n\n题目保证宝宝看完的字数不超过 N。\n\n### 输出格式：\n\n在一行中输出宝宝还没有看的字数。\n\n### 输入样例：\n```in\n100000 1000 72\n```\n\n### 输出样例：\n```out\n28000\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 62,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "606a8d4ebe4f740007ab6d7b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![Q.JPG](~/b388314c-c7d3-48d8-befa-0fc45cf853a9.JPG)\n\n\n知乎上有个宝宝问：“两个小时内如何学完 C 语言？”当然，问的是“学完”并不是“学会”。\n\n假设一本 C 语言教科书有 N 个字，这个宝宝每分钟能看 K 个字，看了 M 分钟。还剩多少字没有看？\n\n### 输入格式：\n\n输入在一行中给出 3 个正整数，分别是 N（不超过 400 000），教科书的总字数；K（不超过 3 000），是宝宝每分钟能看的字数；M（不超过 120），是宝宝看书的分钟数。\n\n题目保证宝宝看完的字数不超过 N。\n\n### 输出格式：\n\n在一行中输出宝宝还没有看的字数。\n\n### 输入样例：\n```in\n100000 1000 72\n```\n\n### 输出样例：\n```out\n28000\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc0"
  },
  "id": "1570609751279202328",
  "label": "",
  "score": 5,
  "problemId": "6291",
  "title": "日期格式化",
  "content": "世界上不同国家有不同的写日期的习惯。比如美国人习惯写成“月-日-年”，而中国人习惯写成“年-月-日”。下面请你写个程序，自动把读入的美国格式的日期改写成中国习惯的日期。\n\n### 输入格式：\n\n输入在一行中按照“mm-dd-yyyy”的格式给出月、日、年。题目保证给出的日期是1900年元旦至今合法的日期。\n\n### 输出格式：\n\n在一行中按照“yyyy-mm-dd”的格式给出年、月、日。\n\n### 输入样例：\n```in\n03-15-2017\n```\n\n### 输出样例：\n```out\n2017-03-15\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 122,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5d93d1de004a0fd35c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "世界上不同国家有不同的写日期的习惯。比如美国人习惯写成“月-日-年”，而中国人习惯写成“年-月-日”。下面请你写个程序，自动把读入的美国格式的日期改写成中国习惯的日期。\n\n### 输入格式：\n\n输入在一行中按照“mm-dd-yyyy”的格式给出月、日、年。题目保证给出的日期是1900年元旦至今合法的日期。\n\n### 输出格式：\n\n在一行中按照“yyyy-mm-dd”的格式给出年、月、日。\n\n### 输入样例：\n```in\n03-15-2017\n```\n\n### 输出样例：\n```out\n2017-03-15\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc1"
  },
  "id": "1570609751279202329",
  "label": "",
  "score": 5,
  "problemId": "1510522990864830464",
  "title": "种钻石",
  "content": "\n![d.jpg](~/483c129d-c67a-4893-ab74-e2fa1453180e.jpg)\n\n\n2019年10月29日，中央电视台专题报道，中国科学院在培育钻石领域，取得科技突破。科学家们用金刚石的籽晶片作为种子，利用甲烷气体在能量作用下形成碳的等离子体，慢慢地沉积到钻石种子上，一周“种”出了一颗 1 克拉大小的钻石。\n\n本题给出钻石的需求量和人工培育钻石的速度，请你计算出货需要的时间。\n\n### 输入格式：\n\n输入在一行中给出钻石的需求量 $$N$$（不超过 $$10^7$$ 的正整数，以`微克拉`为单位）和人工培育钻石的速度 $$v$$（$$1\\le v \\le 200$$，以`微克拉/天`为单位的整数）。\n\n### 输出格式：\n\n在一行中输出培育 $$N$$ 微克拉钻石需要的整数天数。不到一天的时间不算在内。\n\n### 输入样例：\n```in\n102000 130\n```\n\n### 输出样例：\n```out\n784\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 68,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "62494fd9f666296c039140e5",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![d.jpg](~/483c129d-c67a-4893-ab74-e2fa1453180e.jpg)\n\n\n2019年10月29日，中央电视台专题报道，中国科学院在培育钻石领域，取得科技突破。科学家们用金刚石的籽晶片作为种子，利用甲烷气体在能量作用下形成碳的等离子体，慢慢地沉积到钻石种子上，一周“种”出了一颗 1 克拉大小的钻石。\n\n本题给出钻石的需求量和人工培育钻石的速度，请你计算出货需要的时间。\n\n### 输入格式：\n\n输入在一行中给出钻石的需求量 $$N$$（不超过 $$10^7$$ 的正整数，以`微克拉`为单位）和人工培育钻石的速度 $$v$$（$$1\\le v \\le 200$$，以`微克拉/天`为单位的整数）。\n\n### 输出格式：\n\n在一行中输出培育 $$N$$ 微克拉钻石需要的整数天数。不到一天的时间不算在内。\n\n### 输入样例：\n```in\n102000 130\n```\n\n### 输出样例：\n```out\n784\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc2"
  },
  "id": "1570609751279202330",
  "label": "",
  "score": 5,
  "problemId": "1390947478490071040",
  "title": "自动编程",
  "content": "输出语句是每个程序员首先要掌握的语句。Python 的输出语句很简单，只要写一个 `print(X)` 即可，其中 `X` 是需要输出的内容。\n\n本题就请你写一个自动编程机，对任何一个要输出的整数 N，给出输出这个整数的 Python 语句。\n\n### 输入格式：\n\n输入给出一个不超过 $$10^5$$ 的正整数。\n\n### 输出格式：\n\n在一行中打印输出这个整数的 Python 语句，其中不包含任何空格。\n\n### 输入样例：\n```in\n520\n\n```\n\n### 输出样例：\n```out\nprint(520)\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 64,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "60964c83567b020007b4880b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "输出语句是每个程序员首先要掌握的语句。Python 的输出语句很简单，只要写一个 `print(X)` 即可，其中 `X` 是需要输出的内容。\n\n本题就请你写一个自动编程机，对任何一个要输出的整数 N，给出输出这个整数的 Python 语句。\n\n### 输入格式：\n\n输入给出一个不超过 $$10^5$$ 的正整数。\n\n### 输出格式：\n\n在一行中打印输出这个整数的 Python 语句，其中不包含任何空格。\n\n### 输入样例：\n```in\n520\n\n```\n\n### 输出样例：\n```out\nprint(520)\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc3"
  },
  "id": "1570609751279202331",
  "label": "",
  "score": 5,
  "problemId": "3585",
  "title": "后天",
  "content": "如果今天是星期三，后天就是星期五；如果今天是星期六，后天就是星期一。我们用数字1到7对应星期一到星期日。给定某一天，请你输出那天的“后天”是星期几。\n\n### 输入格式：\n\n输入第一行给出一个正整数`D`（1 $$\\le$$ `D` $$\\le$$ 7），代表星期里的某一天。\n\n### 输出格式：\n\n在一行中输出`D`天的后天是星期几。\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n5\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 94,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5393d1de004a0fcee4",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "如果今天是星期三，后天就是星期五；如果今天是星期六，后天就是星期一。我们用数字1到7对应星期一到星期日。给定某一天，请你输出那天的“后天”是星期几。\n\n### 输入格式：\n\n输入第一行给出一个正整数`D`（1 $$\\le$$ `D` $$\\le$$ 7），代表星期里的某一天。\n\n### 输出格式：\n\n在一行中输出`D`天的后天是星期几。\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n5\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc4"
  },
  "id": "1570609751279202332",
  "label": "",
  "score": 5,
  "problemId": "965226734617616384",
  "title": "打折",
  "content": "去商场淘打折商品时，计算打折以后的价钱是件颇费脑子的事情。例如原价 ￥988，标明打 7 折，则折扣价应该是 ￥988 x 70% = ￥691.60。本题就请你写个程序替客户计算折扣价。\n\n### 输入格式：\n\n输入在一行中给出商品的原价（不超过1万元的正整数）和折扣（为[1, 9]区间内的整数），其间以空格分隔。\n\n### 输出格式：\n\n在一行中输出商品的折扣价，保留小数点后 2 位。\n\n### 输入样例：\n```in\n988 7\n```\n\n### 输出样例：\n```out\n691.60\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 88,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5a89890ee54e53000bac2303",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "去商场淘打折商品时，计算打折以后的价钱是件颇费脑子的事情。例如原价 ￥988，标明打 7 折，则折扣价应该是 ￥988 x 70% = ￥691.60。本题就请你写个程序替客户计算折扣价。\n\n### 输入格式：\n\n输入在一行中给出商品的原价（不超过1万元的正整数）和折扣（为[1, 9]区间内的整数），其间以空格分隔。\n\n### 输出格式：\n\n在一行中输出商品的折扣价，保留小数点后 2 位。\n\n### 输入样例：\n```in\n988 7\n```\n\n### 输出样例：\n```out\n691.60\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc5"
  },
  "id": "1570609751279202333",
  "label": "",
  "score": 5,
  "problemId": "1109496501997522944",
  "title": "心理阴影面积",
  "content": "\n![xlyy.JPG](~/80a1c6dc-7d5f-4726-ae03-fbb6e8bfe1a5.JPG)\n\n\n这是一幅心理阴影面积图。我们都以为自己可以匀速前进（图中蓝色直线），而拖延症晚期的我们往往执行的是最后时刻的疯狂赶工（图中的红色折线）。由红、蓝线围出的面积，就是我们在做作业时的心理阴影面积。\n\n现给出红色拐点的坐标 $$(x,y)$$，要求你算出这个心理阴影面积。\n\n### 输入格式：\n\n输入在一行中给出 2 个不超过 100 的正整数 $$x$$ 和 $$y$$，并且保证有 $$x>y$$。这里假设横、纵坐标的最大值（即截止日和最终完成度）都是 100。\n\n### 输出格式：\n\n在一行中输出心理阴影面积。\n\n友情提醒：三角形的面积 = 底边长 x 高 / 2；矩形面积 = 底边长 x 高。嫑想得太复杂，这是一道 5 分考减法的题……\n\n### 输入样例：\n```in\n90 10\n```\n\n### 输出样例：\n```out\n4000\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 85,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c9662bf18b10500075a1506",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![xlyy.JPG](~/80a1c6dc-7d5f-4726-ae03-fbb6e8bfe1a5.JPG)\n\n\n这是一幅心理阴影面积图。我们都以为自己可以匀速前进（图中蓝色直线），而拖延症晚期的我们往往执行的是最后时刻的疯狂赶工（图中的红色折线）。由红、蓝线围出的面积，就是我们在做作业时的心理阴影面积。\n\n现给出红色拐点的坐标 $$(x,y)$$，要求你算出这个心理阴影面积。\n\n### 输入格式：\n\n输入在一行中给出 2 个不超过 100 的正整数 $$x$$ 和 $$y$$，并且保证有 $$x>y$$。这里假设横、纵坐标的最大值（即截止日和最终完成度）都是 100。\n\n### 输出格式：\n\n在一行中输出心理阴影面积。\n\n友情提醒：三角形的面积 = 底边长 x 高 / 2；矩形面积 = 底边长 x 高。嫑想得太复杂，这是一道 5 分考减法的题……\n\n### 输入样例：\n```in\n90 10\n```\n\n### 输出样例：\n```out\n4000\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc6"
  },
  "id": "1570609751279202334",
  "label": "",
  "score": 10,
  "problemId": "1225423541779976192",
  "title": "整数算术运算",
  "content": "本题要求编写程序，计算并输出2个正整数的和、差、积、商与余数。题目保证输入和输出全部在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出2个正整数A和B。\n\n### 输出格式:\n\n在5行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商与余数。\n\n### 输入样例:\n\n```in\n5 3\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n5 + 3 = 8\n5 - 3 = 2\n5 * 3 = 15\n5 / 3 = 1\n5 % 3 = 2\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 144,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5e3c20326d31f80005314cb7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算并输出2个正整数的和、差、积、商与余数。题目保证输入和输出全部在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出2个正整数A和B。\n\n### 输出格式:\n\n在5行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商与余数。\n\n### 输入样例:\n\n```in\n5 3\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n5 + 3 = 8\n5 - 3 = 2\n5 * 3 = 15\n5 / 3 = 1\n5 % 3 = 2\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc7"
  },
  "id": "1570609751279202335",
  "label": "",
  "score": 10,
  "problemId": "488",
  "title": "计算存款利息",
  "content": "本题目要求计算存款利息，计算公式为$$interest = money\\times (1+rate)^{year} - money$$，其中$$interest$$为存款到期时的利息（税前），$$money$$是存款金额，$$year$$是存期，$$rate$$是年利率。\n\n### 输入格式：\n\n输入在一行中顺序给出三个正实数$$money$$、$$year$$和$$rate$$，以空格分隔。\n\n### 输出格式：\n\n在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。\n\n### 输入样例：\n```in\n1000 3 0.025\n```\n\n### 输出样例：\n```out\ninterest = 76.89\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 239,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc6b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题目要求计算存款利息，计算公式为$$interest = money\\times (1+rate)^{year} - money$$，其中$$interest$$为存款到期时的利息（税前），$$money$$是存款金额，$$year$$是存期，$$rate$$是年利率。\n\n### 输入格式：\n\n输入在一行中顺序给出三个正实数$$money$$、$$year$$和$$rate$$，以空格分隔。\n\n### 输出格式：\n\n在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。\n\n### 输入样例：\n```in\n1000 3 0.025\n```\n\n### 输出样例：\n```out\ninterest = 76.89\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc8"
  },
  "id": "1570609751279202336",
  "label": "",
  "score": 10,
  "problemId": "1080457179975778304",
  "title": "冠军魔术",
  "content": "![魔术.jpg](~/a4b1f9c6-007d-4137-aa94-28b343aa3c34.jpg)\n\n\n2018年FISM（世界魔术大会）近景总冠军简纶廷的表演中有一个情节：以桌面上一根带子为界，当他将纸牌从带子的一边推到另一边时，纸牌会变成硬币；把硬币推回另一边会变成纸牌。\n\n这里我们假设纸牌会变成等量的硬币，而硬币变成纸牌时，纸牌的数量会加倍。那么给定纸牌的初始数量，当他来回推了 N 次（来/回各算一次）后，手里拿的是纸牌还是硬币？数量是多少？\n\n\n### 输入格式：\n\n输入在一行里给出两个正整数，分别是纸牌的初始数量和魔术师推送的次数。这里假设初始状态下魔术师手里全是纸牌。\n\n### 输出格式：\n\n如果最后魔术师手里是纸牌，输出 0 和纸牌数量；如果是硬币，则输出 1 和硬币数量。数字间须有 1 个空格。题目保证结果数值不超出整型范围（即 $$2^{31}-1$$）。\n\n### 输入样例 1：\n```in\n3 7\n```\n\n### 输出样例 1：\n```out\n1 24\n```\n\n### 输入样例 2：\n```in\n8 4\n```\n\n### 输出样例 2：\n```out\n0 32\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 134,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c2cbdc513e9450009193f06",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![魔术.jpg](~/a4b1f9c6-007d-4137-aa94-28b343aa3c34.jpg)\n\n\n2018年FISM（世界魔术大会）近景总冠军简纶廷的表演中有一个情节：以桌面上一根带子为界，当他将纸牌从带子的一边推到另一边时，纸牌会变成硬币；把硬币推回另一边会变成纸牌。\n\n这里我们假设纸牌会变成等量的硬币，而硬币变成纸牌时，纸牌的数量会加倍。那么给定纸牌的初始数量，当他来回推了 N 次（来/回各算一次）后，手里拿的是纸牌还是硬币？数量是多少？\n\n\n### 输入格式：\n\n输入在一行里给出两个正整数，分别是纸牌的初始数量和魔术师推送的次数。这里假设初始状态下魔术师手里全是纸牌。\n\n### 输出格式：\n\n如果最后魔术师手里是纸牌，输出 0 和纸牌数量；如果是硬币，则输出 1 和硬币数量。数字间须有 1 个空格。题目保证结果数值不超出整型范围（即 $$2^{31}-1$$）。\n\n### 输入样例 1：\n```in\n3 7\n```\n\n### 输出样例 1：\n```out\n1 24\n```\n\n### 输入样例 2：\n```in\n8 4\n```\n\n### 输出样例 2：\n```out\n0 32\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcc9"
  },
  "id": "1570609751279202337",
  "label": "",
  "score": 10,
  "problemId": "484",
  "title": "整数152的各位数字",
  "content": "本题要求编写程序，输出整数152的个位数字、十位数字和百位数字的值。\n\n### 输入格式：\n\n本题无输入。\n\n### 输出格式：\n\n按照以下格式输出：\n```\n152 = 个位数字 + 十位数字*10 + 百位数字*100\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 105,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc67",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，输出整数152的个位数字、十位数字和百位数字的值。\n\n### 输入格式：\n\n本题无输入。\n\n### 输出格式：\n\n按照以下格式输出：\n```\n152 = 个位数字 + 十位数字*10 + 百位数字*100\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcca"
  },
  "id": "1570609751279202338",
  "label": "",
  "score": 10,
  "problemId": "597",
  "title": "逆序的三位数",
  "content": "程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。\n\n### 输入格式：\n\n每个测试是一个3位的正整数。\n\n### 输出格式：\n\n输出按位逆序的数。\n\n### 输入样例：\n```in\n123\n```\n\n### 输出样例：\n```out\n321\n```\n\n**鸣谢安阳师范学院软件学院李康康同学补充数据！**",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 94,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5bc8769d4ce2af000b0e0210",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。\n\n### 输入格式：\n\n每个测试是一个3位的正整数。\n\n### 输出格式：\n\n输出按位逆序的数。\n\n### 输入样例：\n```in\n123\n```\n\n### 输出样例：\n```out\n321\n```\n\n**鸣谢安阳师范学院软件学院李康康同学补充数据！**",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bccb"
  },
  "id": "1570609751279202339",
  "label": "",
  "score": 15,
  "problemId": "595",
  "title": "厘米换算英尺英寸",
  "content": "如果已知英制长度的英尺$$foot$$和英寸$$inch$$的值，那么对应的米是$$(foot+inch/12)\\times 0.3048$$。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。\n\n### 输入格式：\n\n输入在一行中给出1个正整数，单位是厘米。\n\n### 输出格式：\n\n在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于12。\n\n### 输入样例：\n```in\n170\n```\n\n### 输出样例：\n```out\n5 6\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 198,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4893d1de004a0fccd6",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "如果已知英制长度的英尺$$foot$$和英寸$$inch$$的值，那么对应的米是$$(foot+inch/12)\\times 0.3048$$。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。\n\n### 输入格式：\n\n输入在一行中给出1个正整数，单位是厘米。\n\n### 输出格式：\n\n在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于12。\n\n### 输入样例：\n```in\n170\n```\n\n### 输出样例：\n```out\n5 6\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bccc"
  },
  "id": "1570609751279202340",
  "label": "",
  "score": 15,
  "problemId": "486",
  "title": "计算火车运行时间",
  "content": "本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。\n\n### 输入格式：\n\n输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。\n\n### 输出格式：\n\n在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。\n\n### 输入样例：\n```in\n1201 1530\n```\n\n### 输出样例：\n```out\n03:29\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 153,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc69",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。\n\n### 输入格式：\n\n输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。\n\n### 输出格式：\n\n在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。\n\n### 输入样例：\n```in\n1201 1530\n```\n\n### 输出样例：\n```out\n03:29\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bccd"
  },
  "id": "1570609751279202341",
  "label": "",
  "score": 15,
  "problemId": "596",
  "title": "然后是几点",
  "content": "有时候人们用四位数字表示一个时间，比如 `1106` 表示 11 点零 6 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。\n\n读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 5 点 30 分表示为 `530`；0 点 30 分表示为 `030`。注意，第二个数字表示的分钟数可能超过 60，也可能是负数。\n\n### 输入格式：\n\n输入在一行中给出 2 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 5 点 30 分表示为 `530`；0 点 30 分表示为 `030`。流逝的分钟数可能超过 60，也可能是负数。\n\n### 输出格式：\n\n输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。\n\n### 输入样例：\n```in\n1120 110\n```\n\n### 输出样例：\n```out\n1310\n```\n\n**鸣谢燕山大学穆运峰老师、用户任钰补充数据！**",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 258,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4893d1de004a0fccd7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "有时候人们用四位数字表示一个时间，比如 `1106` 表示 11 点零 6 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。\n\n读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 5 点 30 分表示为 `530`；0 点 30 分表示为 `030`。注意，第二个数字表示的分钟数可能超过 60，也可能是负数。\n\n### 输入格式：\n\n输入在一行中给出 2 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 5 点 30 分表示为 `530`；0 点 30 分表示为 `030`。流逝的分钟数可能超过 60，也可能是负数。\n\n### 输出格式：\n\n输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。\n\n### 输入样例：\n```in\n1120 110\n```\n\n### 输出样例：\n```out\n1310\n```\n\n**鸣谢燕山大学穆运峰老师、用户任钰补充数据！**",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bcce"
  },
  "id": "1570609751279202342",
  "label": "",
  "score": 15,
  "problemId": "1190972969213767680",
  "title": "英文字母替换加密（大小写转换+后移1位）",
  "content": "本题要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a->B、b->C、…、z->A、A->b、B->c、…、Z->a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。\n\n### 输入格式:\n\n输入一行字符，以回车符 '\\n'作为 结束符。\n\n### 输出格式:\n\n将输入的一行字符中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母后输出，其他字符按原样输出。\n\n### 输入样例:\n\n在这里给出一组输入。例如：\n\n```in\nReold  Z123?\n\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\nsFPME  a123?\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 194,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5dbecb9a1e3bd10005aa83e5",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a->B、b->C、…、z->A、A->b、B->c、…、Z->a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。\n\n### 输入格式:\n\n输入一行字符，以回车符 '\\n'作为 结束符。\n\n### 输出格式:\n\n将输入的一行字符中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母后输出，其他字符按原样输出。\n\n### 输入样例:\n\n在这里给出一组输入。例如：\n\n```in\nReold  Z123?\n\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\nsFPME  a123?\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cba1fb4a7dada3b8bccf"
  },
  "id": "1570609751279202343",
  "label": "",
  "score": 15,
  "problemId": "1065",
  "title": "掉入陷阱的数字",
  "content": "对任意一个自然数$$N_0$$，先将其各位数字相加求和，再将其和乘以3后加上1，变成一个新自然数$$N_1$$；然后对$$N_1$$重复这种操作，可以产生新自然数$$N_2$$；……多次重复这种操作，运算结果最终会得到一个固定不变的数$$N_k$$，就像掉入一个数字“陷阱”。\n\n本题要求对输入的自然数，给出其掉入“陷阱”的过程。\n\n### 输入格式:\n\n在一行内给出一个自然数$$N_0$$（$$N_0 <$$30000）。\n\n### 输出格式:\n\n对于输入的$$N_0$$，逐行输出其掉入陷阱的步骤。第$$i$$行描述$$N$$掉入陷阱的第$$i$$步，格式为： $$i$$:$$N_i$$ （$$i\\ge 1$$）。当某一步得到的自然数结果$$N_k$$($$k\\ge1$$)与上一步$$N_{k-1}$$相同时，停止输出。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n1:16\n2:22\n3:13\n4:13\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "青岛大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 252,
  "problemSetId": "1570609751203704832",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4c93d1de004a0fcd2a",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "对任意一个自然数$$N_0$$，先将其各位数字相加求和，再将其和乘以3后加上1，变成一个新自然数$$N_1$$；然后对$$N_1$$重复这种操作，可以产生新自然数$$N_2$$；……多次重复这种操作，运算结果最终会得到一个固定不变的数$$N_k$$，就像掉入一个数字“陷阱”。\n\n本题要求对输入的自然数，给出其掉入“陷阱”的过程。\n\n### 输入格式:\n\n在一行内给出一个自然数$$N_0$$（$$N_0 <$$30000）。\n\n### 输出格式:\n\n对于输入的$$N_0$$，逐行输出其掉入陷阱的步骤。第$$i$$行描述$$N$$掉入陷阱的第$$i$$步，格式为： $$i$$:$$N_i$$ （$$i\\ge 1$$）。当某一步得到的自然数结果$$N_k$$($$k\\ge1$$)与上一步$$N_{k-1}$$相同时，停止输出。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n1:16\n2:22\n3:13\n4:13\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd0"
  },
  "id": "1573619795449196544",
  "label": "",
  "score": 2,
  "problemId": "1055",
  "title": "After running the following piece of code, the value of `s` is _",
  "content": "After running the following piece of code, the value of `s` is __.   @[](2)\n\n```\nint i=5, s=0;\ndo {\n    if (i%2) continue;\n    else s += i;\n} while(--i);\n```\n\n\nA. 15\nB. 9\nC. 6\nD. 5",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "After running the following piece of code, the value of `s` is __.\n\n```\nint i=5, s=0;\ndo {\n    if (i%2) continue;\n    else s += i;\n} while(--i);\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd1"
  },
  "id": "1573619795449196545",
  "label": "",
  "score": 2,
  "problemId": "1103",
  "title": "下列程序段执行后`s`值为__。",
  "content": "下列程序段执行后`s`值为__。@[](2)\n\n```\nint i=5, s=0;\nwhile(i--)  \n    if (i%2) continue; \n    else s+=i;\n```\n\nA. 15\t\nB. 10\t\nC. 9\t\nD. 6",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "下列程序段执行后`s`值为__。\n\n```\nint i=5, s=0;\nwhile(i--)\n    if (i%2) continue;\n    else s+=i;\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd2"
  },
  "id": "1573619795449196546",
  "label": "",
  "score": 1,
  "problemId": "5138",
  "title": "在嵌套使用if语句时，C语言规定else总是（）。   ",
  "content": "在嵌套使用if语句时，C语言规定else总是（）。   @[](1)\n\nA. 和之前与其具有相同缩进位置的if配对\nB. 和之前与其最近的if配对\nC. 和之前与其最近的且不带else的if配对\nD. 和之前的第一个if配对",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "在嵌套使用if语句时，C语言规定else总是（）。   \n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd3"
  },
  "id": "1573619795449196547",
  "label": "",
  "score": 1,
  "problemId": "5139",
  "title": "下列叙述中正确的是（）。   ",
  "content": "下列叙述中正确的是（）。   @[](1)\n\nA. break语句只能用于switch语句\nB. 在switch语句中必须使用default\nC. break语句必须与switch语句中的case配对使用\nD. 在switch语句中，不一定使用break语句",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "69",
          "name": "switch",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "下列叙述中正确的是（）。   \n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd4"
  },
  "id": "1573619795449196548",
  "label": "",
  "score": 1,
  "problemId": "5164",
  "title": "下列程序段的输出结果是（）。   ",
  "content": "下列程序段的输出结果是（）。   @[](1)\n```\nint main(void)\n{   \n      int  a = 2, b = -1, c = 2;\n      \n      if(a < b)\n            if(b < 0)  \n                  c = 0;\n      else  c++;\n      printf(\"%d\\n\",c);\t\n      \n      return 0;\n}\n\n```\n\nA. 0\nB. 1\nC. 2\nD. 3",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "下列程序段的输出结果是（）。   \n```\nint main(void)\n{   \n      int  a = 2, b = -1, c = 2;\n      \n      if(a < b)\n            if(b < 0)  \n                  c = 0;\n      else  c++;\n      printf(\"%d\\n\",c);\t\n      \n      return 0;\n}\n\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd5"
  },
  "id": "1573619795449196549",
  "label": "",
  "score": 1,
  "problemId": "5165",
  "title": "下列程序段的输出结果是 （）。   ",
  "content": "下列程序段的输出结果是 （）。   @[](1)\n```\nint main(void)\n{ \t\n      int x = 1, a = 0, b = 0;\n      \n      switch(x)\t\t\n      {\n            case 0:   b++;\n            case 1:   a++;\n            case 2:   a++; b++;\t\n      }\n      printf(\"a=%d,b=%d\\n\",a,b);\t\t\n\n      return 0;\n}\n\n```\n\nA. a=2,b=1\nB. a=1,b=1\nC. a=1,b=0\nD. a=2,b=2",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "69",
          "name": "switch",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "下列程序段的输出结果是 （）。   \n```\nint main(void)\n{ \t\n      int x = 1, a = 0, b = 0;\n      \n      switch(x)\t\t\n      {\n            case 0:   b++;\n            case 1:   a++;\n            case 2:   a++; b++;\t\n      }\n      printf(\"a=%d,b=%d\\n\",a,b);\t\t\n\n      return 0;\n}\n\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd6"
  },
  "id": "1573619795449196550",
  "label": "",
  "score": 2,
  "problemId": "924653915557863424",
  "title": "能正确表示逻辑关系\"a≥10 或 a≤0\"的C语言表达式是（）。 ",
  "content": "能正确表示逻辑关系\"a≥10 或 a≤0\"的C语言表达式是（）。 @[](2)\nA. a>=10 or a<=0\nB. a>=0 | a<=10\nC. a>=10 && a<=0\nD. a>=10 || a<=0\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "中国民用航空飞行学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "能正确表示逻辑关系\"a≥10 或 a≤0\"的C语言表达式是（）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd7"
  },
  "id": "1573619795449196551",
  "label": "",
  "score": 2,
  "problemId": "1251147504444915712",
  "title": "能正确表示“当x的取值在[-58,-40]和[40,58]范围内为真，否则为假”的表达式是（）。 ",
  "content": "能正确表示“当x的取值在[-58,-40]和[40,58]范围内为真，否则为假”的表达式是（）。@[](2) \nA. (x>= -58) && (x<= -40) && (x>=40) &&(x<=58) \nB. (x>= -58) || (x<= -40) || (x>=40) || (x<=58)\nC. (x>= -58) && (x<= -40) || (x>=40) && (x<=58)\nD. (x>= -58) | |(x<= -40) && (x>=40) || (x<=58)\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "中国人民解放军陆军工程大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "能正确表示“当x的取值在[-58,-40]和[40,58]范围内为真，否则为假”的表达式是（）。 \n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd8"
  },
  "id": "1573619795449196552",
  "label": "",
  "score": 2,
  "problemId": "1393045668840546304",
  "title": "当字符型变量ch 取何值（或何范围）时输出“YES”",
  "content": "当字符型变量ch 取何值（或何范围）时输出“YES”\n```\nchar ch;\nscanf(\"%c\",&ch);\nif(ch<='A'&&ch>='Z')\nprintf(\"NO\"); \nelse printf(\"YES\");\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "中国人民解放军陆军工程大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "当字符型变量ch 取何值（或何范围）时输出“YES”\n```\nchar ch;\nscanf(\"%c\",&ch);\nif(ch<='A'&&ch>='Z')\nprintf(\"NO\"); \nelse printf(\"YES\");\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcd9"
  },
  "id": "1573619795449196553",
  "label": "",
  "score": 2,
  "problemId": "1393047366518681600",
  "title": "当字符型变量ch 取何值（或何范围）时输出“YES”",
  "content": "当字符型变量ch 取何值（或何范围）时输出“YES”\n```\nchar ch;\nscanf(\"%c\",&ch);\nif(ch>='A'&&ch<='Z')\nif(ch!='I'&&ch!='K')printf(\"NO\");\nelse printf(\"YES\");\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "中国人民解放军陆军工程大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "当字符型变量ch 取何值（或何范围）时输出“YES”\n```\nchar ch;\nscanf(\"%c\",&ch);\nif(ch>='A'&&ch<='Z')\nif(ch!='I'&&ch!='K')printf(\"NO\");\nelse printf(\"YES\");\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcda"
  },
  "id": "1573619795449196554",
  "label": "",
  "score": 10,
  "problemId": "1151029863834054656",
  "title": "真的恭喜你",
  "content": "当别人告诉你自己考了 x 分的时候，你要回答说：“恭喜你考了 x 分！”比如小明告诉你他考了90分，你就用汉语拼音打出来 `gong xi ni kao le 90 fen!`。\n\n但是如果小明没考好，比如只考了 20 分，你也“恭喜”人家就不对了。这时候你应该安慰他说：“考了 20 分别泄气！”用汉语拼音写出来就是 `kao le 20 fen bie xie qi!`。\n\n### 输入格式：\n\n输入在一行里给出一位小朋友的分数。这个分数是一个 0 到 100 之间的整数。\n\n### 输出格式：\n\n在一行中输出你对这位小朋友说的话。如果人家考到不低于 90 分，就说 `gong xi ni kao le X fen!`；如果不到 90 分，就说 `kao le X fen bie xie qi!`。其中 `X` 是小朋友输入的分数。\n\n### 输入样例 1：\n```in\n95\n```\n\n### 输出样例 1：\n```out\ngong xi ni kao le 95 fen!\n```\n\n### 输入样例 2：\n```in\n89\n```\n\n### 输出样例 2：\n```out\nkao le 89 fen bie xie qi!\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 97,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5d2d88cbc70564000737a45b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "当别人告诉你自己考了 x 分的时候，你要回答说：“恭喜你考了 x 分！”比如小明告诉你他考了90分，你就用汉语拼音打出来 `gong xi ni kao le 90 fen!`。\n\n但是如果小明没考好，比如只考了 20 分，你也“恭喜”人家就不对了。这时候你应该安慰他说：“考了 20 分别泄气！”用汉语拼音写出来就是 `kao le 20 fen bie xie qi!`。\n\n### 输入格式：\n\n输入在一行里给出一位小朋友的分数。这个分数是一个 0 到 100 之间的整数。\n\n### 输出格式：\n\n在一行中输出你对这位小朋友说的话。如果人家考到不低于 90 分，就说 `gong xi ni kao le X fen!`；如果不到 90 分，就说 `kao le X fen bie xie qi!`。其中 `X` 是小朋友输入的分数。\n\n### 输入样例 1：\n```in\n95\n```\n\n### 输出样例 1：\n```out\ngong xi ni kao le 95 fen!\n```\n\n### 输入样例 2：\n```in\n89\n```\n\n### 输出样例 2：\n```out\nkao le 89 fen bie xie qi!\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcdb"
  },
  "id": "1573619795449196555",
  "label": "",
  "score": 10,
  "problemId": "1224976127319232512",
  "title": "降价提醒机器人",
  "content": "小 T 想买一个玩具很久了，但价格有些高，他打算等便宜些再买。但天天盯着购物网站很麻烦，请你帮小 T 写一个降价提醒机器人，当玩具的当前价格比他设定的价格便宜时发出提醒。\n\n\n### 输入格式：\n\n输入第一行是两个正整数 $$N$$ 和 $$M$$ ($$1 \\le N \\le 100, 0 \\le M \\le 1000$$)，表示有 $$N$$ 条价格记录，小 T 设置的价格为 $$M$$。\n\n接下来 $$N$$ 行，每行有一个实数 $$P_i$$（$$-1000.0 < P_i < 1000.0$$），表示一条价格记录。\n\n### 输出格式：\n\n对每一条比设定价格 $$M$$ 便宜的价格记录 `P`，在一行中输出 `On Sale! P`，其中 `P` 输出到小数点后 1 位。\n\n### 输入样例：\n```in\n4 99\n98.0\n97.0\n100.2\n98.9\n```\n\n### 输出样例：\n```out\nOn Sale! 98.0\nOn Sale! 97.0\nOn Sale! 98.9\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "杭州百腾教育科技有限公司"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 119,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5f291493ac389f0007015559",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "小 T 想买一个玩具很久了，但价格有些高，他打算等便宜些再买。但天天盯着购物网站很麻烦，请你帮小 T 写一个降价提醒机器人，当玩具的当前价格比他设定的价格便宜时发出提醒。\n\n\n### 输入格式：\n\n输入第一行是两个正整数 $$N$$ 和 $$M$$ ($$1 \\le N \\le 100, 0 \\le M \\le 1000$$)，表示有 $$N$$ 条价格记录，小 T 设置的价格为 $$M$$。\n\n接下来 $$N$$ 行，每行有一个实数 $$P_i$$（$$-1000.0 < P_i < 1000.0$$），表示一条价格记录。\n\n### 输出格式：\n\n对每一条比设定价格 $$M$$ 便宜的价格记录 `P`，在一行中输出 `On Sale! P`，其中 `P` 输出到小数点后 1 位。\n\n### 输入样例：\n```in\n4 99\n98.0\n97.0\n100.2\n98.9\n```\n\n### 输出样例：\n```out\nOn Sale! 98.0\nOn Sale! 97.0\nOn Sale! 98.9\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcdc"
  },
  "id": "1573619795449196556",
  "label": "",
  "score": 10,
  "problemId": "1378923205529280512",
  "title": "强迫症",
  "content": "小强在统计一个小区里居民的出生年月，但是发现大家填写的生日格式不统一，例如有的人写 `199808`，有的人只写 `9808`。有强迫症的小强请你写个程序，把所有人的出生年月都整理成 `年年年年-月月` 格式。对于那些只写了年份后两位的信息，我们默认小于 `22` 都是 `20` 开头的，其他都是 `19` 开头的。\n\n### 输入格式：\n\n输入在一行中给出一个出生年月，为一个 6 位或者 4 位数，题目保证是 1000 年 1 月到 2021 年 12 月之间的合法年月。\n\n### 输出格式：\n\n在一行中按标准格式 `年年年年-月月` 将输入的信息整理输出。\n\n### 输入样例 1：\n```in\n9808\n```\n\n### 输出样例 1：\n```out\n1998-08\n```\n\n### 输入样例 2：\n```in\n0510\n```\n\n### 输出样例 2：\n```out\n2005-10\n```\n\n### 输入样例 3：\n```in\n196711\n```\n\n### 输出样例 3：\n```out\n1967-11\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 166,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "606a8e018f44070006c0a507",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "小强在统计一个小区里居民的出生年月，但是发现大家填写的生日格式不统一，例如有的人写 `199808`，有的人只写 `9808`。有强迫症的小强请你写个程序，把所有人的出生年月都整理成 `年年年年-月月` 格式。对于那些只写了年份后两位的信息，我们默认小于 `22` 都是 `20` 开头的，其他都是 `19` 开头的。\n\n### 输入格式：\n\n输入在一行中给出一个出生年月，为一个 6 位或者 4 位数，题目保证是 1000 年 1 月到 2021 年 12 月之间的合法年月。\n\n### 输出格式：\n\n在一行中按标准格式 `年年年年-月月` 将输入的信息整理输出。\n\n### 输入样例 1：\n```in\n9808\n```\n\n### 输出样例 1：\n```out\n1998-08\n```\n\n### 输入样例 2：\n```in\n0510\n```\n\n### 输出样例 2：\n```out\n2005-10\n```\n\n### 输入样例 3：\n```in\n196711\n```\n\n### 输出样例 3：\n```out\n1967-11\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcdd"
  },
  "id": "1573619795449196557",
  "label": "",
  "score": 10,
  "problemId": "1290575573688696832",
  "title": "西安距离",
  "content": "小明来到了古都西安，想去参观大唐西市！\n\n西安的道路可以看做是与x轴或y轴垂直的直线，小明位于(a,b)，而目的地位于(c,d)，问最少几步可以到达。\n\n### 输入格式:\n\n一行中四个整数，a,b,c,d，表示坐标为(a,b)与(c,d)，这里0<=a,b,c,d<=1000\n\n### 输出格式:\n\n输出这两个点的西安距离。\n\n### 输入样例:\n\n```in\n0 0 3 4\n```\n\n### 输出样例:\n\n```out\n7\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "172",
          "name": "Java程序设计",
          "isLeaf": false,
          "enName": "Java Programming"
        },
        {
          "id": "183",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "185",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924247696443711488",
          "name": "输入输出",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924248852306845696",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 66,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5f292592ac389f00070155a0",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "小明来到了古都西安，想去参观大唐西市！\n\n西安的道路可以看做是与x轴或y轴垂直的直线，小明位于(a,b)，而目的地位于(c,d)，问最少几步可以到达。\n\n### 输入格式:\n\n一行中四个整数，a,b,c,d，表示坐标为(a,b)与(c,d)，这里0<=a,b,c,d<=1000\n\n### 输出格式:\n\n输出这两个点的西安距离。\n\n### 输入样例:\n\n```in\n0 0 3 4\n```\n\n### 输出样例:\n\n```out\n7\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448ced2fb4a7dada3b8bcde"
  },
  "id": "1573619795449196558",
  "label": "",
  "score": 10,
  "problemId": "1510524152983986176",
  "title": "谁能进图书馆",
  "content": "为了保障安静的阅读环境，有些公共图书馆对儿童入馆做出了限制。例如“12 岁以下儿童禁止入馆，除非有 18 岁以上（包括 18 岁）的成人陪同”。现在有两位小/大朋友跑来问你，他们能不能进去？请你写个程序自动给他们一个回复。\n\n### 输入格式：\n\n输入在一行中给出 4 个整数：\n```\n禁入年龄线 陪同年龄线 询问者1的年龄 询问者2的年龄\n```\n\n这里的`禁入年龄线`是指严格小于该年龄的儿童禁止入馆；`陪同年龄线`是指大于等于该年龄的人士可以陪同儿童入馆。默认两个询问者的编号依次分别为 `1` 和 `2`；年龄和年龄线都是 [1, 200] 区间内的整数，并且保证 `陪同年龄线` 严格大于 `禁入年龄线`。\n\n### 输出格式：\n\n在一行中输出对两位询问者的回答，如果可以进就输出 `年龄-Y`，否则输出 `年龄-N`，中间空 1 格，行首尾不得有多余空格。\n\n在第二行根据两个询问者的情况输出一句话：\n\n- 如果两个人必须一起进，则输出 `qing X zhao gu hao Y`，其中 `X` 是陪同人的编号， `Y` 是小孩子的编号；\n- 如果两个人都可以进但不是必须一起的，则输出 `huan ying ru guan`；\n- 如果两个人都进不去，则输出 `zhang da zai lai ba`；\n- 如果一个人能进一个不能，则输出 `X: huan ying ru guan`，其中 `X` 是可以入馆的那个人的编号。\n\n### 输入样例 1：\n```in\n12 18 18 8\n```\n\n### 输出样例 1：\n```out\n18-Y 8-Y\nqing 1 zhao gu hao 2\n```\n\n### 输入样例 2：\n```in\n12 18 10 15\n```\n\n### 输出样例 2：\n```out\n10-N 15-Y\n2: huan ying ru guan\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 202,
  "problemSetId": "1573619795390476288",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "624950ecf666296c03914106",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "为了保障安静的阅读环境，有些公共图书馆对儿童入馆做出了限制。例如“12 岁以下儿童禁止入馆，除非有 18 岁以上（包括 18 岁）的成人陪同”。现在有两位小/大朋友跑来问你，他们能不能进去？请你写个程序自动给他们一个回复。\n\n### 输入格式：\n\n输入在一行中给出 4 个整数：\n```\n禁入年龄线 陪同年龄线 询问者1的年龄 询问者2的年龄\n```\n\n这里的`禁入年龄线`是指严格小于该年龄的儿童禁止入馆；`陪同年龄线`是指大于等于该年龄的人士可以陪同儿童入馆。默认两个询问者的编号依次分别为 `1` 和 `2`；年龄和年龄线都是 [1, 200] 区间内的整数，并且保证 `陪同年龄线` 严格大于 `禁入年龄线`。\n\n### 输出格式：\n\n在一行中输出对两位询问者的回答，如果可以进就输出 `年龄-Y`，否则输出 `年龄-N`，中间空 1 格，行首尾不得有多余空格。\n\n在第二行根据两个询问者的情况输出一句话：\n\n- 如果两个人必须一起进，则输出 `qing X zhao gu hao Y`，其中 `X` 是陪同人的编号， `Y` 是小孩子的编号；\n- 如果两个人都可以进但不是必须一起的，则输出 `huan ying ru guan`；\n- 如果两个人都进不去，则输出 `zhang da zai lai ba`；\n- 如果一个人能进一个不能，则输出 `X: huan ying ru guan`，其中 `X` 是可以入馆的那个人的编号。\n\n### 输入样例 1：\n```in\n12 18 18 8\n```\n\n### 输出样例 1：\n```out\n18-Y 8-Y\nqing 1 zhao gu hao 2\n```\n\n### 输入样例 2：\n```in\n12 18 10 15\n```\n\n### 输出样例 2：\n```out\n10-N 15-Y\n2: huan ying ru guan\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcdf"
  },
  "id": "1576062560193093632",
  "label": "",
  "score": 15,
  "problemId": "9",
  "title": "输出华氏-摄氏温度转换表",
  "content": "输入2个正整数`lower`和`upper`（`lower`$$\\le$$`upper`$$\\le$$100），请输出一张取值范围为[`lower`，`upper`]、且每次增加2华氏度的华氏-摄氏温度转换表。\n\n温度转换的计算公式：$$C = 5 \\times (F - 32) / 9$$，其中：$$C$$表示摄氏温度，$$F$$表示华氏温度。\n\n### 输入格式:\n\n在一行中输入2个整数，分别表示`lower`和`upper`的值，中间用空格分开。\n\n### 输出格式:\n\n第一行输出：\"fahr celsius\"\n\n接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。\n\n若输入的范围不合法，则输出\"Invalid.\"。 \n\n### 输入样例1:\n```in\n32 35\n```\n\n### 输出样例1:\n```out\nfahr celsius\n32   0.0\n34   1.1\n```\n\n### 输入样例2:\n```\n40 30\n```\n\n### 输出样例2:\n```\nInvalid.\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 160,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb93",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "输入2个正整数`lower`和`upper`（`lower`$$\\le$$`upper`$$\\le$$100），请输出一张取值范围为[`lower`，`upper`]、且每次增加2华氏度的华氏-摄氏温度转换表。\n\n温度转换的计算公式：$$C = 5 \\times (F - 32) / 9$$，其中：$$C$$表示摄氏温度，$$F$$表示华氏温度。\n\n### 输入格式:\n\n在一行中输入2个整数，分别表示`lower`和`upper`的值，中间用空格分开。\n\n### 输出格式:\n\n第一行输出：\"fahr celsius\"\n\n接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。\n\n若输入的范围不合法，则输出\"Invalid.\"。 \n\n### 输入样例1:\n```in\n32 35\n```\n\n### 输出样例1:\n```out\nfahr celsius\n32   0.0\n34   1.1\n```\n\n### 输入样例2:\n```\n40 30\n```\n\n### 输出样例2:\n```\nInvalid.\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce0"
  },
  "id": "1576062560193093633",
  "label": "",
  "score": 15,
  "problemId": "72",
  "title": "阶梯电价",
  "content": "为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。\n\n### 输入格式:\n\n输入在一行中给出某用户的月用电量（单位：千瓦时）。\n\n### 输出格式:\n\n在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出\"Invalid Value!\"。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\ncost = 5.30\n```\n\n### 输入样例2:\n```\n100\n```\n\n### 输出样例2:\n```\ncost = 55.50\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 72,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9a",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。\n\n### 输入格式:\n\n输入在一行中给出某用户的月用电量（单位：千瓦时）。\n\n### 输出格式:\n\n在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出\"Invalid Value!\"。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\ncost = 5.30\n```\n\n### 输入样例2:\n```\n100\n```\n\n### 输出样例2:\n```\ncost = 55.50\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce1"
  },
  "id": "1576062560193093634",
  "label": "",
  "score": 10,
  "problemId": "77",
  "title": "计算符号函数的值",
  "content": "对于任一整数$$n$$，符号函数$$sign(n)$$的定义如下：\n\n![](~/3)\n\n请编写程序计算该函数对任一输入整数的值。\n\n### 输入格式:\n\n输入在一行中给出整数n。\n\n### 输出格式:\n\n在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nsign(10) = 1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nsign(0) = 0\n```\n\n### 输入样例3:\n```\n-98\n```\n\n### 输出样例3:\n```\nsign(-98) = -1\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 102,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9f",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "对于任一整数$$n$$，符号函数$$sign(n)$$的定义如下：\n\n![](~/3)\n\n请编写程序计算该函数对任一输入整数的值。\n\n### 输入格式:\n\n输入在一行中给出整数n。\n\n### 输出格式:\n\n在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nsign(10) = 1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nsign(0) = 0\n```\n\n### 输入样例3:\n```\n-98\n```\n\n### 输出样例3:\n```\nsign(-98) = -1\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce2"
  },
  "id": "1576062560193093635",
  "label": "",
  "score": 15,
  "problemId": "85",
  "title": "出租车计价",
  "content": "本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：\n\n- 起步里程为3公里，起步费10元；\n- 超起步里程后10公里内，每公里2元；\n- 超过10公里以上的部分加收50%的回空补贴费，即每公里3元；\n- 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 \n\n### 输入格式:\n\n输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。\n\n### 输入样例1:\n```in\n2.6 2\n```\n\n### 输出样例1:\n```out\n10\n```\n\n### 输入样例2:\n```\n5.1 4\n```\n\n### 输出样例2:\n```\n14\n```\n\n### 输入样例3:\n```\n12.5 9\n```\n\n### 输出样例3:\n```\n34\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 237,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcba7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：\n\n- 起步里程为3公里，起步费10元；\n- 超起步里程后10公里内，每公里2元；\n- 超过10公里以上的部分加收50%的回空补贴费，即每公里3元；\n- 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 \n\n### 输入格式:\n\n输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。\n\n### 输入样例1:\n```in\n2.6 2\n```\n\n### 输出样例1:\n```out\n10\n```\n\n### 输入样例2:\n```\n5.1 4\n```\n\n### 输出样例2:\n```\n14\n```\n\n### 输入样例3:\n```\n12.5 9\n```\n\n### 输出样例3:\n```\n34\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce3"
  },
  "id": "1576062560193093636",
  "label": "",
  "score": 20,
  "problemId": "4974",
  "title": "N个数求和",
  "content": "本题的要求很简单，就是求`N`个数字的和。麻烦的是，这些数字是以有理数`分子/分母`的形式给出的，你输出的和也必须是有理数的形式。\n\n### 输入格式：\n\n输入第一行给出一个正整数`N`（$$\\le$$100）。随后一行按格式`a1/b1 a2/b2 ...`给出`N`个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。\n\n### 输出格式：\n\n输出上述数字和的最简形式 —— 即将结果写成`整数部分 分数部分`，其中分数部分写成`分子/分母`，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。\n\n### 输入样例1：\n```in\n5\n2/5 4/15 1/30 -2/60 8/3\n```\n\n### 输出样例1：\n```out\n3 1/3\n```\n\n### 输入样例2：\n```\n2\n4/3 2/3\n```\n\n### 输出样例2：\n```\n2\n```\n\n### 输入样例3：\n```\n3\n1/3 -1/6 1/8\n```\n\n### 输出样例3：\n```\n7/24\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 372,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5793d1de004a0fd1ae",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题的要求很简单，就是求`N`个数字的和。麻烦的是，这些数字是以有理数`分子/分母`的形式给出的，你输出的和也必须是有理数的形式。\n\n### 输入格式：\n\n输入第一行给出一个正整数`N`（$$\\le$$100）。随后一行按格式`a1/b1 a2/b2 ...`给出`N`个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。\n\n### 输出格式：\n\n输出上述数字和的最简形式 —— 即将结果写成`整数部分 分数部分`，其中分数部分写成`分子/分母`，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。\n\n### 输入样例1：\n```in\n5\n2/5 4/15 1/30 -2/60 8/3\n```\n\n### 输出样例1：\n```out\n3 1/3\n```\n\n### 输入样例2：\n```\n2\n4/3 2/3\n```\n\n### 输出样例2：\n```\n2\n```\n\n### 输入样例3：\n```\n3\n1/3 -1/6 1/8\n```\n\n### 输出样例3：\n```\n7/24\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce4"
  },
  "id": "1576062560193093637",
  "label": "",
  "score": 15,
  "problemId": "5015",
  "title": "查验身份证",
  "content": "一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：\n\n首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值`Z`；最后按照以下关系对应`Z`值与校验码`M`的值：\n```\nZ：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2\n```\n现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。\n\n### 输入格式：\n\n输入第一行给出正整数$$N$$（$$\\le 100$$）是输入的身份证号码的个数。随后$$N$$行，每行给出1个18位身份证号码。\n\n### 输出格式：\n\n按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出`All passed`。\n\n### 输入样例1：\n```in\n4\n320124198808240056\n12010X198901011234\n110108196711301866\n37070419881216001X\n```\n\n### 输出样例1：\n```out\n12010X198901011234\n110108196711301866\n37070419881216001X\n```\n\n### 输入样例2：\n```\n2\n320124198808240056\n110108196711301862\n```\n\n### 输出样例2：\n```\nAll passed\n```\n\n**鸣谢阜阳师范学院范建中老师补充数据**\n\n**鸣谢浙江工业大学之江学院石洗凡老师纠正数据**\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 234,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5d139ebbc65a1e0007fdd996",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：\n\n首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值`Z`；最后按照以下关系对应`Z`值与校验码`M`的值：\n```\nZ：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2\n```\n现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。\n\n### 输入格式：\n\n输入第一行给出正整数$$N$$（$$\\le 100$$）是输入的身份证号码的个数。随后$$N$$行，每行给出1个18位身份证号码。\n\n### 输出格式：\n\n按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出`All passed`。\n\n### 输入样例1：\n```in\n4\n320124198808240056\n12010X198901011234\n110108196711301866\n37070419881216001X\n```\n\n### 输出样例1：\n```out\n12010X198901011234\n110108196711301866\n37070419881216001X\n```\n\n### 输入样例2：\n```\n2\n320124198808240056\n110108196711301862\n```\n\n### 输出样例2：\n```\nAll passed\n```\n\n**鸣谢阜阳师范学院范建中老师补充数据**\n\n**鸣谢浙江工业大学之江学院石洗凡老师纠正数据**\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce5"
  },
  "id": "1576062560193093638",
  "label": "",
  "score": 15,
  "problemId": "6087",
  "title": "情人节",
  "content": "![](~/356)\n\n以上是朋友圈中一奇葩贴：“2月14情人节了，我决定造福大家。第2个赞和第14个赞的，我介绍你俩认识…………咱三吃饭…你俩请…”。现给出此贴下点赞的朋友名单，请你找出那两位要请客的倒霉蛋。\n\n### 输入格式：\n\n输入按照点赞的先后顺序给出不知道多少个点赞的人名，每个人名占一行，为不超过10个英文字母的非空单词，以回车结束。一个英文句点`.`标志输入的结束，这个符号不算在点赞名单里。\n\n### 输出格式：\n\n根据点赞情况在一行中输出结论：若存在第2个人A和第14个人B，则输出“A and B are inviting you to dinner...”；若只有A没有B，则输出“A is the only one for you...”；若连A都没有，则输出“Momo... No one is for you ...”。\n\n### 输入样例1：\n```in\nGaoXZh\nMagi\nEinst\nQuark\nLaoLao\nFatMouse\nZhaShen\nfantacy\nlatesum\nSenSen\nQuanQuan\nwhatever\nwhenever\nPotaty\nhahaha\n.\n```\n\n### 输出样例1：\n```out\nMagi and Potaty are inviting you to dinner...\n```\n\n### 输入样例2：\n```\nLaoLao\nFatMouse\nwhoever\n.\n```\n\n### 输出样例2：\n```\nFatMouse is the only one for you...\n```\n\n### 输入样例3：\n```\nLaoLao\n.\n```\n\n### 输出样例3：\n```\nMomo... No one is for you ...\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 237,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5c93d1de004a0fd2e7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![](~/356)\n\n以上是朋友圈中一奇葩贴：“2月14情人节了，我决定造福大家。第2个赞和第14个赞的，我介绍你俩认识…………咱三吃饭…你俩请…”。现给出此贴下点赞的朋友名单，请你找出那两位要请客的倒霉蛋。\n\n### 输入格式：\n\n输入按照点赞的先后顺序给出不知道多少个点赞的人名，每个人名占一行，为不超过10个英文字母的非空单词，以回车结束。一个英文句点`.`标志输入的结束，这个符号不算在点赞名单里。\n\n### 输出格式：\n\n根据点赞情况在一行中输出结论：若存在第2个人A和第14个人B，则输出“A and B are inviting you to dinner...”；若只有A没有B，则输出“A is the only one for you...”；若连A都没有，则输出“Momo... No one is for you ...”。\n\n### 输入样例1：\n```in\nGaoXZh\nMagi\nEinst\nQuark\nLaoLao\nFatMouse\nZhaShen\nfantacy\nlatesum\nSenSen\nQuanQuan\nwhatever\nwhenever\nPotaty\nhahaha\n.\n```\n\n### 输出样例1：\n```out\nMagi and Potaty are inviting you to dinner...\n```\n\n### 输入样例2：\n```\nLaoLao\nFatMouse\nwhoever\n.\n```\n\n### 输出样例2：\n```\nFatMouse is the only one for you...\n```\n\n### 输入样例3：\n```\nLaoLao\n.\n```\n\n### 输出样例3：\n```\nMomo... No one is for you ...\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce6"
  },
  "id": "1576062560193093639",
  "label": "",
  "score": 10,
  "problemId": "6089",
  "title": "A除以B",
  "content": "真的是简单题哈 —— 给定两个绝对值不超过100的整数$$A$$和$$B$$，要求你按照“$$A/B=$$商”的格式输出结果。\n\n### 输入格式：\n\n输入在第一行给出两个整数$$A$$和$$B$$（$$-100 \\le A, B \\le 100$$），数字间以空格分隔。\n\n### 输出格式：\n\n在一行中输出结果：如果分母是正数，则输出“$$A/B=$$商”；如果分母是负数，则要用括号把分母括起来输出；如果分母为零，则输出的商应为`Error`。输出的商应保留小数点后2位。\n\n### 输入样例1：\n```in\n-1 2\n```\n\n### 输出样例1：\n```out\n-1/2=-0.50\n```\n\n### 输入样例2：\n```\n1 -3\n```\n\n### 输出样例2：\n```\n1/(-3)=-0.33\n```\n\n### 输入样例3：\n```\n5 0\n```\n\n### 输出样例3：\n```\n5/0=Error\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 138,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5c93d1de004a0fd2e9",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "真的是简单题哈 —— 给定两个绝对值不超过100的整数$$A$$和$$B$$，要求你按照“$$A/B=$$商”的格式输出结果。\n\n### 输入格式：\n\n输入在第一行给出两个整数$$A$$和$$B$$（$$-100 \\le A, B \\le 100$$），数字间以空格分隔。\n\n### 输出格式：\n\n在一行中输出结果：如果分母是正数，则输出“$$A/B=$$商”；如果分母是负数，则要用括号把分母括起来输出；如果分母为零，则输出的商应为`Error`。输出的商应保留小数点后2位。\n\n### 输入样例1：\n```in\n-1 2\n```\n\n### 输出样例1：\n```out\n-1/2=-0.50\n```\n\n### 输入样例2：\n```\n1 -3\n```\n\n### 输出样例2：\n```\n1/(-3)=-0.33\n```\n\n### 输入样例3：\n```\n5 0\n```\n\n### 输出样例3：\n```\n5/0=Error\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce7"
  },
  "id": "1576062560193093640",
  "label": "",
  "score": 10,
  "problemId": "6092",
  "title": "最佳情侣身高差",
  "content": "专家通过多组情侣研究数据发现，最佳的情侣身高差遵循着一个公式：（女方的身高）$$\\times$$1.09 =（男方的身高）。如果符合，你俩的身高差不管是牵手、拥抱、接吻，都是最和谐的差度。\n\n下面就请你写个程序，为任意一位用户计算他/她的情侣的最佳身高。\n\n### 输入格式：\n\n输入第一行给出正整数$$N$$（$$\\le 10$$），为前来查询的用户数。随后$$N$$行，每行按照“性别 身高”的格式给出前来查询的用户的性别和身高，其中“性别”为“F”表示女性、“M”表示男性；“身高”为区间 [1.0, 3.0] 之间的实数。\n\n### 输出格式：\n\n对每一个查询，在一行中为该用户计算出其情侣的最佳身高，保留小数点后2位。\n\n### 输入样例：\n```in\n2\nM 1.75\nF 1.8\n```\n\n### 输出样例：\n```out\n1.61\n1.96\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 151,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5c93d1de004a0fd2ec",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "专家通过多组情侣研究数据发现，最佳的情侣身高差遵循着一个公式：（女方的身高）$$\\times$$1.09 =（男方的身高）。如果符合，你俩的身高差不管是牵手、拥抱、接吻，都是最和谐的差度。\n\n下面就请你写个程序，为任意一位用户计算他/她的情侣的最佳身高。\n\n### 输入格式：\n\n输入第一行给出正整数$$N$$（$$\\le 10$$），为前来查询的用户数。随后$$N$$行，每行按照“性别 身高”的格式给出前来查询的用户的性别和身高，其中“性别”为“F”表示女性、“M”表示男性；“身高”为区间 [1.0, 3.0] 之间的实数。\n\n### 输出格式：\n\n对每一个查询，在一行中为该用户计算出其情侣的最佳身高，保留小数点后2位。\n\n### 输入样例：\n```in\n2\nM 1.75\nF 1.8\n```\n\n### 输出样例：\n```out\n1.61\n1.96\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce8"
  },
  "id": "1576062560193093641",
  "label": "",
  "score": 10,
  "problemId": "6290",
  "title": "寻找250",
  "content": "![](~/365)\n\n对方不想和你说话，并向你扔了一串数…… 而你必须从这一串数字中找到“250”这个高大上的感人数字。\n\n### 输入格式：\n\n输入在一行中给出不知道多少个绝对值不超过1000的整数，其中保证至少存在一个“250”。\n\n### 输出格式：\n\n在一行中输出第一次出现的“250”是对方扔过来的第几个数字（计数从1开始）。题目保证输出的数字在整型范围内。\n\n### 输入样例：\n```in\n888 666 123 -233 250 13 250 -222\n```\n\n### 输出样例：\n```out\n5\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 100,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5d93d1de004a0fd35b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![](~/365)\n\n对方不想和你说话，并向你扔了一串数…… 而你必须从这一串数字中找到“250”这个高大上的感人数字。\n\n### 输入格式：\n\n输入在一行中给出不知道多少个绝对值不超过1000的整数，其中保证至少存在一个“250”。\n\n### 输出格式：\n\n在一行中输出第一次出现的“250”是对方扔过来的第几个数字（计数从1开始）。题目保证输出的数字在整型范围内。\n\n### 输入样例：\n```in\n888 666 123 -233 250 13 250 -222\n```\n\n### 输出样例：\n```out\n5\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bce9"
  },
  "id": "1576062560193093642",
  "label": "",
  "score": 20,
  "problemId": "6293",
  "title": "阅览室",
  "content": "天梯图书阅览室请你编写一个简单的图书借阅统计程序。当读者借书时，管理员输入书号并按下`S`键，程序开始计时；当读者还书时，管理员输入书号并按下`E`键，程序结束计时。书号为不超过1000的正整数。当管理员将0作为书号输入时，表示一天工作结束，你的程序应输出当天的读者借书次数和平均阅读时间。\n\n注意：由于线路偶尔会有故障，可能出现不完整的纪录，即只有`S`没有`E`，或者只有`E`没有`S`的纪录，系统应能自动忽略这种无效纪录。另外，题目保证书号是书的唯一标识，同一本书在任何时间区间内只可能被一位读者借阅。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 10$$），随后给出$$N$$天的纪录。每天的纪录由若干次借阅操作组成，每次操作占一行，格式为：\n\n`书号`（[1, 1000]内的整数） `键值`（`S`或`E`） `发生时间`（`hh:mm`，其中`hh`是[0,23]内的整数，`mm`是[0, 59]内整数）\n\n每一天的纪录保证按时间递增的顺序给出。\n\n### 输出格式：\n\n对每天的纪录，在一行中输出当天的读者借书次数和平均阅读时间（以分钟为单位的精确到个位的整数时间）。\n\n### 输入样例：\n```in\n3\n1 S 08:10\n2 S 08:35\n1 E 10:00\n2 E 13:16\n0 S 17:00\n0 S 17:00\n3 E 08:10\n1 S 08:20\n2 S 09:00\n1 E 09:20\n0 E 17:00\n```\n\n### 输出样例：\n```out\n2 196\n0 0\n1 60\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 128,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5d93d1de004a0fd35d",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "天梯图书阅览室请你编写一个简单的图书借阅统计程序。当读者借书时，管理员输入书号并按下`S`键，程序开始计时；当读者还书时，管理员输入书号并按下`E`键，程序结束计时。书号为不超过1000的正整数。当管理员将0作为书号输入时，表示一天工作结束，你的程序应输出当天的读者借书次数和平均阅读时间。\n\n注意：由于线路偶尔会有故障，可能出现不完整的纪录，即只有`S`没有`E`，或者只有`E`没有`S`的纪录，系统应能自动忽略这种无效纪录。另外，题目保证书号是书的唯一标识，同一本书在任何时间区间内只可能被一位读者借阅。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 10$$），随后给出$$N$$天的纪录。每天的纪录由若干次借阅操作组成，每次操作占一行，格式为：\n\n`书号`（[1, 1000]内的整数） `键值`（`S`或`E`） `发生时间`（`hh:mm`，其中`hh`是[0,23]内的整数，`mm`是[0, 59]内整数）\n\n每一天的纪录保证按时间递增的顺序给出。\n\n### 输出格式：\n\n对每天的纪录，在一行中输出当天的读者借书次数和平均阅读时间（以分钟为单位的精确到个位的整数时间）。\n\n### 输入样例：\n```in\n3\n1 S 08:10\n2 S 08:35\n1 E 10:00\n2 E 13:16\n0 S 17:00\n0 S 17:00\n3 E 08:10\n1 S 08:20\n2 S 09:00\n1 E 09:20\n0 E 17:00\n```\n\n### 输出样例：\n```out\n2 196\n0 0\n1 60\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcea"
  },
  "id": "1576062560193093643",
  "label": "",
  "score": 10,
  "problemId": "6298",
  "title": "装睡",
  "content": "你永远叫不醒一个装睡的人 —— 但是通过分析一个人的呼吸频率和脉搏，你可以发现谁在装睡！医生告诉我们，正常人睡眠时的呼吸频率是每分钟15-20次，脉搏是每分钟50-70次。下面给定一系列人的呼吸频率与脉搏，请你找出他们中间有可能在装睡的人，即至少一项指标不在正常范围内的人。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 10$$）。随后$$N$$行，每行给出一个人的名字（仅由英文字母组成的、长度不超过3个字符的串）、其呼吸频率和脉搏（均为不超过100的正整数）。\n\n### 输出格式：\n\n按照输入顺序检查每个人，如果其至少一项指标不在正常范围内，则输出其名字，每个名字占一行。\n\n### 输入样例：\n```in\n4\nAmy 15 70\nTom 14 60\nJoe 18 50\nZoe 21 71\n```\n\n### 输出样例：\n```out\nTom\nZoe\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 104,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5d93d1de004a0fd362",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "你永远叫不醒一个装睡的人 —— 但是通过分析一个人的呼吸频率和脉搏，你可以发现谁在装睡！医生告诉我们，正常人睡眠时的呼吸频率是每分钟15-20次，脉搏是每分钟50-70次。下面给定一系列人的呼吸频率与脉搏，请你找出他们中间有可能在装睡的人，即至少一项指标不在正常范围内的人。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 10$$）。随后$$N$$行，每行给出一个人的名字（仅由英文字母组成的、长度不超过3个字符的串）、其呼吸频率和脉搏（均为不超过100的正整数）。\n\n### 输出格式：\n\n按照输入顺序检查每个人，如果其至少一项指标不在正常范围内，则输出其名字，每个名字占一行。\n\n### 输入样例：\n```in\n4\nAmy 15 70\nTom 14 60\nJoe 18 50\nZoe 21 71\n```\n\n### 输出样例：\n```out\nTom\nZoe\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bceb"
  },
  "id": "1576062560193093644",
  "label": "",
  "score": 15,
  "problemId": "10649",
  "title": "判断题",
  "content": "判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。\n\n### 输入格式：\n\n输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。\n\n### 输出格式：\n\n按照输入的顺序输出每个学生的得分，每个分数占一行。\n\n### 输入样例：\n```in\n3 6\n2 1 3 3 4 5\n0 0 1 0 1 1\n0 1 1 0 0 1\n1 0 1 0 1 0\n1 1 0 0 1 1\n```\n\n### 输出样例：\n```out\n13\n11\n12\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 122,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af50ff88c3638000a2d9371",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。\n\n### 输入格式：\n\n输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。\n\n### 输出格式：\n\n按照输入的顺序输出每个学生的得分，每个分数占一行。\n\n### 输入样例：\n```in\n3 6\n2 1 3 3 4 5\n0 0 1 0 1 1\n0 1 1 0 0 1\n1 0 1 0 1 0\n1 1 0 0 1 1\n```\n\n### 输出样例：\n```out\n13\n11\n12\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcec"
  },
  "id": "1576062560193093645",
  "label": "",
  "score": 15,
  "problemId": "10",
  "title": "求N分之一序列前N项和",
  "content": "本题要求编写程序，计算序列 1 + 1/2 + 1/3 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n6\n```\n\n### 输出样例:\n```out\nsum = 2.450000\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 62,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb94",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算序列 1 + 1/2 + 1/3 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n6\n```\n\n### 输出样例:\n```out\nsum = 2.450000\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bced"
  },
  "id": "1576062560193093646",
  "label": "",
  "score": 15,
  "problemId": "11",
  "title": "求奇数分之一序列前N项和",
  "content": "本题要求编写程序，计算序列 1 + 1/3 + 1/5 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n 在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n23\n```\n\n### 输出样例:\n```out\nsum = 2.549541\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 71,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb95",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算序列 1 + 1/3 + 1/5 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n 在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n23\n```\n\n### 输出样例:\n```out\nsum = 2.549541\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcee"
  },
  "id": "1576062560193093647",
  "label": "",
  "score": 15,
  "problemId": "12",
  "title": "求简单交错序列前N项和",
  "content": "本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 0.819\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 57,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb96",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 0.819\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcef"
  },
  "id": "1576062560193093648",
  "label": "",
  "score": 15,
  "problemId": "13",
  "title": "生成3的乘方表",
  "content": "输入一个非负整数$$n$$，生成一张3的乘方表，输出$$3^0$$~$$3^n$$的值。可调用幂函数计算3的乘方。\n\n### 输入格式:\n\n输入在一行中给出一个非负整数$$n$$。\n\n### 输出格式:\n\n按照幂的递增顺序输出$$n+1$$行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\npow(3,0) = 1\npow(3,1) = 3\npow(3,2) = 9\npow(3,3) = 27\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 82,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb97",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "输入一个非负整数$$n$$，生成一张3的乘方表，输出$$3^0$$~$$3^n$$的值。可调用幂函数计算3的乘方。\n\n### 输入格式:\n\n输入在一行中给出一个非负整数$$n$$。\n\n### 输出格式:\n\n按照幂的递增顺序输出$$n+1$$行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\npow(3,0) = 1\npow(3,1) = 3\npow(3,2) = 9\npow(3,3) = 27\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcf0"
  },
  "id": "1576062560193093649",
  "label": "",
  "score": 15,
  "problemId": "73",
  "title": "求平方与倒数序列的部分和",
  "content": "本题要求对两个正整数$$m$$和$$n$$（$$m \\le n$$）编写程序，计算序列和$$m^2 + 1/m + (m+1)^2 + 1/(m+1) + \\cdots + n^2 + 1/n$$。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m \\le n$$），其间以空格分开。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n5 10\n```\n\n### 输出样例:\n```out\nsum = 355.845635\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 54,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求对两个正整数$$m$$和$$n$$（$$m \\le n$$）编写程序，计算序列和$$m^2 + 1/m + (m+1)^2 + 1/(m+1) + \\cdots + n^2 + 1/n$$。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m \\le n$$），其间以空格分开。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n5 10\n```\n\n### 输出样例:\n```out\nsum = 355.845635\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcf1"
  },
  "id": "1576062560193093650",
  "label": "",
  "score": 20,
  "problemId": "6297",
  "title": "整除光棍",
  "content": "这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数`x`，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字`s`，表示`x`乘以`s`是一个光棍，第二个数字`n`是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。\n\n提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除`x`为止。但难点在于，`s`可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。\n\n### 输入格式：\n\n输入在一行中给出一个不以5结尾的正奇数`x`（$$< 1000$$）。\n\n### 输出格式：\n\n在一行中输出相应的最小的`s`和`n`，其间以1个空格分隔。\n\n### 输入样例：\n```in\n31\n```\n\n### 输出样例：\n```out\n3584229390681 15\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 136,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5d93d1de004a0fd361",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数`x`，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字`s`，表示`x`乘以`s`是一个光棍，第二个数字`n`是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。\n\n提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除`x`为止。但难点在于，`s`可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。\n\n### 输入格式：\n\n输入在一行中给出一个不以5结尾的正奇数`x`（$$< 1000$$）。\n\n### 输出格式：\n\n在一行中输出相应的最小的`s`和`n`，其间以1个空格分隔。\n\n### 输入样例：\n```in\n31\n```\n\n### 输出样例：\n```out\n3584229390681 15\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448cfaffb4a7dada3b8bcf2"
  },
  "id": "1576062560193093651",
  "label": "",
  "score": 15,
  "problemId": "10718",
  "title": "Wifi密码",
  "content": "下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。\n\n\n![wifi.jpg](~/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg)\n\n\n### 输入格式：\n\n输入第一行给出一个正整数 N（$$\\le$$ 100），随后 N 行，每行按照 `编号-答案` 的格式给出一道题的 4 个选项，`T` 表示正确选项，`F` 表示错误选项。选项间用空格分隔。\n\n### 输出格式：\n\n在一行中输出 wifi 密码。\n\n### 输入样例：\n```in\n8\nA-T B-F C-F D-F\nC-T B-F A-F D-F\nA-F D-F C-F B-T\nB-T A-F C-F D-F\nB-F D-T A-F C-F\nA-T C-F B-F D-F\nD-T B-F C-F A-F\nC-T A-F B-F D-F\n```\n\n### 输出样例：\n```out\n13224143\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 156,
  "problemSetId": "1576062560117596160",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af5103b8c3638000a2d93b6",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "下面是微博上流传的一张照片：“各位亲爱的同学们，鉴于大家有时需要使用 wifi，又怕耽误亲们的学习，现将 wifi 密码设置为下列数学题答案：A-1；B-2；C-3；D-4；请同学们自己作答，每两日一换。谢谢合作！！~”—— 老师们为了促进学生学习也是拼了…… 本题就要求你写程序把一系列题目的答案按照卷子上给出的对应关系翻译成 wifi 的密码。这里简单假设每道选择题都有 4 个选项，有且只有 1 个正确答案。\n\n\n![wifi.jpg](~/7e56be3f-caba-45f1-b9cb-38a96d44de76.jpg)\n\n\n### 输入格式：\n\n输入第一行给出一个正整数 N（$$\\le$$ 100），随后 N 行，每行按照 `编号-答案` 的格式给出一道题的 4 个选项，`T` 表示正确选项，`F` 表示错误选项。选项间用空格分隔。\n\n### 输出格式：\n\n在一行中输出 wifi 密码。\n\n### 输入样例：\n```in\n8\nA-T B-F C-F D-F\nC-T B-F A-F D-F\nA-F D-F C-F B-T\nB-T A-F C-F D-F\nB-F D-T A-F C-F\nA-T C-F B-F D-F\nD-T B-F C-F A-F\nC-T A-F B-F D-F\n```\n\n### 输出样例：\n```out\n13224143\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf3"
  },
  "id": "1581529427070414868",
  "label": "",
  "score": 15,
  "problemId": "70",
  "title": "求组合数",
  "content": "本题要求编写程序，根据公式$$C^{m}_{n} = \\frac{n!}{m!(n-m)!}$$算出从$$n$$个不同元素中取出$$m$$个元素（$$m\\le n$$）的组合数。\n\n建议定义和调用函数`fact(n)`计算`n!`，其中`n`的类型是`int`，函数类型是`double`。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m\\le n$$），以空格分隔。\n\n### 输出格式:\n\n按照格式“result = 组合数计算结果”输出。题目保证结果在`double`类型范围内。\n\n### 输入样例:\n```in\n2 7\n```\n\n### 输出样例:\n```out\nresult = 21\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 69,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb98",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，根据公式$$C^{m}_{n} = \\frac{n!}{m!(n-m)!}$$算出从$$n$$个不同元素中取出$$m$$个元素（$$m\\le n$$）的组合数。\n\n建议定义和调用函数`fact(n)`计算`n!`，其中`n`的类型是`int`，函数类型是`double`。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m\\le n$$），以空格分隔。\n\n### 输出格式:\n\n按照格式“result = 组合数计算结果”输出。题目保证结果在`double`类型范围内。\n\n### 输入样例:\n```in\n2 7\n```\n\n### 输出样例:\n```out\nresult = 21\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf4"
  },
  "id": "1581529427070414869",
  "label": "",
  "score": 15,
  "problemId": "74",
  "title": "求交错序列前N项和",
  "content": "本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，结果保留三位小数。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n0.917\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 82,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，结果保留三位小数。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n0.917\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf5"
  },
  "id": "1581529427070414870",
  "label": "",
  "score": 15,
  "problemId": "75",
  "title": "求平方根序列前N项和",
  "content": "本题要求编写程序，计算平方根序列$$\\sqrt{1} + \\sqrt{2} + \\sqrt{3} + \\cdots$$的前N项之和。可包含头文件`math.h`，并调用`sqrt`函数求平方根。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 22.47\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 69,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9d",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算平方根序列$$\\sqrt{1} + \\sqrt{2} + \\sqrt{3} + \\cdots$$的前N项之和。可包含头文件`math.h`，并调用`sqrt`函数求平方根。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 22.47\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf6"
  },
  "id": "1581529427070414871",
  "label": "",
  "score": 15,
  "problemId": "76",
  "title": "求阶乘序列前N项和",
  "content": "本题要求编写程序，计算序列 $$1! + 2! + 3! + \\cdots$$ 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个不超过12的正整数N。\n\n### 输出格式:\n\n在一行中输出整数结果。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n153\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 51,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcb9e",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算序列 $$1! + 2! + 3! + \\cdots$$ 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个不超过12的正整数N。\n\n### 输出格式:\n\n在一行中输出整数结果。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n153\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf7"
  },
  "id": "1581529427070414872",
  "label": "",
  "score": 15,
  "problemId": "78",
  "title": "统计学生平均成绩与及格人数",
  "content": "本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 \n\n### 输出格式:\n\n按照以下格式输出：\n```\naverage = 成绩均值\ncount = 及格人数\n```\n其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n5\n77 54 92 73 60\n```\n\n### 输出样例:\n```out\naverage = 71.2\ncount = 4\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 177,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcba0",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 \n\n### 输出格式:\n\n按照以下格式输出：\n```\naverage = 成绩均值\ncount = 及格人数\n```\n其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n5\n77 54 92 73 60\n```\n\n### 输出样例:\n```out\naverage = 71.2\ncount = 4\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf8"
  },
  "id": "1581529427070414873",
  "label": "",
  "score": 15,
  "problemId": "79",
  "title": "统计字符",
  "content": "本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。\n\n### 输入格式:\n\n输入为10个字符。最后一个回车表示输入结束，不算在内。\n\n### 输出格式:\n\n在一行内按照\n```\nletter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数\n```\n的格式输出。\n\n### 输入样例:\n```in\naZ &\n09 Az\n```\n\n### 输出样例:\n```out\nletter = 4, blank = 3, digit = 2, other = 1\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 102,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcba1",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。\n\n### 输入格式:\n\n输入为10个字符。最后一个回车表示输入结束，不算在内。\n\n### 输出格式:\n\n在一行内按照\n```\nletter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数\n```\n的格式输出。\n\n### 输入样例:\n```in\naZ &\n09 Az\n```\n\n### 输出样例:\n```out\nletter = 4, blank = 3, digit = 2, other = 1\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcf9"
  },
  "id": "1581529427070414874",
  "label": "",
  "score": 15,
  "problemId": "80",
  "title": "输出闰年",
  "content": "输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。\n\n### 输入格式:\n\n输入在一行中给出21世纪的某个截止年份。\n\n### 输出格式:\n\n逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出\"Invalid year!\"。若不存在任何闰年，则输出“None”。\n\n### 输入样例1:\n```in\n2048\n```\n\n### 输出样例1:\n```out\n2004\n2008\n2012\n2016\n2020\n2024\n2028\n2032\n2036\n2040\n2044\n2048\n```\n\n### 输入样例2:\n```\n2000\n```\n\n### 输出样例2:\n```\nInvalid year!\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 149,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcba2",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。\n\n### 输入格式:\n\n输入在一行中给出21世纪的某个截止年份。\n\n### 输出格式:\n\n逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出\"Invalid year!\"。若不存在任何闰年，则输出“None”。\n\n### 输入样例1:\n```in\n2048\n```\n\n### 输出样例1:\n```out\n2004\n2008\n2012\n2016\n2020\n2024\n2028\n2032\n2036\n2040\n2044\n2048\n```\n\n### 输入样例2:\n```\n2000\n```\n\n### 输出样例2:\n```\nInvalid year!\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcfa"
  },
  "id": "1581529427070414875",
  "label": "",
  "score": 15,
  "problemId": "86",
  "title": "统计学生成绩",
  "content": "本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n### 输入格式:\n\n输入在第一行中给出一个正整数N（$$\\le$$1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。\n\n### 输入样例:\n```in\n7\n77 54 92 73 60 65 69\n```\n\n### 输出样例:\n```out\n1 0 2 3 1\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "69",
          "name": "switch",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 63,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4493d1de004a0fcba8",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n### 输入格式:\n\n输入在第一行中给出一个正整数N（$$\\le$$1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。\n\n### 输入样例:\n```in\n7\n77 54 92 73 60 65 69\n```\n\n### 输出样例:\n```out\n1 0 2 3 1\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcfb"
  },
  "id": "1581529427070414876",
  "label": "",
  "score": 20,
  "problemId": "296",
  "title": "素数对猜想",
  "content": "让我们定义$$d_n$$为：$$d_n = p_{n+1}-p_n$$，其中$$p_i$$是第$$i$$个素数。显然有$$d_1 = 1$$，且对于$$n>1$$有$$d_n$$是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。\n\n现给定任意正整数`N`($$<10^5$$)，请计算不超过`N`的满足猜想的素数对的个数。\n\n\n### 输入格式:\n\n输入在一行给出正整数`N`。\n\n### 输出格式:\n\n在一行中输出不超过`N`的满足猜想的素数对的个数。\n\n### 输入样例:\n```in\n20\n```\n\n### 输出样例:\n```out\n4\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 77,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4593d1de004a0fcbab",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "让我们®ä¹$$d_n$$ä¸ºï¼$$d_n = p_{n+1}-p_n$$ï¼å¶ä¸­$$p_i$$æ¯ç¬¬$$i$$ä¸ªç´ æ°ãæ¾ç¶æ$$d_1 = 1$$ï¼ä¸å¯¹äº$$n>1$$æ$$d_n$$æ¯å¶æ°ãâç´ æ°å¯¹çæ³âè®¤ä¸ºâå­å¨æ ç©·å¤å¯¹ç¸é»ä¸å·®ä¸º2çç´ æ°âã\n\nç°ç»å®ä»»ææ­£æ´æ°`N`($$<10^5$$)ï¼è¯·è®¡ç®ä¸è¶è¿`N`çæ»¡è¶³çæ³çç´ æ°å¯¹çä¸ªæ°ã\n\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¨ä¸è¡ç»åºæ­£æ´æ°`N`ã\n\n### è¾åºæ ¼å¼:\n\nå¨ä¸è¡ä¸­è¾åºä¸è¶è¿`N`çæ»¡è¶³çæ³çç´ æ°å¯¹çä¸ªæ°ã\n\n### è¾å¥æ ·ä¾:\n```in\n20\n```\n\n### è¾åºæ ·ä¾:\n```out\n4\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcfc"
  },
  "id": "1581529427070414877",
  "label": "",
  "score": 20,
  "problemId": "298",
  "title": "Have Fun with Numbers",
  "content": "Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication.  Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation.  Check to see the result if we double it again!\n\nNow you are suppose to check if there are more numbers with this property.  That is, double a given number with $$k$$ digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.\n\n### Input Specification:\n\nEach input contains one test case.  Each case contains one positive integer with no more than 20 digits.\n\n### Output Specification:\n\nFor each test case, first print in a line \"Yes\" if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or \"No\" if not.  Then in the next line, print the doubled number.\n\n### Sample Input:\n```in\n1234567899\n```\n\n### Sample Output:\n```out\nYes\n2469135798\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 190,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4593d1de004a0fcbad",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication.  Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation.  Check to see the result if we double it again!\n\nNow you are suppose to check if there are more numbers with this property.  That is, double a given number with $$k$$ digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.\n\n### Input Specification:\n\nEach input contains one test case.  Each case contains one positive integer with no more than 20 digits.\n\n### Output Specification:\n\nFor each test case, first print in a line \"Yes\" if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or \"No\" if not.  Then in the next line, print the doubled number.\n\n### Sample Input:\n```in\n1234567899\n```\n\n### Sample Output:\n```out\nYes\n2469135798\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcfd"
  },
  "id": "1581529427070414878",
  "label": "",
  "score": 15,
  "problemId": "368",
  "title": "æ±å¥æ°å",
  "content": "æ¬é¢è¦æ±è®¡ç®ç»å®çä¸ç³»åæ­£æ´æ°ä¸­å¥æ°çåã\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºä¸ç³»åæ­£æ´æ°ï¼å¶é´ä»¥ç©ºæ ¼åéãå½è¯»å°é¶æè´æ´æ°æ¶ï¼è¡¨ç¤ºè¾å¥ç»æï¼è¯¥æ°å­ä¸è¦å¤çã\n\n### è¾åºæ ¼å¼:\n\nå¨ä¸è¡ä¸­è¾åºæ­£æ´æ°åºåä¸­å¥æ°çåã\n\n### è¾å¥æ ·ä¾:\n```in\n8 7 4 3 70 5 6 101 -1\n```\n\n### è¾åºæ ·ä¾:\n```out\n116\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "whileådo-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 68,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4693d1de004a0fcbf3",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "æ¬é¢è¦æ±è®¡ç®ç»å®çä¸ç³»åæ­£æ´æ°ä¸­å¥æ°çåã\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºä¸ç³»åæ­£æ´æ°ï¼å¶é´ä»¥ç©ºæ ¼åéãå½è¯»å°é¶æè´æ´æ°æ¶ï¼è¡¨ç¤ºè¾å¥ç»æï¼è¯¥æ°å­ä¸è¦å¤çã\n\n### è¾åºæ ¼å¼:\n\nå¨ä¸è¡ä¸­è¾åºæ­£æ´æ°åºåä¸­å¥æ°çåã\n\n### è¾å¥æ ·ä¾:\n```in\n8 7 4 3 70 5 6 101 -1\n```\n\n### è¾åºæ ·ä¾:\n```out\n116\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcfe"
  },
  "id": "1581529427070414879",
  "label": "",
  "score": 15,
  "problemId": "491",
  "title": "æ±å¹ä¹å",
  "content": "æ¬é¢è¦æ±ç¼åç¨åºï¼è®¡ç®$$sum=2^1 + 2^2 + 2^3 + \\cdots + 2^n$$ãå¯ä»¥è°ç¨powå½æ°æ±å¹ã\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºæ­£æ´æ°$$n$$ï¼$$\\le$$10ï¼ã\n\n### è¾åºæ ¼å¼:\n\næç§æ ¼å¼âresult = è®¡ç®ç»æâè¾åºã\n\n### è¾å¥æ ·ä¾:\n```in\n5\n```\n\n### è¾åºæ ·ä¾:\n```out\nresult = 62\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµå¤§åå¸å­¦é¢"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 51,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc6e",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "æ¬é¢è¦æ±ç¼åç¨åºï¼è®¡ç®$$sum=2^1 + 2^2 + 2^3 + \\cdots + 2^n$$ãå¯ä»¥è°ç¨powå½æ°æ±å¹ã\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºæ­£æ´æ°$$n$$ï¼$$\\le$$10ï¼ã\n\n### è¾åºæ ¼å¼:\n\næç§æ ¼å¼âresult = è®¡ç®ç»æâè¾åºã\n\n### è¾å¥æ ·ä¾:\n```in\n5\n```\n\n### è¾åºæ ·ä¾:\n```out\nresult = 62\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bcff"
  },
  "id": "1581529427070414880",
  "label": "",
  "score": 20,
  "problemId": "497",
  "title": "éªè¯âå¥å¾·å·´èµ«çæ³â",
  "content": "æ°å­¦é¢åèåçâå¥å¾·å·´èµ«çæ³âçå¤§è´æææ¯ï¼ä»»ä½ä¸ä¸ªå¤§äº2çå¶æ°æ»è½è¡¨ç¤ºä¸ºä¸¤ä¸ªç´ æ°ä¹åãæ¯å¦ï¼24=5+19ï¼å¶ä¸­5å19é½æ¯ç´ æ°ãæ¬å®éªçä»»å¡æ¯è®¾è®¡ä¸ä¸ªç¨åºï¼éªè¯20äº¿ä»¥åçå¶æ°é½å¯ä»¥åè§£æä¸¤ä¸ªç´ æ°ä¹åã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºä¸ä¸ª(2, 2 000 000 000]èå´åçå¶æ°Nã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­æç§æ ¼å¼âN = p + qâè¾åºNçç´ æ°åè§£ï¼å¶ä¸­p $$\\le$$ qåä¸ºç´ æ°ãåå ä¸ºè¿æ ·çåè§£ä¸å¯ä¸ï¼ä¾å¦24è¿å¯ä»¥åè§£ä¸º7+17ï¼ï¼è¦æ±å¿é¡»è¾åºææè§£ä¸­pæå°çè§£ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n24\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n24 = 5 + 19\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 124,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc74",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "æ°å­¦é¢åèåçâå¥å¾·å·´èµ«çæ³âçå¤§è´æææ¯ï¼ä»»ä½ä¸ä¸ªå¤§äº2çå¶æ°æ»è½è¡¨ç¤ºä¸ºä¸¤ä¸ªç´ æ°ä¹åãæ¯å¦ï¼24=5+19ï¼å¶ä¸­5å19é½æ¯ç´ æ°ãæ¬å®éªçä»»å¡æ¯è®¾è®¡ä¸ä¸ªç¨åºï¼éªè¯20äº¿ä»¥åçå¶æ°é½å¯ä»¥åè§£æä¸¤ä¸ªç´ æ°ä¹åã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºä¸ä¸ª(2, 2 000 000 000]èå´åçå¶æ°Nã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­æç§æ ¼å¼âN = p + qâè¾åºNçç´ æ°åè§£ï¼å¶ä¸­p $$\\le$$ qåä¸ºç´ æ°ãåå ä¸ºè¿æ ·çåè§£ä¸å¯ä¸ï¼ä¾å¦24è¿å¯ä»¥åè§£ä¸º7+17ï¼ï¼è¦æ±å¿é¡»è¾åºææè§£ä¸­pæå°çè§£ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n24\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n24 = 5 + 19\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd00"
  },
  "id": "1581529427070414881",
  "label": "",
  "score": 15,
  "problemId": "509",
  "title": "è¿ä¼¼æ±PI",
  "content": "æ¬é¢è¦æ±ç¼åç¨åºï¼æ ¹æ®ä¸å¼æ±$$\\pi$$çè¿ä¼¼å¼ï¼ç´å°æåä¸é¡¹å°äºç»å®ç²¾åº¦epsã\n\n$$\\frac{\\pi}{2}=1+\\frac{1!}{3}+\\frac{2!}{3\\times 5} + \\frac{3!}{3\\times 5\\times 7}+ \\cdots +\\frac{i!}{3\\times 5\\times \\cdots \\times (2\\times i+1)}+ \\cdots$$\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºç²¾åº¦epsï¼å¯ä»¥ä½¿ç¨ä»¥ä¸è¯­å¥æ¥è¯»è¾å¥ï¼\n```c++\nscanf(\"%le\", &eps);\n```\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡åï¼æç§ä»¥ä¸æ ¼å¼è¾åº$$\\pi$$çè¿ä¼¼å¼ï¼ä¿çå°æ°ç¹å5ä½ï¼ï¼\n\n```\nPI = è¿ä¼¼å¼\n```\n\n### è¾å¥æ ·ä¾ï¼\n```in\n1E-5\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\nPI = 3.14158\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµå¤§åå¸å­¦é¢"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 205,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc80",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "æ¬é¢è¦æ±ç¼åç¨åºï¼æ ¹æ®ä¸å¼æ±$$\\pi$$çè¿ä¼¼å¼ï¼ç´å°æåä¸é¡¹å°äºç»å®ç²¾åº¦epsã\n\n$$\\frac{\\pi}{2}=1+\\frac{1!}{3}+\\frac{2!}{3\\times 5} + \\frac{3!}{3\\times 5\\times 7}+ \\cdots +\\frac{i!}{3\\times 5\\times \\cdots \\times (2\\times i+1)}+ \\cdots$$\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åºç²¾åº¦epsï¼å¯ä»¥ä½¿ç¨ä»¥ä¸è¯­å¥æ¥è¯»è¾å¥ï¼\n```c++\nscanf(\"%le\", &eps);\n```\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡åï¼æç§ä»¥ä¸æ ¼å¼è¾åº$$\\pi$$çè¿ä¼¼å¼ï¼ä¿çå°æ°ç¹å5ä½ï¼ï¼\n\n```\nPI = è¿ä¼¼å¼\n```\n\n### è¾å¥æ ·ä¾ï¼\n```in\n1E-5\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\nPI = 3.14158\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd01"
  },
  "id": "1581529427070414882",
  "label": "",
  "score": 20,
  "problemId": "538",
  "title": "åå½¢ä½ä½ç§¯è®¡ç®å¨",
  "content": "æ¬é¢è¦æ±å®ç°ä¸ä¸ªå¸¸ç¨åå½¢ä½ä½ç§¯çè®¡ç®å¨ãè®¡ç®å¬å¼å¦ä¸ï¼\n\n- çä½ä½ç§¯ $$V = \\frac{4}{3} \\pi r^3$$ï¼å¶ä¸­$$r$$æ¯çä½åå¾ã\n- åæ±ä½ä½ç§¯ $$V = \\pi r^2 h$$ï¼å¶ä¸­$$r$$æ¯åºååå¾ï¼$$h$$æ¯é«ã\n- åé¥ä½ä½ç§¯ $$V = \\frac{1}{3}\\pi r^2 h$$ï¼å¶ä¸­$$r$$æ¯åºååå¾ï¼$$h$$æ¯é«ã\n\n### è¾å¥æ ¼å¼ï¼\n\nå¨æ¯æ¬¡è®¡ç®ä¹åï¼è¦æ±è¾åºå¦ä¸çé¢ï¼\n```\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\n```\nç¶åä»æ åè¾å¥è¯»è¿ä¸ä¸ªæ´æ°æä»¤ã\n\n### è¾åºæ ¼å¼ï¼\n\nå¦æè¯»å¥çæä»¤æ¯1æ2æ3ï¼åæ§è¡ç¸åºçä½ç§¯è®¡ç®ï¼å¦ææ¯å¶ä»æ´æ°ï¼åç¨åºç»æè¿è¡ã\n\n- å½è¾å¥ä¸º1æ¶ï¼å¨è®¡ç®çä½ä½ç§¯ä¹åï¼æå°`Please enter the radius:`ï¼ç¶åè¯»å¥çä½åå¾ï¼å®æè®¡ç®ï¼\n- å½è¾å¥ä¸º2æ¶ï¼å¨è®¡ç®åæ±ä½ä½ç§¯ä¹åï¼æå°`Please enter the radius and the height:`ï¼ç¶åè¯»å¥åºååå¾åé«ï¼å®æè®¡ç®ï¼\n- å½è¾å¥ä¸º3æ¶ï¼å¨è®¡ç®åé¥ä½ä½ç§¯ä¹åï¼æå°`Please enter the radius and the height:`ï¼ç¶åè¯»å¥åºååå¾åé«ï¼å®æè®¡ç®ã\n\nè®¡ç®ç»æå¨ä¸è¡åè¾åºï¼ä¿çå°æ°ç¹åä¸¤ä½ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n1\n2\n3\n2.4 3\n0\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\nPlease enter the radius:\n33.51\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\nPlease enter the radius and the height:\n18.10\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 176,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc9d",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "æ¬é¢è¦æ±å®ç°ä¸ä¸ªå¸¸ç¨åå½¢ä½ä½ç§¯çè®¡ç®å¨ãè®¡ç®å¬å¼å¦ä¸ï¼\n\n- çä½ä½ç§¯ $$V = \\frac{4}{3} \\pi r^3$$ï¼å¶ä¸­$$r$$æ¯çä½åå¾ã\n- åæ±ä½ä½ç§¯ $$V = \\pi r^2 h$$ï¼å¶ä¸­$$r$$æ¯åºååå¾ï¼$$h$$æ¯é«ã\n- åé¥ä½ä½ç§¯ $$V = \\frac{1}{3}\\pi r^2 h$$ï¼å¶ä¸­$$r$$æ¯åºååå¾ï¼$$h$$æ¯é«ã\n\n### è¾å¥æ ¼å¼ï¼\n\nå¨æ¯æ¬¡è®¡ç®ä¹åï¼è¦æ±è¾åºå¦ä¸çé¢ï¼\n```\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\n```\nç¶åä»æ åè¾å¥è¯»è¿ä¸ä¸ªæ´æ°æä»¤ã\n\n### è¾åºæ ¼å¼ï¼\n\nå¦æè¯»å¥çæä»¤æ¯1æ2æ3ï¼åæ§è¡ç¸åºçä½ç§¯è®¡ç®ï¼å¦ææ¯å¶ä»æ´æ°ï¼åç¨åºç»æè¿è¡ã\n\n- å½è¾å¥ä¸º1æ¶ï¼å¨è®¡ç®çä½ä½ç§¯ä¹åï¼æå°`Please enter the radius:`ï¼ç¶åè¯»å¥çä½åå¾ï¼å®æè®¡ç®ï¼\n- å½è¾å¥ä¸º2æ¶ï¼å¨è®¡ç®åæ±ä½ä½ç§¯ä¹åï¼æå°`Please enter the radius and the height:`ï¼ç¶åè¯»å¥åºååå¾åé«ï¼å®æè®¡ç®ï¼\n- å½è¾å¥ä¸º3æ¶ï¼å¨è®¡ç®åé¥ä½ä½ç§¯ä¹åï¼æå°`Please enter the radius and the height:`ï¼ç¶åè¯»å¥åºååå¾åé«ï¼å®æè®¡ç®ã\n\nè®¡ç®ç»æå¨ä¸è¡åè¾åºï¼ä¿çå°æ°ç¹åä¸¤ä½ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n1\n2\n3\n2.4 3\n0\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\nPlease enter the radius:\n33.51\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\nPlease enter the radius and the height:\n18.10\n1-Ball\n2-Cylinder\n3-Cone\nother-Exit\nPlease enter your command:\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd02"
  },
  "id": "1581529427070414883",
  "label": "",
  "score": 20,
  "problemId": "1117",
  "title": "ååè¡¨è¾¾å¼ââåä¸ªtokenizerå§",
  "content": "**[åè¯´ç¹åºé¢èæ¯]**\n\nè¿ä¸ªé¢æ¯ä¸ºä½å¹´çº§åå­¦ãå­¦Cè¯­è¨çåå­¦åå¤çï¼å ä¸ºï¼å¯¹è¿é¨ååå­¦ï¼è¿ä¸ªé¢ç®ç¼åèµ·æ¥ç¥æä¸ç¹å¤æãå¦ææ¯é«å¹´çº§ãå­¦è¿äºæ­£åè¡¨è¾¾å¼ï¼Regular Expressionï¼çåå­¦æèå­¦è¿äºJavaç­OOè¯­è¨çåå­¦åè¿ä¸ªé¢ï¼åºå½åç°è¿é¢æ¯è¾ç®åå§ãå¦ï¼å¯¹äºï¼ä»ä¹æ¯tokenizerï¼è¯·èªè¡æ¥è¯¢è§£å³ãåæ­£å¨æ­¤å¤ä¸åºç¿»è¯æâä»¤çè§£æå¨âã\n\n**[æ­£é¢]**\n\nååè¿ç®è¡¨è¾¾å¼ç±**è¿ç®æ°**ï¼å¿å®åå«`æ°å­`ï¼å¯è½åå«`æ­£æè´ç¬¦å·`ã`å°æ°ç¹`ï¼ã**è¿ç®ç¬¦**ï¼åæ¬`+`ã`-`ã`*`ã`/`ï¼ä»¥åå°æ¬å·ï¼`(`å`)`ï¼ç»æï¼æ¯ä¸ªè¿ç®æ°ãè¿ç®ç¬¦åæ¬å·é½æ¯ä¸ä¸ª*token*ï¼æ è®°ï¼ãç°å¨ï¼å¯¹äºç»å®çä¸ä¸ªååè¿ç®è¡¨è¾¾å¼ï¼è¯·æå¥¹çæ¯ä¸ªtokenåååºæ¥ãé¢ç®ä¿è¯ç»å®çè¡¨è¾¾å¼æ¯æ­£ç¡®çï¼ä¸éè¦åæææ§æ£æ¥ã\n\n\n### è¾å¥æ ¼å¼:\n\nå¨ä¸è¡ä¸­ç»åºé¿åº¦ä¸è¶è¿40ä¸ªå­ç¬¦çè¡¨è¾¾å¼ï¼å¶ä¸­æ²¡æç©ºæ ¼ï¼ä»ç±ä¸æä¸­tokençå­ç¬¦ç»æ\n\n### è¾åºæ ¼å¼:\n\nä¾æ¬¡è¾åºè¡¨è¾¾å¼ä¸­çtokensï¼æ¯ä¸ªtokenå ä¸è¡ã\n\n### è¾å¥æ ·ä¾:\n```in\n32*((2-2)+5)/(-15)\n```\n\n### è¾åºæ ·ä¾:\n```out\n32\n*\n(\n(\n2\n-\n2\n)\n+\n5\n)\n/\n(\n-15\n)\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "éå²å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "å­ç¬¦ä¸²",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 186,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4c93d1de004a0fcd34",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "**[åè¯´ç¹åºé¢èæ¯]**\n\nè¿ä¸ªé¢æ¯ä¸ºä½å¹´çº§åå­¦ãå­¦Cè¯­è¨çåå­¦åå¤çï¼å ä¸ºï¼å¯¹è¿é¨ååå­¦ï¼è¿ä¸ªé¢ç®ç¼åèµ·æ¥ç¥æä¸ç¹å¤æãå¦ææ¯é«å¹´çº§ãå­¦è¿äºæ­£åè¡¨è¾¾å¼ï¼Regular Expressionï¼çåå­¦æèå­¦è¿äºJavaç­OOè¯­è¨çåå­¦åè¿ä¸ªé¢ï¼åºå½åç°è¿é¢æ¯è¾ç®åå§ãå¦ï¼å¯¹äºï¼ä»ä¹æ¯tokenizerï¼è¯·èªè¡æ¥è¯¢è§£å³ãåæ­£å¨æ­¤å¤ä¸åºç¿»è¯æâä»¤çè§£æå¨âã\n\n**[æ­£é¢]**\n\nååè¿ç®è¡¨è¾¾å¼ç±**è¿ç®æ°**ï¼å¿å®åå«`æ°å­`ï¼å¯è½åå«`æ­£æè´ç¬¦å·`ã`å°æ°ç¹`ï¼ã**è¿ç®ç¬¦**ï¼åæ¬`+`ã`-`ã`*`ã`/`ï¼ä»¥åå°æ¬å·ï¼`(`å`)`ï¼ç»æï¼æ¯ä¸ªè¿ç®æ°ãè¿ç®ç¬¦åæ¬å·é½æ¯ä¸ä¸ª*token*ï¼æ è®°ï¼ãç°å¨ï¼å¯¹äºç»å®çä¸ä¸ªååè¿ç®è¡¨è¾¾å¼ï¼è¯·æå¥¹çæ¯ä¸ªtokenåååºæ¥ãé¢ç®ä¿è¯ç»å®çè¡¨è¾¾å¼æ¯æ­£ç¡®çï¼ä¸éè¦åæææ§æ£æ¥ã\n\n\n### è¾å¥æ ¼å¼:\n\nå¨ä¸è¡ä¸­ç»åºé¿åº¦ä¸è¶è¿40ä¸ªå­ç¬¦çè¡¨è¾¾å¼ï¼å¶ä¸­æ²¡æç©ºæ ¼ï¼ä»ç±ä¸æä¸­tokençå­ç¬¦ç»æ\n\n### è¾åºæ ¼å¼:\n\nä¾æ¬¡è¾åºè¡¨è¾¾å¼ä¸­çtokensï¼æ¯ä¸ªtokenå ä¸è¡ã\n\n### è¾å¥æ ·ä¾:\n```in\n32*((2-2)+5)/(-15)\n```\n\n### è¾åºæ ·ä¾:\n```out\n32\n*\n(\n(\n2\n-\n2\n)\n+\n5\n)\n/\n(\n-15\n)\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd03"
  },
  "id": "1581529427070414884",
  "label": "",
  "score": 20,
  "problemId": "1126",
  "title": "整数分解为若干项之和",
  "content": "将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。\n\n### 输入格式：\n\n每个输入包含一个测试用例，即正整数N (0$$<$$N$$\\le$$30)。\n\n### 输出格式：\n\n按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列$$N_1=$${$$n_1, n_2, \\cdots$$}和$$N_2=$${$$m_1, m_2, \\cdots$$}，若存在$$i$$使得$$n_1=m_1, \\cdots , n_i=m_i$$，但是$$n_{i+1} < m_{i+1}$$,则$$N_1$$序列必定在$$N_2$$序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。\n\n### 输入样例：\n```in\n7\n```\n\n### 输出样例：\n```out\n7=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+2\n7=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+2\n7=1+2+4;7=1+3+3;7=1+6;7=2+2+3\n7=2+5;7=3+4;7=7\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "76",
          "name": "递归函数",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 85,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4c93d1de004a0fcd39",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。\n\n### 输入格式：\n\n每个输入包含一个测试用例，即正整数N (0$$<$$N$$\\le$$30)。\n\n### 输出格式：\n\n按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列$$N_1=$${$$n_1, n_2, \\cdots$$}和$$N_2=$${$$m_1, m_2, \\cdots$$}，若存在$$i$$使得$$n_1=m_1, \\cdots , n_i=m_i$$，但是$$n_{i+1} < m_{i+1}$$,则$$N_1$$序列必定在$$N_2$$序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。\n\n### 输入样例：\n```in\n7\n```\n\n### 输出样例：\n```out\n7=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+2\n7=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+2\n7=1+2+4;7=1+3+3;7=1+6;7=2+2+3\n7=2+5;7=3+4;7=7\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd04"
  },
  "id": "1581529427070414885",
  "label": "",
  "score": 10,
  "problemId": "5011",
  "title": "计算阶乘和",
  "content": "对于给定的正整数$$N$$，需要你计算 $$S = 1! + 2! + 3! + ... + N!$$。\n\n### 输入格式：\n\n输入在一行中给出一个不超过10的正整数$$N$$。\n\n### 输出格式：\n\n在一行中输出$$S$$的值。\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n9\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 62,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5893d1de004a0fd1d3",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "对于给定的正整数$$N$$，需要你计算 $$S = 1! + 2! + 3! + ... + N!$$。\n\n### 输入格式：\n\n输入在一行中给出一个不超过10的正整数$$N$$。\n\n### 输出格式：\n\n在一行中输出$$S$$的值。\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n9\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd05"
  },
  "id": "1581529427070414886",
  "label": "",
  "score": 15,
  "problemId": "5013",
  "title": "跟奥巴马一起画方块",
  "content": "美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！\n\n### 输入格式：\n\n输入在一行中给出正方形边长$$N$$（$$3\\le N\\le 21$$）和组成正方形边的某种字符`C`，间隔一个空格。\n\n### 输出格式：\n\n输出由给定字符`C`画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的50%（四舍五入取整）。\n\n### 输入样例：\n```in\n10 a\n```\n\n### 输出样例：\n```out\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 99,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5893d1de004a0fd1d5",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！\n\n### 输入格式：\n\n输入在一行中给出正方形边长$$N$$（$$3\\le N\\le 21$$）和组成正方形边的某种字符`C`，间隔一个空格。\n\n### 输出格式：\n\n输出由给定字符`C`画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的50%（四舍五入取整）。\n\n### 输入样例：\n```in\n10 a\n```\n\n### 输出样例：\n```out\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d127fb4a7dada3b8bd06"
  },
  "id": "1581529427070414887",
  "label": "",
  "score": 15,
  "problemId": "6085",
  "title": "出生年",
  "content": "![](~/355)\n\n以上是新浪微博中一奇葩贴：“我出生于1988年，直到25岁才遇到4个数字都不相同的年份。”也就是说，直到2013年才达到“4个数字都不相同”的要求。本题请你根据要求，自动填充“我出生于`y`年，直到`x`岁才遇到`n`个数字都不相同的年份”这句话。\n\n### 输入格式：\n\n输入在一行中给出出生年份`y`和目标年份中不同数字的个数`n`，其中`y`在[1, 3000]之间，`n`可以是2、或3、或4。注意不足4位的年份要在前面补零，例如公元1年被认为是0001年，有2个不同的数字0和1。\n\n### 输出格式：\n\n根据输入，输出`x`和能达到要求的年份。数字间以1个空格分隔，行首尾不得有多余空格。年份要按4位输出。注意：所谓“`n`个数字都不相同”是指不同的数字正好是`n`个。如“2013”被视为满足“4位数字都不同”的条件，但不被视为满足2位或3位数字不同的条件。\n\n### 输入样例1：\n```in\n1988 4\n```\n\n### 输出样例1：\n```out\n25 2013\n```\n\n### 输入样例2：\n```\n1 2\n```\n\n### 输出样例2：\n```\n0 0001\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 115,
  "problemSetId": "1581529426990723072",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5c93d1de004a0fd2e5",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![](~/355)\n\n以上是新浪微博中一奇葩贴：“我出生于1988年，直到25岁才遇到4个数字都不相同的年份。”也就是说，直到2013年才达到“4个数字都不相同”的要求。本题请你根据要求，自动填充“我出生于`y`年，直到`x`岁才遇到`n`个数字都不相同的年份”这句话。\n\n### 输入格式：\n\n输入在一行中给出出生年份`y`和目标年份中不同数字的个数`n`，其中`y`在[1, 3000]之间，`n`可以是2、或3、或4。注意不足4位的年份要在前面补零，例如公元1年被认为是0001年，有2个不同的数字0和1。\n\n### 输出格式：\n\n根据输入，输出`x`和能达到要求的年份。数字间以1个空格分隔，行首尾不得有多余空格。年份要按4位输出。注意：所谓“`n`个数字都不相同”是指不同的数字正好是`n`个。如“2013”被视为满足“4位数字都不同”的条件，但不被视为满足2位或3位数字不同的条件。\n\n### 输入样例1：\n```in\n1988 4\n```\n\n### 输出样例1：\n```out\n25 2013\n```\n\n### 输入样例2：\n```\n1 2\n```\n\n### 输出样例2：\n```\n0 0001\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd07"
  },
  "id": "1584433205096628224",
  "label": "",
  "score": 2,
  "problemId": "1052",
  "title": "Among the following assignments or initializations, __ is wrong.",
  "content": "Among the following assignments or initializations, __ is wrong. @[](2)\nA. `char s[ ]=\"hello\";`\t\nB. `char s[10]; s=\"hello\";` \nC. `char *p=\"hello\";\t`\nD. `char *p; p=\"hello\";`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "Among the following assignments or initializations, __ is wrong.",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd08"
  },
  "id": "1584433205096628225",
  "label": "",
  "score": 2,
  "problemId": "1056",
  "title": "According to the declaration: `int (*p)[10];`, p is a(n) __.",
  "content": "According to the declaration: `int (*p)[10];`, p is a(n) __.   @[](2)\n\nA. pointer\nB. array\nC. function\nD. element of array",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "According to the declaration: `int (*p)[10];`, p is a(n) __.",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd09"
  },
  "id": "1584433205096628226",
  "label": "",
  "score": 2,
  "problemId": "1102",
  "title": "Among the following statements which intend to define arrays, wh",
  "content": "Among the following statements which intend to define arrays, which one is wrong? @[](2)\nA. `int a[1][3];\t`\nB. `int x[2][2]={1,2,3,4}; `\nC. `int x[2][]={1,2,4,6};\t\t`\nD. `int m[][3]={1,2,3,4,5,6};`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "Among the following statements which intend to define arrays, which one is wrong?",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0a"
  },
  "id": "1584433205096628227",
  "label": "",
  "score": 2,
  "problemId": "1105",
  "title": "以下定义语句中不正确的是__。",
  "content": "以下定义语句中不正确的是__。  @[](2)\n\nA. `double x[5]={2.0, 4.0, 6.0, 8.0, 10.0};\t`\nB. `char c2[]={'\\x10', '\\xa', '\\x8'};`\nC. `char c1[]={'1', '2', '3', '4', '5'};\t`\nD. `int y[5]={0,1,3,5,7,9};`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "以下定义语句中不正确的是__。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0b"
  },
  "id": "1584433205096628228",
  "label": "",
  "score": 2,
  "problemId": "1107",
  "title": "假设`scanf`语句执行时输入`ABCDE`<回车>，能使`puts(s)`语句正确输出`ABCDE`字符串的程序段是__。",
  "content": "假设`scanf`语句执行时输入`ABCDE`<回车>，能使`puts(s)`语句正确输出`ABCDE`字符串的程序段是__。 @[](2)\nA. `char s[5]={\"ABCDE\"}; puts(s);`\nB. `char s[5]={'A', 'B', 'C', 'D', 'E'}; puts(s);`\nC. `char *s; scanf(\"%s\", s); puts(s);\t`\nD. `char *s; s=\"ABCDE\"; puts(s);`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "假设`scanf`语句执行时输入`ABCDE`<回车>，能使`puts(s)`语句正确输出`ABCDE`字符串的程序段是__。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0c"
  },
  "id": "1584433205096628229",
  "label": "",
  "score": 2,
  "problemId": "1109",
  "title": "Given `int a[2][3];`.  Which of the following can correctly make",
  "content": "Given `int a[2][3];`.  Which of the following can correctly make reference to array `a`?  @[](2)\n\nA. `a[2][!1]  `\nB. `a[2][3]`\nC. `a[0][3]`\nD. `a[1>2][ !1]`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "Given `int a[2][3];`.  Which of the following can correctly make reference to array `a`?",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0d"
  },
  "id": "1584433205096628230",
  "label": "",
  "score": 2,
  "problemId": "1111",
  "title": "Among the following statements, __  is equivalent to the declara",
  "content": "Among the following statements, __  is equivalent to the declaration: `int *p[4];`. @[](2)\n\nA. `int  p[4];`\nB. `int  **p;`\nC. `int  *(p[4]);`\nD. `int  (*p)[4];`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "Among the following statements, __  is equivalent to the declaration: `int *p[4];`.",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0e"
  },
  "id": "1584433205096628231",
  "label": "",
  "score": 2,
  "problemId": "1112",
  "title": "If `a` is an array with 4 integer elements, __ is not correct am",
  "content": "If `a` is an array with 4 integer elements, __ is not correct among the following declarations.  @[](2)\n\nA. `int  a[4]={0};`\nB. `int  a[]={0, 0, 0, 0};`\nC. `int  a[1+3];`\nD. `int  i=4, a[i];`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "If `a` is an array with 4 integer elements, __ is not correct among the following declarations.",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd0f"
  },
  "id": "1584433205096628232",
  "label": "",
  "score": 2,
  "problemId": "1113",
  "title": "According to the declaration: `static int a[3][4]={0};` the corr",
  "content": "According to the declaration: `static int a[3][4]={0};` the correct description is __. @[](2)\n\nA. Only the initial value of a[0][0] is 0.\nB. This declaration is not correct. \nC. Every element in the array can get its initial value, but may not be 0; \nD. Every element in the array has initial value 0.",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "According to the declaration: `static int a[3][4]={0};` the correct description is __.",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd10"
  },
  "id": "1584433205096628233",
  "label": "",
  "score": 2,
  "problemId": "1114",
  "title": "In the following declarations, the correct assignment expression",
  "content": "In the following declarations, the correct assignment expression is __.  @[](2)\n\n```\nint *p[3], a[3];\n```\n\nA. `p = a`\nB. `p = &a[0]`\nC. `*p = a` \t\nD. `p[0] = *a`",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "In the following declarations, the correct assignment expression is __.\n\n```\nint *p[3], a[3];\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd11"
  },
  "id": "1584433205096628234",
  "label": "",
  "score": 10,
  "problemId": "380",
  "title": "简单输出整数",
  "content": "本题要求实现一个函数，对给定的正整数`N`，打印从1到`N`的全部正整数。\n\n### 函数接口定义：\n```c++\nvoid PrintN ( int N );\n```\n\n其中`N`是用户传入的参数。该函数必须将从1到`N`的全部正整数顺序打印出来，每个数字占1行。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid PrintN ( int N );\n\nint main ()\n{\n    int N;\n\n    scanf(\"%d\", &N);\n    PrintN( N );\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n1\n2\n3\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 84,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个函数，对给定的正整数`N`，打印从1到`N`的全部正整数。\n\n### 函数接口定义：\n```c++\nvoid PrintN ( int N );\n```\n\n其中`N`是用户传入的参数。该函数必须将从1到`N`的全部正整数顺序打印出来，每个数字占1行。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid PrintN ( int N );\n\nint main ()\n{\n    int N;\n\n    scanf(\"%d\", &N);\n    PrintN( N );\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n3\n```\n\n### 输出样例：\n```out\n1\n2\n3\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd12"
  },
  "id": "1584433205096628235",
  "label": "",
  "score": 15,
  "problemId": "381",
  "title": "多项式求值",
  "content": "本题要求实现一个函数，计算阶数为`n`，系数为`a[0]` ... `a[n]`的多项式$$f(x)=\\sum_{i=0}^{n}(a[i]\\times x^i)$$ 在`x`点的值。\n\n### 函数接口定义：\n```c++\ndouble f( int n, double a[], double x );\n```\n\n其中`n`是多项式的阶数，`a[]`中存储系数，`x`是给定点。函数须返回多项式`f(x)`的值。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\n#define MAXN 10\n\ndouble f( int n, double a[], double x );\n\nint main()\n{\n    int n, i;\n    double a[MAXN], x;\n\t\n    scanf(\"%d %lf\", &n, &x);\n    for ( i=0; i<=n; i++ )\n        scanf(\"%lf\", &a[i]);\n    printf(\"%.1f\\n\", f(n, a, x));\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n2 1.1\n1 2.5 -38.7\n```\n\n### 输出样例：\n```out\n-43.1\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 82,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个函数，计算阶数为`n`，系数为`a[0]` ... `a[n]`的多项式$$f(x)=\\sum_{i=0}^{n}(a[i]\\times x^i)$$ 在`x`点的值。\n\n### 函数接口定义：\n```c++\ndouble f( int n, double a[], double x );\n```\n\n其中`n`是多项式的阶数，`a[]`中存储系数，`x`是给定点。函数须返回多项式`f(x)`的值。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\n#define MAXN 10\n\ndouble f( int n, double a[], double x );\n\nint main()\n{\n    int n, i;\n    double a[MAXN], x;\n\t\n    scanf(\"%d %lf\", &n, &x);\n    for ( i=0; i<=n; i++ )\n        scanf(\"%lf\", &a[i]);\n    printf(\"%.1f\\n\", f(n, a, x));\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n2 1.1\n1 2.5 -38.7\n```\n\n### 输出样例：\n```out\n-43.1\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd13"
  },
  "id": "1584433205096628236",
  "label": "",
  "score": 20,
  "problemId": "389",
  "title": "阶乘计算升级版",
  "content": "本题要求实现一个打印非负整数阶乘的函数。\n\n### 函数接口定义：\n```c++\nvoid Print_Factorial ( const int N );\n```\n\n其中`N`是用户传入的参数，其值不超过1000。如果`N`是非负整数，则该函数必须在一行中打印出`N`!的值，否则打印“Invalid input”。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid Print_Factorial ( const int N );\n\nint main()\n{\n    int N;\n\t\n    scanf(\"%d\", &N);\n    Print_Factorial(N);\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n15\n```\n\n### 输出样例：\n```out\n1307674368000\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 225,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个打印非负整数阶乘的函数。\n\n### 函数接口定义：\n```c++\nvoid Print_Factorial ( const int N );\n```\n\n其中`N`是用户传入的参数，其值不超过1000。如果`N`是非负整数，则该函数必须在一行中打印出`N`!的值，否则打印“Invalid input”。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid Print_Factorial ( const int N );\n\nint main()\n{\n    int N;\n\t\n    scanf(\"%d\", &N);\n    Print_Factorial(N);\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n15\n```\n\n### 输出样例：\n```out\n1307674368000\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd14"
  },
  "id": "1584433205096628237",
  "label": "",
  "score": 15,
  "problemId": "403",
  "title": "使用函数求余弦函数的近似值",
  "content": "本题要求实现一个函数，用下列公式求$$\\cos (x)$$的近似值，精确到最后一项的绝对值小于$$e$$：\n\n$$\\cos (x) = x^0 / 0! - x^2 / 2! + x^4 / 4! - x^6 / 6! + \\cdots$$\n\n### 函数接口定义：\n```c++\ndouble funcos( double e, double x );\n```\n其中用户传入的参数为误差上限`e`和自变量`x`；函数`funcos`应返回用给定公式计算出来、并且满足误差要求的$$\\cos (x)$$的近似值。输入输出均在双精度范围内。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#include <math.h>\n\ndouble funcos( double e, double x );\n\nint main()\n{    \n    double e, x;\n\n    scanf(\"%lf %lf\", &e, &x);\n    printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x));\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n0.01 -3.14\n```\n\n### 输出样例：\n```out\ncos(-3.14) = -0.999899\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 131,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个函数，用下列公式求$$\\cos (x)$$的近似值，精确到最后一项的绝对值小于$$e$$：\n\n$$\\cos (x) = x^0 / 0! - x^2 / 2! + x^4 / 4! - x^6 / 6! + \\cdots$$\n\n### 函数接口定义：\n```c++\ndouble funcos( double e, double x );\n```\n其中用户传入的参数为误差上限`e`和自变量`x`；函数`funcos`应返回用给定公式计算出来、并且满足误差要求的$$\\cos (x)$$的近似值。输入输出均在双精度范围内。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#include <math.h>\n\ndouble funcos( double e, double x );\n\nint main()\n{    \n    double e, x;\n\n    scanf(\"%lf %lf\", &e, &x);\n    printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x));\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n0.01 -3.14\n```\n\n### 输出样例：\n```out\ncos(-3.14) = -0.999899\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd15"
  },
  "id": "1584433205096628238",
  "label": "",
  "score": 20,
  "problemId": "416",
  "title": "使用函数输出指定范围内的完数",
  "content": "本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数$$m$$和$$n$$（$$0<m\\le n\\le 10000$$）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。\n\n### 函数接口定义：\n```c++\nint factorsum( int number );\nvoid PrintPN( int m, int n );\n```\n其中函数`factorsum`须返回`int number`的因子和；函数`PrintPN`要逐行输出给定范围[`m`, `n`]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + ... + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nint factorsum( int number );\nvoid PrintPN( int m, int n );\n\t\nint main()\n{\n    int m, n;\n\n    scanf(\"%d %d\", &m, &n);\n    if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m);\n    if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n);\n    PrintPN(m, n);\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例1：\n```in\n6 30\n```\n\n### 输出样例1：\n```out\n6 is a perfect number\n6 = 1 + 2 + 3\n28 = 1 + 2 + 4 + 7 + 14\n```\n\n### 输入样例2：\n```in\n7 25\n```\n\n### 输出样例2：\n```out\nNo perfect number\n```\n\n**鸣谢杭州电子科技大学网络空间安全学院李丰同学修正数据！**\n",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 115,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数$$m$$和$$n$$（$$0<m\\le n\\le 10000$$）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。\n\n### 函数接口定义：\n```c++\nint factorsum( int number );\nvoid PrintPN( int m, int n );\n```\n其中函数`factorsum`须返回`int number`的因子和；函数`PrintPN`要逐行输出给定范围[`m`, `n`]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + ... + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nint factorsum( int number );\nvoid PrintPN( int m, int n );\n\t\nint main()\n{\n    int m, n;\n\n    scanf(\"%d %d\", &m, &n);\n    if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m);\n    if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n);\n    PrintPN(m, n);\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例1：\n```in\n6 30\n```\n\n### 输出样例1：\n```out\n6 is a perfect number\n6 = 1 + 2 + 3\n28 = 1 + 2 + 4 + 7 + 14\n```\n\n### 输入样例2：\n```in\n7 25\n```\n\n### 输出样例2：\n```out\nNo perfect number\n```\n\n**鸣谢杭州电子科技大学网络空间安全学院李丰同学修正数据！**\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd16"
  },
  "id": "1584433205096628239",
  "label": "",
  "score": 20,
  "problemId": "434",
  "title": "报数",
  "content": "报数游戏是这样的：有$$n$$个人围成一圈，按顺序从1到$$n$$编好号。从第一个人开始报数，报到$$m$$（$$<n$$）的人退出圈子；下一个人从1开始报数，报到$$m$$的人退出圈子。如此下去，直到留下最后一个人。\n\n本题要求编写函数，给出每个人的退出顺序编号。\n\n### 函数接口定义：\n```c++\nvoid CountOff( int n, int m, int out[] );\n```\n其中`n`是初始人数；`m`是游戏规定的退出位次（保证为小于$$n$$的正整数）。函数`CountOff`将每个人的退出顺序编号存在数组`out[]`中。因为C语言数组下标是从0开始的，所以第`i`个位置上的人是第`out[i-1]`个退出的。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 20\n\nvoid CountOff( int n, int m, int out[] );\n\nint main()\n{\n    int out[MAXN], n, m;\n    int i;\n    \n    scanf(\"%d %d\", &n, &m);\n    CountOff( n, m, out );   \n    for ( i = 0; i < n; i++ )\n        printf(\"%d \", out[i]);\n    printf(\"\\n\");\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n11 3\n```\n\n### 输出样例：\n```out\n4 10 1 7 5 2 11 9 3 6 8 \n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 102,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "报数游戏是这样的：有$$n$$个人围成一圈，按顺序从1到$$n$$编好号。从第一个人开始报数，报到$$m$$（$$<n$$）的人退出圈子；下一个人从1开始报数，报到$$m$$的人退出圈子。如此下去，直到留下最后一个人。\n\n本题要求编写函数，给出每个人的退出顺序编号。\n\n### 函数接口定义：\n```c++\nvoid CountOff( int n, int m, int out[] );\n```\n其中`n`是初始人数；`m`是游戏规定的退出位次（保证为小于$$n$$的正整数）。函数`CountOff`将每个人的退出顺序编号存在数组`out[]`中。因为C语言数组下标是从0开始的，所以第`i`个位置上的人是第`out[i-1]`个退出的。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 20\n\nvoid CountOff( int n, int m, int out[] );\n\nint main()\n{\n    int out[MAXN], n, m;\n    int i;\n    \n    scanf(\"%d %d\", &n, &m);\n    CountOff( n, m, out );   \n    for ( i = 0; i < n; i++ )\n        printf(\"%d \", out[i]);\n    printf(\"\\n\");\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n11 3\n```\n\n### 输出样例：\n```out\n4 10 1 7 5 2 11 9 3 6 8 \n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd17"
  },
  "id": "1584433205096628240",
  "label": "",
  "score": 20,
  "problemId": "436",
  "title": "删除字符",
  "content": "本题要求实现一个删除字符串中的指定字符的简单函数。\n\n### 函数接口定义：\n```c++\nvoid delchar( char *str, char c );\n```\n其中`char *str`是传入的字符串，`c`是待删除的字符。函数`delchar`的功能是将字符串`str`中出现的所有`c`字符删除。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 20\n\nvoid delchar( char *str, char c );\nvoid ReadString( char s[] ); /* 由裁判实现，略去不表 */\n\nint main()\n{\n    char str[MAXN], c;\n\n    scanf(\"%c\\n\", &c);\n    ReadString(str);\n    delchar(str, c);\n    printf(\"%s\\n\", str);\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\na\nhappy new year\n\n```\n\n### 输出样例：\n```out\nhppy new yer\n\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 102,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个删除字符串中的指定字符的简单函数。\n\n### 函数接口定义：\n```c++\nvoid delchar( char *str, char c );\n```\n其中`char *str`是传入的字符串，`c`是待删除的字符。函数`delchar`的功能是将字符串`str`中出现的所有`c`字符删除。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 20\n\nvoid delchar( char *str, char c );\nvoid ReadString( char s[] ); /* 由裁判实现，略去不表 */\n\nint main()\n{\n    char str[MAXN], c;\n\n    scanf(\"%c\\n\", &c);\n    ReadString(str);\n    delchar(str, c);\n    printf(\"%s\\n\", str);\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\na\nhappy new year\n\n```\n\n### 输出样例：\n```out\nhppy new yer\n\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd18"
  },
  "id": "1584433205096628241",
  "label": "",
  "score": 15,
  "problemId": "439",
  "title": "分类统计各类字符个数",
  "content": "本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。\n\n### 函数接口定义：\n```c++\nvoid StringCount( char *s );\n```\n其中 `char *s` 是用户传入的字符串。函数`StringCount`须在一行内按照\n```\n大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数\n```\n的格式输出。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXS 15\n\nvoid StringCount( char *s );\nvoid ReadString( char *s ); /* 由裁判实现，略去不表 */\n\nint main()\n{\n    char s[MAXS];\n\n    ReadString(s);\n    StringCount(s);\n\n    return 0;\n}\n\n/* Your function will be put here */\n```\n\n### 输入样例：\n```in\naZ&*?\n093 Az\n\n```\n\n### 输出样例：\n```out\n2 2 1 3 4\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 62,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。\n\n### 函数接口定义：\n```c++\nvoid StringCount( char *s );\n```\n其中 `char *s` 是用户传入的字符串。函数`StringCount`须在一行内按照\n```\n大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数\n```\n的格式输出。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXS 15\n\nvoid StringCount( char *s );\nvoid ReadString( char *s ); /* 由裁判实现，略去不表 */\n\nint main()\n{\n    char s[MAXS];\n\n    ReadString(s);\n    StringCount(s);\n\n    return 0;\n}\n\n/* Your function will be put here */\n```\n\n### 输入样例：\n```in\naZ&*?\n093 Az\n\n```\n\n### 输出样例：\n```out\n2 2 1 3 4\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd19"
  },
  "id": "1584433205096628242",
  "label": "",
  "score": 15,
  "problemId": "454",
  "title": "十进制转换二进制",
  "content": "本题要求实现一个函数，将非负整数n转换为二进制后输出。\n\n### 函数接口定义：\n```c++\nvoid dectobin( int n );\n```\n函数`dectobin`应在一行中打印出二进制的`n`。建议用递归实现。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid dectobin( int n );\n\nint main()\n{\n    int n;\n    \n    scanf(\"%d\", &n);\n    dectobin(n);\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n10\n```\n\n### 输出样例：\n```out\n1010\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "76",
          "name": "递归函数",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 67,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个函数，将非负整数n转换为二进制后输出。\n\n### 函数接口定义：\n```c++\nvoid dectobin( int n );\n```\n函数`dectobin`应在一行中打印出二进制的`n`。建议用递归实现。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n\nvoid dectobin( int n );\n\nint main()\n{\n    int n;\n    \n    scanf(\"%d\", &n);\n    dectobin(n);\n    \n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n```\n\n### 输入样例：\n```in\n10\n```\n\n### 输出样例：\n```out\n1010\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1a"
  },
  "id": "1584433205096628243",
  "label": "",
  "score": 15,
  "problemId": "1282956264006713344",
  "title": "使用函数找出数组中的最大值",
  "content": "本题要求实现一个找出整型数组中最大值的函数。\n\n### 函数接口定义：\n```c++\nint FindArrayMax( int a[], int n );\n```\n\n其中`a`是用户传入的数组，`n`是数组`a`中元素的个数。函数返回数组`a`中的最大值。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 10\n\nint FindArrayMax( int a[], int n );\n\nint main()\n{\n    int i, n;\n    int a[MAXN];\n    \n    scanf(\"%d\", &n);\n    for( i=0; i<n; i++ ){\n        scanf(\"%d\", &a[i]);\n    }\n\n    printf(\"%d\\n\", FindArrayMax(a, n));\n   \n    return 0;\n}\n\n/* 请在这里填写答案 */\n```\n\n### 输入样例：\n\n```in\n4\n20 78 99 -14\n```\n\n### 输出样例：\n\n```out\n99\n```\n",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 48,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {},
  "solution": "",
  "description": "本题要求实现一个找出整型数组中最大值的函数。\n\n### 函数接口定义：\n```c++\nint FindArrayMax( int a[], int n );\n```\n\n其中`a`是用户传入的数组，`n`是数组`a`中元素的个数。函数返回数组`a`中的最大值。\n\n### 裁判测试程序样例：\n```c++\n#include <stdio.h>\n#define MAXN 10\n\nint FindArrayMax( int a[], int n );\n\nint main()\n{\n    int i, n;\n    int a[MAXN];\n    \n    scanf(\"%d\", &n);\n    for( i=0; i<n; i++ ){\n        scanf(\"%d\", &a[i]);\n    }\n\n    printf(\"%d\\n\", FindArrayMax(a, n));\n   \n    return 0;\n}\n\n/* 请在这里填写答案 */\n```\n\n### 输入样例：\n\n```in\n4\n20 78 99 -14\n```\n\n### 输出样例：\n\n```out\n99\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1b"
  },
  "id": "1584433205096628244",
  "label": "",
  "score": 15,
  "problemId": "423",
  "title": "判断上三角矩阵",
  "content": "上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。\n\n本题要求编写程序，判断一个给定的方阵是否上三角矩阵。\n\n### 输入格式：\n\n输入第一行给出一个正整数$$T$$，为待测矩阵的个数。接下来给出$$T$$个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数$$n$$。随后$$n$$行，每行给出$$n$$个整数，其间以空格分隔。\n\n### 输出格式：\n\n每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。\n\n### 输入样例：\n```in\n3\n3\n1 2 3\n0 4 5\n0 0 6\n2\n1 0\n-8 2\n3\n1 2 3\n1 4 5\n0 -1 6\n\n```\n\n### 输出样例：\n```out\nYES\nNO\nNO\n\n```\n\n**鸣谢中水七局机电安装分局喻春桥补充数据！**",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 119,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc2a",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。\n\n本题要求编写程序，判断一个给定的方阵是否上三角矩阵。\n\n### 输入格式：\n\n输入第一行给出一个正整数$$T$$，为待测矩阵的个数。接下来给出$$T$$个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数$$n$$。随后$$n$$行，每行给出$$n$$个整数，其间以空格分隔。\n\n### 输出格式：\n\n每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。\n\n### 输入样例：\n```in\n3\n3\n1 2 3\n0 4 5\n0 0 6\n2\n1 0\n-8 2\n3\n1 2 3\n1 4 5\n0 -1 6\n\n```\n\n### 输出样例：\n```out\nYES\nNO\nNO\n\n```\n\n**鸣谢中水七局机电安装分局喻春桥补充数据！**",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1c"
  },
  "id": "1584433205096628245",
  "label": "",
  "score": 15,
  "problemId": "541",
  "title": "藏头诗",
  "content": "本题要求编写一个解密藏头诗的程序。\n\n*注：在 2022 年 7 月 14 日 16 点 50 分以后，该题数据修改为 UTF-8 编码。*\n\n### 输入格式：\n\n输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占三个字节。\n\n### 输出格式：\n\n取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。\n\n### 输入样例：\n```in\n一叶轻舟向东流\n帆稍轻握杨柳手\n风纤碧波微起舞\n顺水任从雅客流\n```\n\n### 输出样例：\n```out\n一帆风顺\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 133,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "62cfd8ea953c2f464cb304c6",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 2
    }
  },
  "solution": "",
  "description": "本题要求编写一个解密藏头诗的程序。\n\n*注：在 2022 年 7 月 14 日 16 点 50 分以后，该题数据修改为 UTF-8 编码。*\n\n### 输入格式：\n\n输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占三个字节。\n\n### 输出格式：\n\n取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。\n\n### 输入样例：\n```in\n一叶轻舟向东流\n帆稍轻握杨柳手\n风纤碧波微起舞\n顺水任从雅客流\n```\n\n### 输出样例：\n```out\n一帆风顺\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1d"
  },
  "id": "1584433205096628246",
  "label": "",
  "score": 20,
  "problemId": "3600",
  "title": "Left-pad",
  "content": "根据新浪微博上的消息，有一位开发者不满NPM（Node Package Manager）的做法，收回了自己的开源代码，其中包括一个叫left-pad的模块，就是这个模块把javascript里面的React/Babel干瘫痪了。这是个什么样的模块？就是在字符串前填充一些东西到一定的长度。例如用`*`去填充字符串`GPLT`，使之长度为10，调用left-pad的结果就应该是`******GPLT`。Node社区曾经对left-pad紧急发布了一个替代，被严重吐槽。下面就请你来实现一下这个模块。\n\n### 输入格式：\n\n输入在第一行给出一个正整数`N`（$$\\le 10^4$$）和一个字符，分别是填充结果字符串的长度和用于填充的字符，中间以1个空格分开。第二行给出原始的非空字符串，以回车结束。\n\n### 输出格式：\n\n在一行中输出结果字符串。\n\n### 输入样例1：\n```in\n15 _\nI love GPLT\n```\n\n### 输出样例1：\n```out\n____I love GPLT\n```\n\n### 输入样例2：\n```\n4 *\nthis is a sample for cut\n```\n\n### 输出样例2：\n```\n cut\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 126,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5393d1de004a0fcef3",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "根据新浪微博上的消息，有一位开发者不满NPM（Node Package Manager）的做法，收回了自己的开源代码，其中包括一个叫left-pad的模块，就是这个模块把javascript里面的React/Babel干瘫痪了。这是个什么样的模块？就是在字符串前填充一些东西到一定的长度。例如用`*`去填充字符串`GPLT`，使之长度为10，调用left-pad的结果就应该是`******GPLT`。Node社区曾经对left-pad紧急发布了一个替代，被严重吐槽。下面就请你来实现一下这个模块。\n\n### 输入格式：\n\n输入在第一行给出一个正整数`N`（$$\\le 10^4$$）和一个字符，分别是填充结果字符串的长度和用于填充的字符，中间以1个空格分开。第二行给出原始的非空字符串，以回车结束。\n\n### 输出格式：\n\n在一行中输出结果字符串。\n\n### 输入样例1：\n```in\n15 _\nI love GPLT\n```\n\n### 输出样例1：\n```out\n____I love GPLT\n```\n\n### 输入样例2：\n```\n4 *\nthis is a sample for cut\n```\n\n### 输出样例2：\n```\n cut\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1e"
  },
  "id": "1584433205096628247",
  "label": "",
  "score": 20,
  "problemId": "6086",
  "title": "点赞",
  "content": "微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。本题就要求你写个程序，通过统计一个人点赞的纪录，分析这个人的特性。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 1000$$），是该用户点赞的博文数量。随后$$N$$行，每行给出一篇被其点赞的博文的特性描述，格式为“$$K$$ $$F_1\\cdots F_K$$”，其中$$1\\le K\\le 10$$，$$F_i$$（$$i=1, \\cdots , K$$）是特性标签的编号，我们将所有特性标签从1到1000编号。数字间以空格分隔。\n\n### 输出格式：\n\n统计所有被点赞的博文中最常出现的那个特性标签，在一行中输出它的编号和出现次数，数字间隔1个空格。如果有并列，则输出编号最大的那个。\n\n### 输入样例：\n```in\n4\n3 889 233 2\n5 100 3 233 2 73\n4 3 73 889 2\n2 233 123\n```\n\n### 输出样例：\n```out\n233 3\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 151,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa5c93d1de004a0fd2e6",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "```\n#include <stdio.h>\n\n#define MAXN 1001\n\nint main()\n{\n    int zan[MAXN];\n    int N, K, F, i, j;\n    int maxz, maxi;\n\n    scanf(\"%d\", &N);\n    for (i=0; i<MAXN; i++) zan[i] = 0;\n    for (i=0; i<N; i++) {\n        scanf(\"%d\", &K);\n        for (j=0; j<K; j++) {\n            scanf(\"%d\", &F);\n            zan[F]++;\n        }\n    }\n    maxz = zan[MAXN-1]; maxi = MAXN-1;\n    for (i=MAXN-2; i>0; i--)\n        if (zan[i]>maxz) {maxz = zan[i]; maxi = i;}\n    printf(\"%d %d\\n\", maxi, maxz);\n\n  \treturn 0;\n}\n\n```",
  "description": "微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。本题就要求你写个程序，通过统计一个人点赞的纪录，分析这个人的特性。\n\n### 输入格式：\n\n输入在第一行给出一个正整数$$N$$（$$\\le 1000$$），是该用户点赞的博文数量。随后$$N$$行，每行给出一篇被其点赞的博文的特性描述，格式为“$$K$$ $$F_1\\cdots F_K$$”，其中$$1\\le K\\le 10$$，$$F_i$$（$$i=1, \\cdots , K$$）是特性标签的编号，我们将所有特性标签从1到1000编号。数字间以空格分隔。\n\n### 输出格式：\n\n统计所有被点赞的博文中最常出现的那个特性标签，在一行中输出它的编号和出现次数，数字间隔1个空格。如果有并列，则输出编号最大的那个。\n\n### 输入样例：\n```in\n4\n3 889 233 2\n5 100 3 233 2 73\n4 3 73 889 2\n2 233 123\n```\n\n### 输出样例：\n```out\n233 3\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd1f"
  },
  "id": "1584433205096628248",
  "label": "",
  "score": 20,
  "problemId": "10595",
  "title": "A-B",
  "content": "本题要求你计算$$A-B$$。不过麻烦的是，$$A$$和$$B$$都是字符串 —— 即从字符串$$A$$中把字符串$$B$$所包含的字符全删掉，剩下的字符组成的就是字符串$$A-B$$。\n\n### 输入格式：\n\n输入在2行中先后给出字符串$$A$$和$$B$$。两字符串的长度都不超过$$10^4$$，并且保证每个字符串都是由可见的ASCII码和空白字符组成，最后以换行符结束。\n\n### 输出格式：\n\n在一行中打印出$$A-B$$的结果字符串。\n\n### 输入样例：\n```in\nI love GPLT!  It's a fun game!\naeiou\n```\n\n### 输出样例：\n```out\nI lv GPLT!  It's  fn gm!\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 60,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5af50fd38c3638000a2d933b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题¦æ±ä½ è®¡ç®$$A-B$$ãä¸è¿éº»ç¦çæ¯ï¼$$A$$å$$B$$é½æ¯å­ç¬¦ä¸² ââ å³ä»å­ç¬¦ä¸²$$A$$ä¸­æå­ç¬¦ä¸²$$B$$æåå«çå­ç¬¦å¨å æï¼å©ä¸çå­ç¬¦ç»æçå°±æ¯å­ç¬¦ä¸²$$A-B$$ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨2è¡ä¸­ååç»åºå­ç¬¦ä¸²$$A$$å$$B$$ãä¸¤å­ç¬¦ä¸²çé¿åº¦é½ä¸è¶è¿$$10^4$$ï¼å¹¶ä¸ä¿è¯æ¯ä¸ªå­ç¬¦ä¸²é½æ¯ç±å¯è§çASCIIç åç©ºç½å­ç¬¦ç»æï¼æåä»¥æ¢è¡ç¬¦ç»æã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­æå°åº$$A-B$$çç»æå­ç¬¦ä¸²ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\nI love GPLT!  It's a fun game!\naeiou\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\nI lv GPLT!  It's  fn gm!\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd20"
  },
  "id": "1584433205096628249",
  "label": "",
  "score": 15,
  "problemId": "965230363466522624",
  "title": "ç¦å°äº",
  "content": "âç¦âå­åçè´´ï¼å¯æâç¦å°âãä¸è®ºå°åºç®ä¸ç®æ°ä¿ï¼æ¬é¢ä¸è¯·ä½ ç¼åç¨åºï¼æåç§æ±å­åè¿æ¥è¾åºãè¿éè¦å¤ççæ¯ä¸ªæ±å­æ¯ç±ä¸ä¸ª N $$\\times$$ N çç½æ ¼ç»æçï¼ç½æ ¼ä¸­çåç´ æèä¸ºå­ç¬¦ `@` æèä¸ºç©ºæ ¼ãèåè¿æ¥çæ±å­æç¨çå­ç¬¦ç±è£å¤æå®ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ç¬¬ä¸è¡ä¸­ç»åºåè¿æ¥çæ±å­æç¨çå­ç¬¦ãä»¥åç½æ ¼çè§æ¨¡ N ï¼ä¸è¶è¿100çæ­£æ´æ°ï¼ï¼å¶é´ä»¥ 1 ä¸ªç©ºæ ¼åéï¼éå N è¡ï¼æ¯è¡ç»åº N ä¸ªå­ç¬¦ï¼æèä¸º `@` æèä¸ºç©ºæ ¼ã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºåç½®çç½æ ¼ï¼å¦æ ·ä¾æç¤ºãä½æ¯ï¼å¦æè¿ä¸ªå­æ­£è¿æ¥åè¿å»æ¯ä¸æ ·çï¼å°±åè¾åº`bu yong dao le`ï¼ç¶ååç¨è¾å¥æå®çå­ç¬¦å°å¶è¾åºã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n$ 9\n @  @@@@@\n@@@  @@@ \n @   @ @ \n@@@  @@@ \n@@@ @@@@@\n@@@ @ @ @\n@@@ @@@@@\n @  @ @ @\n @  @@@@@\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n$$$$$  $ \n$ $ $  $ \n$$$$$ $$$\n$ $ $ $$$\n$$$$$ $$$\n $$$  $$$\n $ $   $ \n $$$  $$$\n$$$$$  $ \n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n& 3\n@@@\n @ \n@@@\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\nbu yong dao le\n&&&\n & \n&&&\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "äºç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "åæ¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 71,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5a898c6f4e2391000bcc815c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "âç¦âå­åçè´´ï¼å¯æâç¦å°âãä¸è®ºå°åºç®ä¸ç®æ°ä¿ï¼æ¬é¢ä¸è¯·ä½ ç¼åç¨åºï¼æåç§æ±å­åè¿æ¥è¾åºãè¿éè¦å¤ççæ¯ä¸ªæ±å­æ¯ç±ä¸ä¸ª N $$\\times$$ N çç½æ ¼ç»æçï¼ç½æ ¼ä¸­çåç´ æèä¸ºå­ç¬¦ `@` æèä¸ºç©ºæ ¼ãèåè¿æ¥çæ±å­æç¨çå­ç¬¦ç±è£å¤æå®ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ç¬¬ä¸è¡ä¸­ç»åºåè¿æ¥çæ±å­æç¨çå­ç¬¦ãä»¥åç½æ ¼çè§æ¨¡ N ï¼ä¸è¶è¿100çæ­£æ´æ°ï¼ï¼å¶é´ä»¥ 1 ä¸ªç©ºæ ¼åéï¼éå N è¡ï¼æ¯è¡ç»åº N ä¸ªå­ç¬¦ï¼æèä¸º `@` æèä¸ºç©ºæ ¼ã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºåç½®çç½æ ¼ï¼å¦æ ·ä¾æç¤ºãä½æ¯ï¼å¦æè¿ä¸ªå­æ­£è¿æ¥åè¿å»æ¯ä¸æ ·çï¼å°±åè¾åº`bu yong dao le`ï¼ç¶ååç¨è¾å¥æå®çå­ç¬¦å°å¶è¾åºã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n$ 9\n @  @@@@@\n@@@  @@@ \n @   @ @ \n@@@  @@@ \n@@@ @@@@@\n@@@ @ @ @\n@@@ @@@@@\n @  @ @ @\n @  @@@@@\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n$$$$$  $ \n$ $ $  $ \n$$$$$ $$$\n$ $ $ $$$\n$$$$$ $$$\n $$$  $$$\n $ $   $ \n $$$  $$$\n$$$$$  $ \n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n& 3\n@@@\n @ \n@@@\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\nbu yong dao le\n&&&\n & \n&&&\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd21"
  },
  "id": "1584433205096628250",
  "label": "",
  "score": 15,
  "problemId": "965942423615721472",
  "title": "æ±éåæ°æ®çåæ¹å·®",
  "content": "è®¾è®¡å½æ°æ± N ä¸ªç»å®æ´æ°çåæ¹å·®ãè¥å° N ä¸ªæ° A[ ] çå¹³åå¼è®°ä¸º Avgï¼ååæ¹å·®è®¡ç®å¬å¼ä¸ºï¼$$\\sqrt{ [(A_1 - Avg)^2 + (A_2 - Avg)^2 + \\cdots + (A_N - Avg)^2]/N }$$ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥é¦åå¨ç¬¬ä¸è¡ç»åºä¸ä¸ªæ­£æ´æ° Nï¼$$\\le 10^4$$ï¼ï¼éåä¸è¡ç»åº N ä¸ªæ­£æ´æ°ãæææ°å­é½ä¸è¶è¿ 1000ï¼åè¡æ°å­ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºè¿Nä¸ªæ°çåæ¹å·®ï¼è¦æ±åºå®ç²¾åº¦è¾åºå°æ°ç¹å5ä½ã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n10\n6 3 7 1 4 8 2 9 11 5\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n3.03974\n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n1\n2\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\n0.00000\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "ä¸ç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 69,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5a8c239659ccc6000b63b0bf",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "è®¾è®¡å½æ°æ± N ä¸ªç»å®æ´æ°çåæ¹å·®ãè¥å° N ä¸ªæ° A[ ] çå¹³åå¼è®°ä¸º Avgï¼ååæ¹å·®è®¡ç®å¬å¼ä¸ºï¼$$\\sqrt{ [(A_1 - Avg)^2 + (A_2 - Avg)^2 + \\cdots + (A_N - Avg)^2]/N }$$ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥é¦åå¨ç¬¬ä¸è¡ç»åºä¸ä¸ªæ­£æ´æ° Nï¼$$\\le 10^4$$ï¼ï¼éåä¸è¡ç»åº N ä¸ªæ­£æ´æ°ãæææ°å­é½ä¸è¶è¿ 1000ï¼åè¡æ°å­ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºè¿Nä¸ªæ°çåæ¹å·®ï¼è¦æ±åºå®ç²¾åº¦è¾åºå°æ°ç¹å5ä½ã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n10\n6 3 7 1 4 8 2 9 11 5\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n3.03974\n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n1\n2\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\n0.00000\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd22"
  },
  "id": "1584433205096628251",
  "label": "",
  "score": 15,
  "problemId": "965946116134133760",
  "title": "ç»åæ°çå",
  "content": "ç»å® N ä¸ªé 0 çä¸ªä½æ°å­ï¼ç¨å¶ä¸­ä»»æ 2 ä¸ªæ°å­é½å¯ä»¥ç»åæ 1 ä¸ª 2 ä½çæ°å­ãè¦æ±ææå¯è½ç»ååºæ¥ç 2 ä½æ°å­çåãä¾å¦ç»å® 2ã5ã8ï¼åå¯ä»¥ç»ååºï¼25ã28ã52ã58ã82ã85ï¼å®ä»¬çåä¸º330ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­åç»åº Nï¼1 $$<$$ N $$<$$ 10ï¼ï¼éåä¸è¡ç»åº N ä¸ªä¸åçé 0 ä¸ªä½æ°å­ãæ°å­é´ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºææå¯è½ç»ååºæ¥ç2ä½æ°å­çåã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n3\n2 8 5\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n330\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "åµå¥å¾ªç¯",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "ä¸ç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 63,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5a8c27084e2391000bcc8163",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "ç»å® N ä¸ªé 0 çä¸ªä½æ°å­ï¼ç¨å¶ä¸­ä»»æ 2 ä¸ªæ°å­é½å¯ä»¥ç»åæ 1 ä¸ª 2 ä½çæ°å­ãè¦æ±ææå¯è½ç»ååºæ¥ç 2 ä½æ°å­çåãä¾å¦ç»å® 2ã5ã8ï¼åå¯ä»¥ç»ååºï¼25ã28ã52ã58ã82ã85ï¼å®ä»¬çåä¸º330ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­åç»åº Nï¼1 $$<$$ N $$<$$ 10ï¼ï¼éåä¸è¡ç»åº N ä¸ªä¸åçé 0 ä¸ªä½æ°å­ãæ°å­é´ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºææå¯è½ç»ååºæ¥ç2ä½æ°å­çåã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n3\n2 8 5\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n330\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd23"
  },
  "id": "1584433205096628252",
  "label": "",
  "score": 25,
  "problemId": "965958494880043008",
  "title": "æµ·çåèµ",
  "content": "P ä¸ªæµ·çå·äº D é¢é»ç³åæ¥å°å¬æµ·åèµï¼ä¸è´åæå¦ä¸åèµç­ç¥ï¼\n\né¦åï¼P ä¸ªæµ·çéè¿æ½ç­¾å³å® 1 - P çåºå·ãç¶åç±ç¬¬ 1 å·æµ·çæåºä¸ä¸ªåéæ¹æ¡ï¼æ¹æ¡åºç»åºæ¯ä¸ªæµ·çåå¾çå·ä½æ°éï¼ï¼å¦æè½å¤å¾å°åæ¬ 1 å·å¨åçç»å¯¹å¤æ°ï¼å³å¤§äºåæ°ï¼åæï¼åæç§è¯¥åéæ¹æ¡æ§è¡ï¼å¦å 1 å·å°è¢«æå¥å¤§æµ·åé²¨é±¼ï¼èåä¾æ¬¡ç±»ä¼¼å°ç±ç¬¬ 2 å·ãç¬¬ 3 å·ç­ç­æµ·çæåºæ¹æ¡ï¼ç´å°è½å¤è·å¾ç»å¯¹å¤æ°åæçæ¹æ¡åºç°ä¸ºæ­¢ï¼æèåªå©ä¸æåä¸ä½æµ·çï¼å¶ç¬å ææé»ç³ãè¯·ç¼åä¸ä¸ªç¨åºï¼ç»åºç¬¬ 1 å·æµ·ççé»ç³åéæ¹æ¡ä¸­èªå·±åå¾çé»ç³æ°éã\n\néå¸¦çä¸ä¸ªåå®ï¼\n\n- âèªæâä¸âè´ªå©ªâåå®ï¼æ¯ä¸ªæµ·çæ»è½å¤ä»¥æ¬äººå©çæå¤§åä½ä¸ºè¡ä¸ºååï¼\n- âäººæ§åâåå®ï¼å¨è½å¤åå¾å°½éå¤é»ç³çæåµä¸ï¼æµ·çä¸ä¼ææè´åä¼äºæ­»å°ï¼\n- âæ åè§âåå®ï¼æµ·çä¹é´æ²¡æä¸ªäººæ©æ¨ï¼åç»å¶ä»æµ·çé»ç³çæ¬¡åºä»¥å°åºå·ä¼åä¸ºååã\n\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åº 2 ä¸ªæ­£æ´æ° D å Pï¼3$$\\le$$P$$\\le$$D$$\\le$$100ï¼ã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºç¬¬ 1 å·æµ·ççé»ç³åéæ¹æ¡ä¸­èªå·±åå¾çé»ç³æ°éã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n10 7\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n6\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "åµå¥å¾ªç¯",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "äºç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 49,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5a8c328f59ccc6000b63b0c0",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "P ä¸ªæµ·çå·äº D é¢é»ç³åæ¥å°å¬æµ·åèµï¼ä¸è´åæå¦ä¸åèµç­ç¥ï¼\n\né¦åï¼P ä¸ªæµ·çéè¿æ½ç­¾å³å® 1 - P çåºå·ãç¶åç±ç¬¬ 1 å·æµ·çæåºä¸ä¸ªåéæ¹æ¡ï¼æ¹æ¡åºç»åºæ¯ä¸ªæµ·çåå¾çå·ä½æ°éï¼ï¼å¦æè½å¤å¾å°åæ¬ 1 å·å¨åçç»å¯¹å¤æ°ï¼å³å¤§äºåæ°ï¼åæï¼åæç§è¯¥åéæ¹æ¡æ§è¡ï¼å¦å 1 å·å°è¢«æå¥å¤§æµ·åé²¨é±¼ï¼èåä¾æ¬¡ç±»ä¼¼å°ç±ç¬¬ 2 å·ãç¬¬ 3 å·ç­ç­æµ·çæåºæ¹æ¡ï¼ç´å°è½å¤è·å¾ç»å¯¹å¤æ°åæçæ¹æ¡åºç°ä¸ºæ­¢ï¼æèåªå©ä¸æåä¸ä½æµ·çï¼å¶ç¬å ææé»ç³ãè¯·ç¼åä¸ä¸ªç¨åºï¼ç»åºç¬¬ 1 å·æµ·ççé»ç³åéæ¹æ¡ä¸­èªå·±åå¾çé»ç³æ°éã\n\néå¸¦çä¸ä¸ªåå®ï¼\n\n- âèªæâä¸âè´ªå©ªâåå®ï¼æ¯ä¸ªæµ·çæ»è½å¤ä»¥æ¬äººå©çæå¤§åä½ä¸ºè¡ä¸ºååï¼\n- âäººæ§åâåå®ï¼å¨è½å¤åå¾å°½éå¤é»ç³çæåµä¸ï¼æµ·çä¸ä¼ææè´åä¼äºæ­»å°ï¼\n- âæ åè§âåå®ï¼æµ·çä¹é´æ²¡æä¸ªäººæ©æ¨ï¼åç»å¶ä»æµ·çé»ç³çæ¬¡åºä»¥å°åºå·ä¼åä¸ºååã\n\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ä¸è¡ä¸­ç»åº 2 ä¸ªæ­£æ´æ° D å Pï¼3$$\\le$$P$$\\le$$D$$\\le$$100ï¼ã\n\n### è¾åºæ ¼å¼ï¼\n\nè¾åºç¬¬ 1 å·æµ·ççé»ç³åéæ¹æ¡ä¸­èªå·±åå¾çé»ç³æ°éã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n10 7\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n6\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd24"
  },
  "id": "1584433205096628253",
  "label": "",
  "score": 20,
  "problemId": "1066576425377521664",
  "title": "è°·æ­çæè",
  "content": "2004 å¹´ 7 æï¼è°·æ­å¨ç¡è°·ç 101 å·å¬è·¯è¾¹ç«ç«äºä¸åå·¨å¤§çå¹¿åçï¼å¦ä¸å¾ï¼ç¨äºæèãåå®¹è¶çº§ç®åï¼å°±æ¯ä¸ä¸ªä»¥ .com ç»å°¾çç½åï¼èåé¢çç½åæ¯ä¸ä¸ª 10 ä½ç´ æ°ï¼è¿ä¸ªç´ æ°æ¯èªç¶å¸¸æ° e ä¸­ææ©åºç°ç 10 ä½è¿ç»­æ°å­ãè½æ¾åºè¿ä¸ªç´ æ°çäººï¼å°±å¯ä»¥éè¿è®¿é®è°·æ­çè¿ä¸ªç½ç«è¿å¥æèæµç¨çä¸ä¸æ­¥ã\n\n![prime.jpg](~/57148679-d574-4f49-b048-775c6c07791c.jpg)\n\n\nèªç¶å¸¸æ° e æ¯ä¸ä¸ªèåçè¶è¶æ°ï¼åé¢è¥å¹²ä½ååºæ¥æ¯è¿æ ·çï¼e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642**7427466391**932003059921... å¶ä¸­ç²ä½æ åºç 10 ä½æ°å°±æ¯ç­æ¡ã\n\næ¬é¢è¦æ±ä½ ç¼ç¨è§£å³ä¸ä¸ªæ´éç¨çé®é¢ï¼ä»ä»»ä¸ç»å®çé¿åº¦ä¸º L çæ°å­ä¸­ï¼æ¾åºææ©åºç°ç K ä½è¿ç»­æ°å­æç»æçç´ æ°ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ç¬¬ä¸è¡ç»åº 2 ä¸ªæ­£æ´æ°ï¼åå«æ¯ Lï¼ä¸è¶è¿ 1000 çæ­£æ´æ°ï¼ä¸ºæ°å­é¿åº¦ï¼å Kï¼å°äº 10 çæ­£æ´æ°ï¼ãæ¥ä¸æ¥ä¸è¡ç»åºä¸ä¸ªé¿åº¦ä¸º L çæ­£æ´æ° Nã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­è¾åº N ä¸­ææ©åºç°ç K ä½è¿ç»­æ°å­æç»æçç´ æ°ãå¦æè¿æ ·çç´ æ°ä¸å­å¨ï¼åè¾åº `404`ãæ³¨æï¼åå§æ°å­ä¸­çåå¯¼é¶ä¹è®¡ç®å¨ä½æ°ä¹åãä¾å¦å¨ 200236 ä¸­æ¾ 4 ä½ç´ æ°ï¼0023 ç®æ¯è§£ï¼ä½ç¬¬ä¸ä½ 2 ä¸è½è¢«å½æ 0002 è¾åºï¼å ä¸ºå¨åå§æ°å­ä¸­ä¸å­å¨è¿ä¸ª 2 çåå¯¼é¶ã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n20 5\n23654987725541023819\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n49877\n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n10 3\n2468001680\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\n404\n```\n\n**é¸£è°¢ç¨æ· å¤§å° è¡¥åæ°æ®ï¼**",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "å­ç¬¦ä¸²",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 162,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5bfa3e4f75d1ab00095f44b9",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "2004 å¹´ 7 æï¼è°·æ­å¨ç¡è°·ç 101 å·å¬è·¯è¾¹ç«ç«äºä¸åå·¨å¤§çå¹¿åçï¼å¦ä¸å¾ï¼ç¨äºæèãåå®¹è¶çº§ç®åï¼å°±æ¯ä¸ä¸ªä»¥ .com ç»å°¾çç½åï¼èåé¢çç½åæ¯ä¸ä¸ª 10 ä½ç´ æ°ï¼è¿ä¸ªç´ æ°æ¯èªç¶å¸¸æ° e ä¸­ææ©åºç°ç 10 ä½è¿ç»­æ°å­ãè½æ¾åºè¿ä¸ªç´ æ°çäººï¼å°±å¯ä»¥éè¿è®¿é®è°·æ­çè¿ä¸ªç½ç«è¿å¥æèæµç¨çä¸ä¸æ­¥ã\n\n![prime.jpg](~/57148679-d574-4f49-b048-775c6c07791c.jpg)\n\n\nèªç¶å¸¸æ° e æ¯ä¸ä¸ªèåçè¶è¶æ°ï¼åé¢è¥å¹²ä½ååºæ¥æ¯è¿æ ·çï¼e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642**7427466391**932003059921... å¶ä¸­ç²ä½æ åºç 10 ä½æ°å°±æ¯ç­æ¡ã\n\næ¬é¢è¦æ±ä½ ç¼ç¨è§£å³ä¸ä¸ªæ´éç¨çé®é¢ï¼ä»ä»»ä¸ç»å®çé¿åº¦ä¸º L çæ°å­ä¸­ï¼æ¾åºææ©åºç°ç K ä½è¿ç»­æ°å­æç»æçç´ æ°ã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥å¨ç¬¬ä¸è¡ç»åº 2 ä¸ªæ­£æ´æ°ï¼åå«æ¯ Lï¼ä¸è¶è¿ 1000 çæ­£æ´æ°ï¼ä¸ºæ°å­é¿åº¦ï¼å Kï¼å°äº 10 çæ­£æ´æ°ï¼ãæ¥ä¸æ¥ä¸è¡ç»åºä¸ä¸ªé¿åº¦ä¸º L çæ­£æ´æ° Nã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­è¾åº N ä¸­ææ©åºç°ç K ä½è¿ç»­æ°å­æç»æçç´ æ°ãå¦æè¿æ ·çç´ æ°ä¸å­å¨ï¼åè¾åº `404`ãæ³¨æï¼åå§æ°å­ä¸­çåå¯¼é¶ä¹è®¡ç®å¨ä½æ°ä¹åãä¾å¦å¨ 200236 ä¸­æ¾ 4 ä½ç´ æ°ï¼0023 ç®æ¯è§£ï¼ä½ç¬¬ä¸ä½ 2 ä¸è½è¢«å½æ 0002 è¾åºï¼å ä¸ºå¨åå§æ°å­ä¸­ä¸å­å¨è¿ä¸ª 2 çåå¯¼é¶ã\n\n### è¾å¥æ ·ä¾ 1ï¼\n```in\n20 5\n23654987725541023819\n```\n\n### è¾åºæ ·ä¾ 1ï¼\n```out\n49877\n```\n\n### è¾å¥æ ·ä¾ 2ï¼\n```in\n10 3\n2468001680\n```\n\n### è¾åºæ ·ä¾ 2ï¼\n```out\n404\n```\n\n**é¸£è°¢ç¨æ· å¤§å° è¡¥åæ°æ®ï¼**",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd25"
  },
  "id": "1584433205096628254",
  "label": "",
  "score": 20,
  "problemId": "1090593877648371712",
  "title": "ç©éµåå¹³ç§»",
  "content": "ç»å®ä¸ä¸ª $$n\\times n$$ çæ´æ°ç©éµãå¯¹ä»»ä¸ç»å®çæ­£æ´æ° $$k<n$$ï¼æä»¬å°ç©éµçå¶æ°åçåç´ æ´ä½åä¸ä¾æ¬¡å¹³ç§» 1ãâ¦â¦ã$$k$$ã1ãâ¦â¦ã$$k$$ãâ¦â¦ ä¸ªä½ç½®ï¼å¹³ç§»ç©ºåºçä½ç½®ç¨æ´æ° $$x$$ è¡¥ãä½ éè¦è®¡ç®åºç»æç©éµçæ¯ä¸è¡åç´ çåã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥ç¬¬ä¸è¡ç»åº 3 ä¸ªæ­£æ´æ°ï¼$$n$$ï¼$$<100$$ï¼ã$$k$$ï¼$$<n$$ï¼ã$$x$$ï¼$$<100$$ï¼ï¼åå«å¦é¢é¢æè¿°ã\n\næ¥ä¸æ¥ $$n$$ è¡ï¼æ¯è¡ç»åº $$n$$ ä¸ªä¸è¶è¿ 100 çæ­£æ´æ°ï¼ä¸ºç©éµåç´ çå¼ãæ°å­é´ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­è¾åºå¹³ç§»åç¬¬ 1 å° $$n$$ è¡åç´ çåãæ°å­é´ä»¥ 1 ä¸ªç©ºæ ¼åéï¼è¡é¦å°¾ä¸å¾æå¤ä½ç©ºæ ¼ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n7 2 99\n11 87 23 67 20 75 89\n37 94 27 91 63 50 11\n44 38 50 26 40 26 24\n73 85 63 28 62 18 68\n15 83 27 97 88 25 43\n23 78 98 20 30 81 99\n77 36 48 59 25 34 22\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n440 399 369 421 302 386 428\n```\n\n**æ ·ä¾è§£è¯»**\n\néè¦å¹³ç§»çæ¯ç¬¬ 2ã4ã6 åãç»å® $$k=2$$ï¼åºè¯¥å°è¿ä¸åé¡ºæ¬¡æ´ä½åä¸å¹³ç§» 1ã2ã1 ä½ï¼å¦æææ´å¤åï¼å°±åºè¯¥æç§ 1ã2ã1ã2 â¦â¦ è¿ä¸ªè§å¾é¡ºæ¬¡åä¸å¹³ç§»ï¼ï¼é¡¶ç«¯çç©ºä½ç¨ 99 æ¥å¡«åãå¹³ç§»åçç©éµåæï¼\n```\n11 99 23 99 20 99 89\n37 87 27 99 63 75 11\n44 94 50 67 40 50 24\n73 38 63 91 62 26 68\n15 85 27 26 88 18 43\n23 83 98 28 30 25 99\n77 78 48 97 25 81 22\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "äºç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "åµå¥å¾ªç¯",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 102,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c519e4ea734c4000973b22c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "```\n#include <stdio.h>\n\n#define MAXN 100\n\nint RowSum( int A[][MAXN], int row , int n )\n{\n\tint i, sum = 0;\n\tfor (i=0; i<n; i++)\n\t\tsum += A[row][i];\n\treturn sum;\n}\n\nint main()\n{\n\tint i, j, n, k, x, shift;\n\tint A[MAXN][MAXN];\n\t\n\tscanf(\"%d %d %d\", &n, &k, &x);\n\tfor (i=0; i<n; i++)\n\t\tfor (j=0; j<n; j++)\n\t\t\tscanf(\"%d\", &A[i][j]);\n\tshift = 1; /*åå§åå¹³ç§»è·ç¦»ä¸º1*/\n\tfor(i=0; i<n; i++) {\n\t\tif (i%2) { /* ä¸æ iæ¯å¥æ°æ¶ï¼å¯¹åºå¶æ°å */\n\t\t\tfor (j=n-1; j>=shift; j--)\n\t\t\t\tA[j][i] = A[j-shift][i]; /*å°ç¬¬iååä¸å¹³ç§»shiftè·ç¦»*/\n\t\t\tfor (; j>=0; j--) A[j][i] = x; /*é¡¶ä¸å©ä½åç´ æ¿æ¢ä¸ºx*/\n\t\t\tshift = shift%k +1; /* æ´æ°ä¸ºä¸ä¸æ¬¡å¹³ç§»çè·ç¦»*/\n\t\t}\n\t}\n\tprintf(\"%d\", RowSum(A, 0, n));\n\tfor (i=1; i<n; i++)\n\t\tprintf(\" %d\", RowSum(A, i, n));\n\tprintf(\"\\n\");\n\t\n\treturn 0;\n}\n\n```",
  "description": "ç»å®ä¸ä¸ª $$n\\times n$$ çæ´æ°ç©éµãå¯¹ä»»ä¸ç»å®çæ­£æ´æ° $$k<n$$ï¼æä»¬å°ç©éµçå¶æ°åçåç´ æ´ä½åä¸ä¾æ¬¡å¹³ç§» 1ãâ¦â¦ã$$k$$ã1ãâ¦â¦ã$$k$$ãâ¦â¦ ä¸ªä½ç½®ï¼å¹³ç§»ç©ºåºçä½ç½®ç¨æ´æ° $$x$$ è¡¥ãä½ éè¦è®¡ç®åºç»æç©éµçæ¯ä¸è¡åç´ çåã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥ç¬¬ä¸è¡ç»åº 3 ä¸ªæ­£æ´æ°ï¼$$n$$ï¼$$<100$$ï¼ã$$k$$ï¼$$<n$$ï¼ã$$x$$ï¼$$<100$$ï¼ï¼åå«å¦é¢é¢æè¿°ã\n\næ¥ä¸æ¥ $$n$$ è¡ï¼æ¯è¡ç»åº $$n$$ ä¸ªä¸è¶è¿ 100 çæ­£æ´æ°ï¼ä¸ºç©éµåç´ çå¼ãæ°å­é´ä»¥ç©ºæ ¼åéã\n\n### è¾åºæ ¼å¼ï¼\n\nå¨ä¸è¡ä¸­è¾åºå¹³ç§»åç¬¬ 1 å° $$n$$ è¡åç´ çåãæ°å­é´ä»¥ 1 ä¸ªç©ºæ ¼åéï¼è¡é¦å°¾ä¸å¾æå¤ä½ç©ºæ ¼ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n7 2 99\n11 87 23 67 20 75 89\n37 94 27 91 63 50 11\n44 38 50 26 40 26 24\n73 85 63 28 62 18 68\n15 83 27 97 88 25 43\n23 78 98 20 30 81 99\n77 36 48 59 25 34 22\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\n440 399 369 421 302 386 428\n```\n\n**æ ·ä¾è§£è¯»**\n\néè¦å¹³ç§»çæ¯ç¬¬ 2ã4ã6 åãç»å® $$k=2$$ï¼åºè¯¥å°è¿ä¸åé¡ºæ¬¡æ´ä½åä¸å¹³ç§» 1ã2ã1 ä½ï¼å¦æææ´å¤åï¼å°±åºè¯¥æç§ 1ã2ã1ã2 â¦â¦ è¿ä¸ªè§å¾é¡ºæ¬¡åä¸å¹³ç§»ï¼ï¼é¡¶ç«¯çç©ºä½ç¨ 99 æ¥å¡«åãå¹³ç§»åçç©éµåæï¼\n```\n11 99 23 99 20 99 89\n37 87 27 99 63 75 11\n44 94 50 67 40 50 24\n73 38 63 91 62 26 68\n15 85 27 26 88 18 43\n23 83 98 28 30 25 99\n77 78 48 97 25 81 22\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd26"
  },
  "id": "1584433205096628255",
  "label": "",
  "score": 20,
  "problemId": "1109491695790706688",
  "title": "æ²ç¬¨é",
  "content": "å¾®åä¸æä¸ªèªç§°âå¤§ç¬¨éVâçå®¶ä¼ï¼æ¯å¤©æ²éå¬ä¿ç åä»¬ç±æèº«ä½æ©ç¹ç¡è§ãä¸ºäºå¢å æ²éçè¶£å³æ§ï¼è¿ä¼ç³æ¹å å¥å¤è¯è¯ãå¶ç³æ¹çæ¹æ³ä¸ºï¼å»ç½ä¸æå¯»åâongâéµçå¤è¯è¯ï¼æå¥å°¾çä¸ä¸ªå­æ¢æâæ²ç¬¨éâãä¾å¦åä»£è¯äººæè´ºæåå¥æ°ï¼âå¯»ç« æå¥èéè«ï¼ææå½å¸æçå¼âï¼å¶ä¸­âè«âï¼chongï¼åâå¼âï¼gongï¼é½åäºâongâéµãäºæ¯è¿å¥è¯å°±è¢«ç³æ¹ä¸ºâå¯»ç« æå¥èéè«ï¼ææå½å¸æ²ç¬¨éâã\n\nç°å¨ç»ä½ ä¸å¤§å å¤è¯è¯å¥ï¼è¦æ±ä½ åä¸ªç¨åºèªå¨å°åâongâéµçå¥å­ç³æ¹æâæ²ç¬¨éâã\n\n### è¾å¥æ ¼å¼ï¼\n\nè¾å¥é¦åå¨ç¬¬ä¸è¡ç»åºä¸ä¸ªä¸è¶è¿ 20 çæ­£æ´æ° Nãéå N è¡ï¼æ¯è¡ç¨æ±è¯­æ¼é³ç»åºä¸å¥å¤è¯è¯ï¼åä¸ä¸ä¸¤åå¥ï¼ç¨éå· `,` åéï¼å¥å· `.` ç»å°¾ãç¸é»ä¸¤å­çæ¼é³ä¹é´ç¨ä¸ä¸ªç©ºæ ¼åéãé¢ç®ä¿è¯æ¯ä¸ªå­çæ¼é³ä¸è¶è¿ 6 ä¸ªå­ç¬¦ï¼æ¯è¡å­ç¬¦çæ»é¿åº¦ä¸è¶è¿ 100ï¼å¹¶ä¸ä¸åå¥è¯è³å°æ 3 ä¸ªå­ã\n\n### è¾åºæ ¼å¼ï¼\n\nå¯¹æ¯ä¸è¡è¯å¥ï¼å¤æ­å¶æ¯å¦åâongâéµãå³ä¸ä¸ä¸¤å¥æ«å°¾çå­é½æ¯âongâç»å°¾ãå¦ææ¯åæ­¤éµçï¼å°±æé¢é¢æ¹æ³ç³æ¹ä¹åè¾åºï¼è¾åºæ ¼å¼åè¾å¥ï¼å¦åè¾åº `Skipped`ï¼å³è·³è¿æ­¤å¥ã\n\n### è¾å¥æ ·ä¾ï¼\n```in\n5\nxun zhang zhai ju lao diao chong, xiao yue dang lian gua yu gong.\ntian sheng wo cai bi you yong, qian jin san jin huan fu lai.\nxue zhui rou zhi leng wei rong, an xiao chen jing shu wei long.\nzuo ye xing chen zuo ye feng, hua lou xi pan gui tang dong.\nren xian gui hua luo, ye jing chun shan kong.\n```\n\n### è¾åºæ ·ä¾ï¼\n```out\nxun zhang zhai ju lao diao chong, xiao yue dang lian qiao ben zhong.\nSkipped\nxue zhui rou zhi leng wei rong, an xiao chen jing qiao ben zhong.\nSkipped\nSkipped\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "æµæ±å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "å­ç¬¦ä¸²",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "äºç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "å½æ°ä¸ç¨åºç»æ",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "å½æ°å®ä¹ä¸è°ç¨",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 103,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c965e4518b10500075a14ff",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "微博上有个自称“大笨钟V”的家伙，每天敲钟催促码农们爱惜身体早点睡觉。为了增加敲钟的趣味性，还会糟改几句古诗词。其糟改的方法为：去网上搜寻压“ong”韵的古诗词，把句尾的三个字换成“敲笨钟”。例如唐代诗人李贺有名句曰：“寻章摘句老雕虫，晓月当帘挂玉弓”，其中“虫”（chong）和“弓”（gong）都压了“ong”韵。于是这句诗就被糟改为“寻章摘句老雕虫，晓月当帘敲笨钟”。\n\n现在给你一大堆古诗词句，要求你写个程序自动将压“ong”韵的句子糟改成“敲笨钟”。\n\n### 输入格式：\n\n输入首先在第一行给出一个不超过 20 的正整数 N。随后 N 行，每行用汉语拼音给出一句古诗词，分上下两半句，用逗号 `,` 分隔，句号 `.` 结尾。相邻两字的拼音之间用一个空格分隔。题目保证每个字的拼音不超过 6 个字符，每行字符的总长度不超过 100，并且下半句诗至少有 3 个字。\n\n### 输出格式：\n\n对每一行诗句，判断其是否压“ong”韵。即上下两句末尾的字都是“ong”结尾。如果是压此韵的，就按题面方法糟改之后输出，输出格式同输入；否则输出 `Skipped`，即跳过此句。\n\n### 输入样例：\n```in\n5\nxun zhang zhai ju lao diao chong, xiao yue dang lian gua yu gong.\ntian sheng wo cai bi you yong, qian jin san jin huan fu lai.\nxue zhui rou zhi leng wei rong, an xiao chen jing shu wei long.\nzuo ye xing chen zuo ye feng, hua lou xi pan gui tang dong.\nren xian gui hua luo, ye jing chun shan kong.\n```\n\n### 输出样例：\n```out\nxun zhang zhai ju lao diao chong, xiao yue dang lian qiao ben zhong.\nSkipped\nxue zhui rou zhi leng wei rong, an xiao chen jing qiao ben zhong.\nSkipped\nSkipped\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd27"
  },
  "id": "1584433205096628256",
  "label": "",
  "score": 20,
  "problemId": "1109500097069699072",
  "title": "估值一亿的AI核心代码",
  "content": "\n![AI.jpg](~/3e7829fa-ed75-4890-acca-54a00fbac9d3.jpg)\n\n\n以上图片来自新浪微博。\n\n本题要求你实现一个稍微更值钱一点的 AI 英文问答程序，规则是：\n\n- 无论用户说什么，首先把对方说的话在一行中原样打印出来；\n- 消除原文中多余空格：把相邻单词间的多个空格换成 1 个空格，把行首尾的空格全部删掉，把标点符号前面的空格删掉；\n- 把原文中所有大写英文字母变成小写，除了 `I`；\n- 把原文中所有独立的 `can you`、`could you` 对应地换成 `I can`、`I could`—— 这里“独立”是指被空格或标点符号分隔开的单词；\n- 把原文中所有独立的 `I` 和 `me` 换成 `you`；\n- 把原文中所有的问号 `?` 换成惊叹号 `!`；\n- 在一行中输出替换后的句子作为 AI 的回答。\n\n### 输入格式：\n\n输入首先在第一行给出不超过 10 的正整数 N，随后 N 行，每行给出一句不超过 1000 个字符的、以回车结尾的用户的对话，对话为非空字符串，仅包括字母、数字、空格、可见的半角标点符号。\n\n### 输出格式：\n\n按题面要求输出，每个 AI 的回答前要加上 `AI:` 和一个空格。\n\n### 输入样例：\n```in\n6\nHello ?\n Good to chat   with you\ncan   you speak Chinese?\nReally?\nCould you show me 5\nWhat Is this prime? I,don 't know\n```\n\n### 输出样例：\n```out\nHello ?\nAI: hello!\n Good to chat   with you\nAI: good to chat with you\ncan   you speak Chinese?\nAI: I can speak chinese!\nReally?\nAI: really!\nCould you show me 5\nAI: I could show you 5\nWhat Is this prime? I,don 't know\nAI: what Is this prime! you,don't know\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 67,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5c9a3882ab512d0007a18489",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![AI.jpg](~/3e7829fa-ed75-4890-acca-54a00fbac9d3.jpg)\n\n\n以上图片来自新浪微博。\n\n本题要求你实现一个稍微更值钱一点的 AI 英文问答程序，规则是：\n\n- 无论用户说什么，首先把对方说的话在一行中原样打印出来；\n- 消除原文中多余空格：把相邻单词间的多个空格换成 1 个空格，把行首尾的空格全部删掉，把标点符号前面的空格删掉；\n- 把原文中所有大写英文字母变成小写，除了 `I`；\n- 把原文中所有独立的 `can you`、`could you` 对应地换成 `I can`、`I could`—— 这里“独立”是指被空格或标点符号分隔开的单词；\n- 把原文中所有独立的 `I` 和 `me` 换成 `you`；\n- 把原文中所有的问号 `?` 换成惊叹号 `!`；\n- 在一行中输出替换后的句子作为 AI 的回答。\n\n### 输入格式：\n\n输入首先在第一行给出不超过 10 的正整数 N，随后 N 行，每行给出一句不超过 1000 个字符的、以回车结尾的用户的对话，对话为非空字符串，仅包括字母、数字、空格、可见的半角标点符号。\n\n### 输出格式：\n\n按题面要求输出，每个 AI 的回答前要加上 `AI:` 和一个空格。\n\n### 输入样例：\n```in\n6\nHello ?\n Good to chat   with you\ncan   you speak Chinese?\nReally?\nCould you show me 5\nWhat Is this prime? I,don 't know\n```\n\n### 输出样例：\n```out\nHello ?\nAI: hello!\n Good to chat   with you\nAI: good to chat with you\ncan   you speak Chinese?\nAI: I can speak chinese!\nReally?\nAI: really!\nCould you show me 5\nAI: I could show you 5\nWhat Is this prime? I,don 't know\nAI: what Is this prime! you,don't know\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd28"
  },
  "id": "1584433205096628257",
  "label": "",
  "score": 20,
  "problemId": "1145647331106578432",
  "title": "刮刮彩票",
  "content": "“刮刮彩票”是一款网络游戏里面的一个小游戏。如图所示：\n\n![-362960_55cb6a89bf693.png](~/e6f4f992-0e14-4a9f-bd2e-353c109dd196.png)\n\n每次游戏玩家会拿到一张彩票，上面会有 9 个数字，分别为数字 1 到数字 9，数字各不重复，并以 $$3\\times3$$ 的“九宫格”形式排布在彩票上。\n\n在游戏开始时能看见一个位置上的数字，其他位置上的数字均不可见。你可以选择三个位置的数字刮开，这样玩家就能看见四个位置上的数字了。最后玩家再从 3 横、3 竖、2 斜共 8 个方向中挑选一个方向，方向上三个数字的和可根据下列表格进行兑奖，获得对应数额的金币。\n\n\n| 数字合计 | 获得金币 | 数字合计 | 获得金币 |\n| -------- | -------- | -------- | -------- |\n| 6     | 10,000     | 16     | 72     |\n| 7     | 36     | 17     | 180     |\n| 8     | 720     | 18     | 119     |\n| 9     | 360     | 19     | 36     |\n| 10     | 80     | 20     | 306     |\n| 11    | 252     | 21     | 1,080     |\n| 12    | 108     | 22    | 144     |\n| 13    | 72     | 23    | 1,800     |\n| 14    | 54     | 24    | 3,600     |\n| 15    | 180     |      ||      |\n\n\n\n现在请你写出一个模拟程序，模拟玩家的游戏过程。\n\n### 输入格式:\n\n输入第一部分给出一张合法的彩票，即用 3 行 3 列给出 0 至 9 的数字。**0 表示的是这个位置上的数字初始时就能看见了**，而不是彩票上的数字为 0。\n\n第二部给出玩家刮开的三个位置，分为三行，每行按格式 `x y` 给出玩家刮开的位置的行号和列号（题目中定义左上角的位置为第 1 行、第 1 列。）。数据保证玩家不会重复刮开已刮开的数字。\n\n最后一部分给出玩家选择的方向，即一个整数： 1 至 3 表示选择横向的第一行、第二行、第三行，4 至 6 表示纵向的第一列、第二列、第三列，7、8分别表示左上到右下的主对角线和右上到左下的副对角线。\n\n### 输出格式:\n\n对于每一个刮开的操作，在一行中输出玩家能看到的数字。最后对于选择的方向，在一行中输出玩家获得的金币数量。\n\n### 输入样例:\n\n```in\n1 2 3\n4 5 6\n7 8 0\n1 1\n2 2\n2 3\n7\n```\n\n### 输出样例:\n\n```out\n1\n5\n6\n180\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "杭州百腾教育科技有限公司"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 73,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5e42b26d6d31f800053158cd",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "“刮刮彩票”是一款网络游戏里面的一个小游戏。如图所示：\n\n![-362960_55cb6a89bf693.png](~/e6f4f992-0e14-4a9f-bd2e-353c109dd196.png)\n\n每次游戏玩家会拿到一张彩票，上面会有 9 个数字，分别为数字 1 到数字 9，数字各不重复，并以 $$3\\times3$$ 的“九宫格”形式排布在彩票上。\n\n在游戏开始时能看见一个位置上的数字，其他位置上的数字均不可见。你可以选择三个位置的数字刮开，这样玩家就能看见四个位置上的数字了。最后玩家再从 3 横、3 竖、2 斜共 8 个方向中挑选一个方向，方向上三个数字的和可根据下列表格进行兑奖，获得对应数额的金币。\n\n\n| 数字合计 | 获得金币 | 数字合计 | 获得金币 |\n| -------- | -------- | -------- | -------- |\n| 6     | 10,000     | 16     | 72     |\n| 7     | 36     | 17     | 180     |\n| 8     | 720     | 18     | 119     |\n| 9     | 360     | 19     | 36     |\n| 10     | 80     | 20     | 306     |\n| 11    | 252     | 21     | 1,080     |\n| 12    | 108     | 22    | 144     |\n| 13    | 72     | 23    | 1,800     |\n| 14    | 54     | 24    | 3,600     |\n| 15    | 180     |      ||      |\n\n\n\n现在请你写出一个模拟程序，模拟玩家的游戏过程。\n\n### 输入格式:\n\n输入第一部分给出一张合法的彩票，即用 3 行 3 列给出 0 至 9 的数字。**0 表示的是这个位置上的数字初始时就能看见了**，而不是彩票上的数字为 0。\n\n第二部给出玩家刮开的三个位置，分为三行，每行按格式 `x y` 给出玩家刮开的位置的行号和列号（题目中定义左上角的位置为第 1 行、第 1 列。）。数据保证玩家不会重复刮开已刮开的数字。\n\n最后一部分给出玩家选择的方向，即一个整数： 1 至 3 表示选择横向的第一行、第二行、第三行，4 至 6 表示纵向的第一列、第二列、第三列，7、8分别表示左上到右下的主对角线和右上到左下的副对角线。\n\n### 输出格式:\n\n对于每一个刮开的操作，在一行中输出玩家能看到的数字。最后对于选择的方向，在一行中输出玩家获得的金币数量。\n\n### 输入样例:\n\n```in\n1 2 3\n4 5 6\n7 8 0\n1 1\n2 2\n2 3\n7\n```\n\n### 输出样例:\n\n```out\n1\n5\n6\n180\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd29"
  },
  "id": "1584433205096628258",
  "label": "",
  "score": 15,
  "problemId": "1207929438413987840",
  "title": "字母串",
  "content": "英语老师要求学生按照如下规则写一串字母：\n\n- 如果写了某个大写字母，下一个就必须写同个字母的小写，或者写字母表中下一个字母的大写；\n- 如果写了某个小写字母，下一个就必须写同个字母的大写，或者写字母表中前一个字母的小写；\n- 当然也可以什么都不写，就结束这个字母串。\n\n例如 `aAaABCDdcbBC` 就是一个合法的字母串；而 `dEFfeFGhI` 就是非法的。注意 `a` 没有前一个字母， `Z` 也没有下一个字母。\n\n现在面对全班学生交上来的作业，老师请你写个程序自动批改。\n\n### 输入格式：\n\n输入在第一行给出一个不超过 100 的正整数 N。随后 N 行，每行给出一位学生的作业，即仅由英文字母组成的非空字母串，长度不超过 $$2\\times 10^6$$。\n\n### 输出格式：\n\n对每位学生的作业，如果正确就在一行中输出 `Y`，否则输出 `N`。\n\n### 输入样例：\n```in\n2\naAaABCDdcbBC\ndEFfeFGhI\n\n```\n\n### 输出样例：\n```out\nY\nN\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 81,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5dfc7b8d568cd000064cecbf",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "英语老师要求学生按照如下规则写一串字母：\n\n- 如果写了某个大写字母，下一个就必须写同个字母的小写，或者写字母表中下一个字母的大写；\n- 如果写了某个小写字母，下一个就必须写同个字母的大写，或者写字母表中前一个字母的小写；\n- 当然也可以什么都不写，就结束这个字母串。\n\n例如 `aAaABCDdcbBC` 就是一个合法的字母串；而 `dEFfeFGhI` 就是非法的。注意 `a` 没有前一个字母， `Z` 也没有下一个字母。\n\n现在面对全班学生交上来的作业，老师请你写个程序自动批改。\n\n### 输入格式：\n\n输入在第一行给出一个不超过 100 的正整数 N。随后 N 行，每行给出一位学生的作业，即仅由英文字母组成的非空字母串，长度不超过 $$2\\times 10^6$$。\n\n### 输出格式：\n\n对每位学生的作业，如果正确就在一行中输出 `Y`，否则输出 `N`。\n\n### 输入样例：\n```in\n2\naAaABCDdcbBC\ndEFfeFGhI\n\n```\n\n### 输出样例：\n```out\nY\nN\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd2a"
  },
  "id": "1584433205096628259",
  "label": "",
  "score": 15,
  "problemId": "1378931474155020288",
  "title": "大笨钟的心情",
  "content": "\n![心情.jpg](~/8c3b8713-1703-4e56-addb-492f738c3a7c.jpg)\n\n\n有网友问：未来还会有更多大笨钟题吗？笨钟回复说：看心情……\n\n本题就请你替大笨钟写一个程序，根据心情自动输出回答。\n\n### 输入格式：\n\n输入在一行中给出 24 个 [0, 100] 区间内的整数，依次代表大笨钟在一天 24 小时中，每个小时的心情指数。\n\n随后若干行，每行给出一个 [0, 23] 之间的整数，代表网友询问笨钟这个问题的时间点。当出现非法的时间点时，表示输入结束，这个非法输入不要处理。题目保证至少有 1 次询问。\n\n### 输出格式：\n\n对每一次提问，如果当时笨钟的心情指数大于 50，就在一行中输出 `心情指数 Yes`，否则输出 `心情指数 No`。\n\n### 输入样例：\n```in\n80 75 60 50 20 20 20 20 55 62 66 51 42 33 47 58 67 52 41 20 35 49 50 63\n17\n7\n3\n15\n-1\n```\n\n### 输出样例：\n```out\n52 Yes\n20 No\n50 No\n58 Yes\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 57,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "607a9b65c47b020008299279",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![心情.jpg](~/8c3b8713-1703-4e56-addb-492f738c3a7c.jpg)\n\n\n有网友问：未来还会有更多大笨钟题吗？笨钟回复说：看心情……\n\n本题就请你替大笨钟写一个程序，根据心情自动输出回答。\n\n### 输入格式：\n\n输入在一行中给出 24 个 [0, 100] 区间内的整数，依次代表大笨钟在一天 24 小时中，每个小时的心情指数。\n\n随后若干行，每行给出一个 [0, 23] 之间的整数，代表网友询问笨钟这个问题的时间点。当出现非法的时间点时，表示输入结束，这个非法输入不要处理。题目保证至少有 1 次询问。\n\n### 输出格式：\n\n对每一次提问，如果当时笨钟的心情指数大于 50，就在一行中输出 `心情指数 Yes`，否则输出 `心情指数 No`。\n\n### 输入样例：\n```in\n80 75 60 50 20 20 20 20 55 62 66 51 42 33 47 58 67 52 41 20 35 49 50 63\n17\n7\n3\n15\n-1\n```\n\n### 输出样例：\n```out\n52 Yes\n20 No\n50 No\n58 Yes\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd2b"
  },
  "id": "1584433205096628260",
  "label": "",
  "score": 20,
  "problemId": "1378934411845541888",
  "title": "乘法口诀数列",
  "content": "本题要求你从任意给定的两个 1 位数字 $$a_1$$ 和 $$a_2$$ 开始，用乘法口诀生成一个数列 {$$a_n$$}，规则为从 $$a_1$$ 开始顺次进行，每次将当前数字与后面一个数字相乘，将结果贴在数列末尾。如果结果不是 1 位数，则其每一位都应成为数列的一项。\n\n### 输入格式：\n\n输入在一行中给出 3 个整数，依次为 $$a_1$$、$$a_2$$ 和 $$n$$，满足 $$0\\le a_1,a_2\\le 9$$，$$0<n\\le 10^3$$。\n\n### 输出格式：\n\n在一行中输出数列的前 $$n$$ 项。数字间以 1 个空格分隔，行首尾不得有多余空格。\n\n### 输入样例：\n```in\n2 3 10\n```\n\n### 输出样例：\n```out\n2 3 6 1 8 6 8 4 8 4\n```\n\n### 样例解释：\n\n数列前 2 项为 2 和 3。从 2 开始，因为 $$2\\times 3=6$$，所以第 3 项是 6。因为 $$3\\times 6=18$$，所以第 4、5 项分别是 1、8。依次类推…… 最后因为第 6 项有 $$6\\times 8=48$$，对应第 10、11 项应该是 4、8。而因为只要求输出前 10 项，所以在输出 4 后结束。",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 83,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "606a986ebe4f740007ab6e07",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "本题要求你从任意给定的两个 1 位数字 $$a_1$$ 和 $$a_2$$ 开始，用乘法口诀生成一个数列 {$$a_n$$}，规则为从 $$a_1$$ 开始顺次进行，每次将当前数字与后面一个数字相乘，将结果贴在数列末尾。如果结果不是 1 位数，则其每一位都应成为数列的一项。\n\n### 输入格式：\n\n输入在一行中给出 3 个整数，依次为 $$a_1$$、$$a_2$$ 和 $$n$$，满足 $$0\\le a_1,a_2\\le 9$$，$$0<n\\le 10^3$$。\n\n### 输出格式：\n\n在一行中输出数列的前 $$n$$ 项。数字间以 1 个空格分隔，行首尾不得有多余空格。\n\n### 输入样例：\n```in\n2 3 10\n```\n\n### 输出样例：\n```out\n2 3 6 1 8 6 8 4 8 4\n```\n\n### 样例解释：\n\n数列前 2 项为 2 和 3。从 2 开始，因为 $$2\\times 3=6$$，所以第 3 项是 6。因为 $$3\\times 6=18$$，所以第 4、5 项分别是 1、8。依次类推…… 最后因为第 6 项有 $$6\\times 8=48$$，对应第 10、11 项应该是 4、8。而因为只要求输出前 10 项，所以在输出 4 后结束。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd2c"
  },
  "id": "1584433205096628261",
  "label": "",
  "score": 15,
  "problemId": "1510526422945505280",
  "title": "试试手气",
  "content": "![sz.png](~/2aff8d4e-b0b2-4fd2-a287-cf2cd6512676.png)\n\n我们知道一个骰子有 6 个面，分别刻了 1 到 6 个点。下面给你 6 个骰子的初始状态，即它们朝上一面的点数，让你一把抓起摇出另一套结果。假设你摇骰子的手段特别精妙，每次摇出的结果都满足以下两个条件：\n\n- 1、每个骰子摇出的点数都跟它之前任何一次出现的点数不同；\n- 2、在满足条件 1 的前提下，每次都能让每个骰子得到可能得到的最大点数。\n\n那么你应该可以预知自己第 $$n$$ 次（$$1\\le n\\le 5$$）摇出的结果。\n\n### 输入格式：\n\n输入第一行给出 6 个骰子的初始点数，即 [1,6] 之间的整数，数字间以空格分隔；第二行给出摇的次数 $$n$$（$$1\\le n\\le 5$$）。\n\n### 输出格式：\n\n在一行中顺序列出第 $$n$$ 次摇出的每个骰子的点数。数字间必须以 1 个空格分隔，行首位不得有多余空格。\n\n### 输入样例：\n```in\n3 6 5 4 1 4\n3\n\n```\n\n### 输出样例：\n```out\n4 3 3 3 4 3\n\n```\n\n### 样例解释：\n\n这 3 次摇出的结果依次为：\n\n```\n6 5 6 6 6 6\n5 4 4 5 5 5\n4 3 3 3 4 3\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 50,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "6249530924dddf56bca5372c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "![sz.png](~/2aff8d4e-b0b2-4fd2-a287-cf2cd6512676.png)\n\n我们知道一个骰子有 6 个面，分别刻了 1 到 6 个点。下面给你 6 个骰子的初始状态，即它们朝上一面的点数，让你一把抓起摇出另一套结果。假设你摇骰子的手段特别精妙，每次摇出的结果都满足以下两个条件：\n\n- 1、每个骰子摇出的点数都跟它之前任何一次出现的点数不同；\n- 2、在满足条件 1 的前提下，每次都能让每个骰子得到可能得到的最大点数。\n\n那么你应该可以预知自己第 $$n$$ 次（$$1\\le n\\le 5$$）摇出的结果。\n\n### 输入格式：\n\n输入第一行给出 6 个骰子的初始点数，即 [1,6] 之间的整数，数字间以空格分隔；第二行给出摇的次数 $$n$$（$$1\\le n\\le 5$$）。\n\n### 输出格式：\n\n在一行中顺序列出第 $$n$$ 次摇出的每个骰子的点数。数字间必须以 1 个空格分隔，行首位不得有多余空格。\n\n### 输入样例：\n```in\n3 6 5 4 1 4\n3\n\n```\n\n### 输出样例：\n```out\n4 3 3 3 4 3\n\n```\n\n### 样例解释：\n\n这 3 次摇出的结果依次为：\n\n```\n6 5 6 6 6 6\n5 4 4 5 5 5\n4 3 3 3 4 3\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd2d"
  },
  "id": "1584433205096628262",
  "label": "",
  "score": 20,
  "problemId": "1510563573905952768",
  "title": "静静的推荐",
  "content": "天梯赛结束后，某企业的人力资源部希望组委会能推荐一批优秀的学生，这个整理推荐名单的任务就由静静姐负责。企业接受推荐的流程是这样的：\n\n- 只考虑得分不低于 175 分的学生；\n- 一共接受 $$K$$ 批次的推荐名单；\n- 同一批推荐名单上的学生的成绩原则上应严格递增；\n- 如果有的学生天梯赛成绩虽然与前一个人相同，但其参加过 PAT 考试，且成绩达到了该企业的面试分数线，则也可以接受。\n\n给定全体参赛学生的成绩和他们的 PAT 考试成绩，请你帮静静姐算一算，她最多能向企业推荐多少学生？\n\n### 输入格式：\n\n输入第一行给出 3 个正整数：$$N$$（$$\\le 10^5$$）为参赛学生人数，$$K$$（$$\\le 5\\times 10^3$$）为企业接受的推荐批次，$$S$$（$$\\le 100$$）为该企业的 PAT 面试分数线。\n\n随后 $$N$$ 行，每行给出两个分数，依次为一位学生的天梯赛分数（最高分 290）和 PAT 分数（最高分 100）。\n\n### 输出格式：\n\n在一行中输出静静姐最多能向企业推荐的学生人数。\n\n### 输入样例：\n```in\n10 2 90\n203 0\n169 91\n175 88\n175 0\n175 90\n189 0\n189 0\n189 95\n189 89\n256 100\n```\n\n### 输出样例：\n```out\n8\n```\n\n### 样例解释：\n\n第一批可以选择 175、189、203、256 这四个分数的学生各一名，此外 175 分 PAT 分数达到 90 分的学生和 189 分 PAT 分数达到 95 分的学生可以额外进入名单。第二批就只剩下 175、189 两个分数的学生各一名可以进入名单了。最终一共 8 人进入推荐名单。\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 94,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "624982225cb9fa656bee44a7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "天梯赛结束后，某企业的人力资源部希望组委会能推荐一批优秀的学生，这个整理推荐名单的任务就由静静姐负责。企业接受推荐的流程是这样的：\n\n- 只考虑得分不低于 175 分的学生；\n- 一共接受 $$K$$ 批次的推荐名单；\n- 同一批推荐名单上的学生的成绩原则上应严格递增；\n- 如果有的学生天梯赛成绩虽然与前一个人相同，但其参加过 PAT 考试，且成绩达到了该企业的面试分数线，则也可以接受。\n\n给定全体参赛学生的成绩和他们的 PAT 考试成绩，请你帮静静姐算一算，她最多能向企业推荐多少学生？\n\n### 输入格式：\n\n输入第一行给出 3 个正整数：$$N$$（$$\\le 10^5$$）为参赛学生人数，$$K$$（$$\\le 5\\times 10^3$$）为企业接受的推荐批次，$$S$$（$$\\le 100$$）为该企业的 PAT 面试分数线。\n\n随后 $$N$$ 行，每行给出两个分数，依次为一位学生的天梯赛分数（最高分 290）和 PAT 分数（最高分 100）。\n\n### 输出格式：\n\n在一行中输出静静姐最多能向企业推荐的学生人数。\n\n### 输入样例：\n```in\n10 2 90\n203 0\n169 91\n175 88\n175 0\n175 90\n189 0\n189 0\n189 95\n189 89\n256 100\n```\n\n### 输出样例：\n```out\n8\n```\n\n### 样例解释：\n\n第一批可以选择 175、189、203、256 这四个分数的学生各一名，此外 175 分 PAT 分数达到 90 分的学生和 189 分 PAT 分数达到 95 分的学生可以额外进入名单。第二批就只剩下 175、189 两个分数的学生各一名可以进入名单了。最终一共 8 人进入推荐名单。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d12efb4a7dada3b8bd2e"
  },
  "id": "1584433205096628263",
  "label": "",
  "score": 15,
  "problemId": "1516719740238934016",
  "title": "斯德哥尔摩火车上的题",
  "content": "\n![tt.png](~/cd584894-cd08-4ef6-b0df-6a46a3dadfc8.png)\n\n\n上图是新浪微博上的一则趣闻，是瑞典斯德哥尔摩火车上的一道题，看上去是段伪代码：\n\n```\ns = ''\na = '1112031584'\nfor (i = 1; i < length(a); i++) {\n  if (a[i] % 2 == a[i-1] % 2) {\n    s += max(a[i], a[i-1])\n  }\n}\ngoto_url('www.multisoft.se/' + s)\n```\n\n其中字符串的 `+` 操作是连接两个字符串的意思。所以这道题其实是让大家访问网站 `www.multisoft.se/112358`（**注意：比赛中千万不要访问这个网址！！！**）。\n\n当然，能通过上述算法得到 `112358` 的原始字符串 `a` 是不唯一的。本题就请你判断，两个给定的原始字符串，能否通过上述算法得到相同的输出？\n\n### 输入格式：\n\n输入为两行仅由数字组成的非空字符串，长度均不超过 $$10^4$$，以回车结束。\n\n### 输出格式：\n\n对两个字符串分别采用上述斯德哥尔摩火车上的算法进行处理。如果两个结果是一样的，则在一行中输出那个结果；否则分别输出各自对应的处理结果，每个占一行。题目保证输出结果不为空。\n\n### 输入样例 1：\n```in\n1112031584\n011102315849\n\n```\n\n### 输出样例 1：\n```out\n112358\n\n```\n\n### 输入样例 2：\n```in\n111203158412334\n12341112031584\n\n```\n\n### 输出样例 2：\n```out\n1123583\n112358\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 73,
  "problemSetId": "1584433204995964928",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "625fdb17d058347bfce94c82",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n![tt.png](~/cd584894-cd08-4ef6-b0df-6a46a3dadfc8.png)\n\n\n上图是新浪微博上的一则趣闻，是瑞典斯德哥尔摩火车上的一道题，看上去是段伪代码：\n\n```\ns = ''\na = '1112031584'\nfor (i = 1; i < length(a); i++) {\n  if (a[i] % 2 == a[i-1] % 2) {\n    s += max(a[i], a[i-1])\n  }\n}\ngoto_url('www.multisoft.se/' + s)\n```\n\n其中字符串的 `+` 操作是连接两个字符串的意思。所以这道题其实是让大家访问网站 `www.multisoft.se/112358`（**注意：比赛中千万不要访问这个网址！！！**）。\n\n当然，能通过上述算法得到 `112358` 的原始字符串 `a` 是不唯一的。本题就请你判断，两个给定的原始字符串，能否通过上述算法得到相同的输出？\n\n### 输入格式：\n\n输入为两行仅由数字组成的非空字符串，长度均不超过 $$10^4$$，以回车结束。\n\n### 输出格式：\n\n对两个字符串分别采用上述斯德哥尔摩火车上的算法进行处理。如果两个结果是一样的，则在一行中输出那个结果；否则分别输出各自对应的处理结果，每个占一行。题目保证输出结果不为空。\n\n### 输入样例 1：\n```in\n1112031584\n011102315849\n\n```\n\n### 输出样例 1：\n```out\n112358\n\n```\n\n### 输入样例 2：\n```in\n111203158412334\n12341112031584\n\n```\n\n### 输出样例 2：\n```out\n1123583\n112358\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd2f"
  },
  "id": "1590883382295392256",
  "label": "",
  "score": 1,
  "problemId": "1003656104566480896",
  "title": "执行以下程序段后，`x`的值为0，`y`的值为1。",
  "content": "执行以下程序段后，`x`的值为0，`y`的值为1。\n```\nint x, y;\nif (x = 0) y = 0;\nelse y = 1;\n```\n ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "执行以下程序段后，`x`的值为0，`y`的值为1。\n```\nint x, y;\nif (x = 0) y = 0;\nelse y = 1;\n```\n ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd30"
  },
  "id": "1590883382295392257",
  "label": "",
  "score": 1,
  "problemId": "1024837410332393472",
  "title": "执行以下程序段，sum的值是1.5。",
  "content": "执行以下程序段，sum的值是1.5。\n```\nint i, sum;\nsum = 0;\nfor (i = 1; i <= 2; i++){\n    sum = sum + 1.0/i;\n}\n```\n  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "执行以下程序段，sum的值是1.5。\n```\nint i, sum;\nsum = 0;\nfor (i = 1; i <= 2; i++){\n    sum = sum + 1.0/i;\n}\n```\n  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd31"
  },
  "id": "1590883382295392258",
  "label": "",
  "score": 1,
  "problemId": "1030718866018963456",
  "title": "以下C语言表达式的值为“真”。",
  "content": " 以下C语言表达式的值为“真”。\n ```\n'D' - 'A' == 'd' - 'a'\n```\n ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": " 以下C语言表达式的值为“真”。\n ```\n'D' - 'A' == 'd' - 'a'\n```\n ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd32"
  },
  "id": "1590883382295392259",
  "label": "",
  "score": 2,
  "problemId": "1346063700595122176",
  "title": "已知'A'的ASCII代码值为65，则'D'的ASCII代码值为68",
  "content": "已知'A'的ASCII代码值为65，则'D'的ASCII代码值为68\n~@[](2)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "已知'A'的ASCII代码值为65，则'D'的ASCII代码值为68",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd33"
  },
  "id": "1590883382295392260",
  "label": "",
  "score": 2,
  "problemId": "1346064837498634240",
  "title": "假定X和y为int型，则执行x=2; y=x+3/2; 后，y的值是3",
  "content": "假定X和y为int型，则执行x=2; y=x+3/2; 后，y的值是3\n~@[](2)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "假定X和y为int型，则执行x=2; y=x+3/2; 后，y的值是3",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd34"
  },
  "id": "1590883382295392261",
  "label": "",
  "score": 2,
  "problemId": "991668010194337792",
  "title": "当a=1,b=2,c=3时，下面打印语句的输出是 @ ",
  "content": "当a=1,b=2,c=3时，下面打印语句的输出是 @@[](2) \n```\nprintf(“%d#%d#”, (a, b), a>b?(c=4):(c=5) );\n```",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "2#5#"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "当a=1,b=2,c=3时，下面打印语句的输出是  \n```\nprintf(“%d#%d#”, (a, b), a>b?(c=4):(c=5) );\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd35"
  },
  "id": "1590883382295392262",
  "label": "",
  "score": 3,
  "problemId": "992224342769156096",
  "title": "下列程序的输出结果是 @ 。",
  "content": "下列程序的输出结果是 @@[](3) 。\n\n```\nvoid swap(int x, int y)\n{  \n    int  t;\n    t=x; x=y; y=t;\n    return;\n}\nvoid main(void)\n{  \n        int a=3, b=2;\n        swap(a, b);\n        printf(\"%d#%d#\", a, b);\n        return;\n}\n\n```\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "3#2#"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "下列程序的输出结果是  。\n\n```\nvoid swap(int x, int y)\n{  \n    int  t;\n    t=x; x=y; y=t;\n    return;\n}\nvoid main(void)\n{  \n        int a=3, b=2;\n        swap(a, b);\n        printf(\"%d#%d#\", a, b);\n        return;\n}\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd36"
  },
  "id": "1590883382295392263",
  "label": "",
  "score": 4,
  "problemId": "1187944839771090944",
  "title": "以下程序从键盘读入20个数据到数组中，统计其中正数的个数，并计算它们之和。请填空。",
  "content": "以下程序从键盘读入20个数据到数组中，统计其中正数的个数，并计算它们之和。请填空。\n```\nint main(void)\n{ int i,a[20], sum, count;\n  sum=count=0;\n  for(i=0; i<20; i++)  scanf(\"%d\", @@[](2) );\n  for (i=0; i<20; i++)\n     if(a[i]>0)\n     {  count++;\n        sum+=@@[](2); \n     }\n   printf(\"sum=%d,count=%d\\n\",sum,count);\t\n   return 0;\t\t\n}\n```\n\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "&a[i]"
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "a[i]"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "以下程序从键盘读入20个数据到数组中，统计其中正数的个数，并计算它们之和。请填空。\n```\nint main(void)\n{ int i,a[20], sum, count;\n  sum=count=0;\n  for(i=0; i<20; i++)  scanf(\"%d\",  );\n  for (i=0; i<20; i++)\n     if(a[i]>0)\n     {  count++;\n        sum+=; \n     }\n   printf(\"sum=%d,count=%d\\n\",sum,count);\t\n   return 0;\t\t\n}\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd37"
  },
  "id": "1590883382295392264",
  "label": "",
  "score": 4,
  "problemId": "1188065197807390720",
  "title": "写出下面程序的运行结果。",
  "content": "写出下面程序的运行结果。\n```\n#include <stdio.h>\nint main(void)\n{  float s[6]={1, 3, 5, 7, 9};\n   float x;\n   int i;\n   scanf(“%f”, &x);\n   for (i=4 ; i>=0; i--)\n      if(s[i]>x)  s[i+1]=s[i];\n      else break;\n   printf(\"%d \\n\",i+1);\n   return 0;\n}\n```\n(1) 如果输入4，则输出@@[](2) 。   \n(2) 如果输入5，则输出@@[](2) 。\n",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "2"
          ],
          "groupId": 0
        },
        {
          "availableAnswers": [
            "3"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "写出下面程序的运行结果。\n```\n#include <stdio.h>\nint main(void)\n{  float s[6]={1, 3, 5, 7, 9};\n   float x;\n   int i;\n   scanf(“%f”, &x);\n   for (i=4 ; i>=0; i--)\n      if(s[i]>x)  s[i+1]=s[i];\n      else break;\n   printf(\"%d \\n\",i+1);\n   return 0;\n}\n```\n(1) 如果输入4，则输出 。   \n(2) 如果输入5，则输出 。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd38"
  },
  "id": "1590883382295392265",
  "label": "",
  "score": 3,
  "problemId": "992229949559566336",
  "title": "若输入：how are you? <回车>，以下程序的输出结果是 @ 。",
  "content": "若输入：how are you? <回车>，以下程序的输出结果是 @@[](3) 。\n\n```\n#include <stdio.h>\nvoid main(void )\n{   \n    int word;\n    char ch;    \n    word=0;\n    while( (ch=getchar()) != '?' ){\n        if(ch==' ') word=0;\n        else if(word==0){\n             word=1;\n             if(ch<='z'&&ch>='a') ch=ch-'a'+'A';\n        }\n        putchar(ch);\n    }\n    return;\n}\n\n```",
  "type": "FILL_IN_THE_BLANK",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "72",
          "name": "while和do-while",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "fillInTheBlankJudgeConfig": {
      "answers": [
        {
          "availableAnswers": [
            "How Are You"
          ],
          "groupId": 0
        }
      ]
    }
  },
  "solution": "",
  "description": "若输入：how are you? <回车>，以下程序的输出结果是  。\n\n```\n#include <stdio.h>\nvoid main(void )\n{   \n    int word;\n    char ch;    \n    word=0;\n    while( (ch=getchar()) != '?' ){\n        if(ch==' ') word=0;\n        else if(word==0){\n             word=1;\n             if(ch<='z'&&ch>='a') ch=ch-'a'+'A';\n        }\n        putchar(ch);\n    }\n    return;\n}\n\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd39"
  },
  "id": "1590883382295392266",
  "label": "",
  "score": 10,
  "problemId": "5963",
  "title": "相遇问题",
  "content": "甲乙两人相向而行，已知两人之间的距离和各自的行进速度，请问需要多长时间两人才能相遇？\n\n#### 函数原型\n\n```c\ndouble Encounter(double distance, double speed1, double speed2);\n```\n\n说明：参数 `distance`、`speed1` 和 `speed2` 均为正数，分别为距离(km)和两人的速度(km/h)。函数值为时间(h)。\n\n#### 裁判程序\n\n```c\n#include <stdio.h>\n\ndouble Encounter(double distance, double speed1, double speed2);\n\nint main()\n{\n\tdouble d, s1, s2, t;\n\tscanf(\"%lg%lg%lg\", &d, &s1, &s2);\n\tt = Encounter(d, s1, s2);\n\tprintf(\"%.2f\\n\", t);\n\treturn 0;\n}\n\n/* 你提交的代码将被嵌在这里 */\n```\n\n#### 输入样例\n```in\n15 2.5 1.5\n\n```\n#### 输出样例\n```out\n3.75\n\n```\n",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 60,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {},
  "solution": "",
  "description": "甲乙两人相向而行，已知两人之间的距离和各自的行进速度，请问需要多长时间两人才能相遇？\n\n#### 函数原型\n\n```c\ndouble Encounter(double distance, double speed1, double speed2);\n```\n\n说明：参数 `distance`、`speed1` 和 `speed2` 均为正数，分别为距离(km)和两人的速度(km/h)。函数值为时间(h)。\n\n#### 裁判程序\n\n```c\n#include <stdio.h>\n\ndouble Encounter(double distance, double speed1, double speed2);\n\nint main()\n{\n\tdouble d, s1, s2, t;\n\tscanf(\"%lg%lg%lg\", &d, &s1, &s2);\n\tt = Encounter(d, s1, s2);\n\tprintf(\"%.2f\\n\", t);\n\treturn 0;\n}\n\n/* 你提交的代码将被嵌在这里 */\n```\n\n#### 输入样例\n```in\n15 2.5 1.5\n\n```\n#### 输出样例\n```out\n3.75\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd3a"
  },
  "id": "1590883382295392267",
  "label": "",
  "score": 5,
  "problemId": "1070942143770443776",
  "title": "判断倍数",
  "content": "请编写函数，判断一个整数是另一个整数的倍数。\n\n#### 函数原型\n\n```c\nint IsMultiple(int x, int y);\n```\n\n说明：参数 `x` 和 `y` 是两个任意整数。若 `x` 是 `y` 的倍数，则函数值为 1(真)，否则为 0(假)。\n\n#### 裁判程序\n\n```c\n#include <stdio.h>\n\nint IsMultiple(int x, int y);\n\nint main()\n{\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (IsMultiple(x, y))\n    {\n        puts(\"Yes\");\n    }\n    else\n    {\n        puts(\"No\");\n    }\n    return 0;\n}\n\n/* 你提交的代码将被嵌在这里 */\n```\n\n#### 输入样例1\n```in\n36 -18\n```\n#### 输出样例1\n```out\nYes\n```\n#### 输入样例2\n```in\n-27 12\n```\n#### 输出样例2\n```out\nNo\n```\n#### 输入样例3\n```in\n0 0\n```\n#### 输出样例3\n```out\nYes\n```\n",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 287,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {},
  "solution": "",
  "description": "请编写函数，判断一个整数是另一个整数的倍数。\n\n#### 函数原型\n\n```c\nint IsMultiple(int x, int y);\n```\n\n说明：参数 `x` 和 `y` 是两个任意整数。若 `x` 是 `y` 的倍数，则函数值为 1(真)，否则为 0(假)。\n\n#### 裁判程序\n\n```c\n#include <stdio.h>\n\nint IsMultiple(int x, int y);\n\nint main()\n{\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (IsMultiple(x, y))\n    {\n        puts(\"Yes\");\n    }\n    else\n    {\n        puts(\"No\");\n    }\n    return 0;\n}\n\n/* 你提交的代码将被嵌在这里 */\n```\n\n#### 输入样例1\n```in\n36 -18\n```\n#### 输出样例1\n```out\nYes\n```\n#### 输入样例2\n```in\n-27 12\n```\n#### 输出样例2\n```out\nNo\n```\n#### 输入样例3\n```in\n0 0\n```\n#### 输出样例3\n```out\nYes\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd3b"
  },
  "id": "1590883382295392268",
  "label": "",
  "score": 10,
  "problemId": "1587363595560706048",
  "title": "快速幂",
  "content": "要求实现一个递归函数，高效求$a^b(1≤a,b≤62, a^b<2^{63})$。\n\n### 函数接口定义：\n```c++\nlong long int pow(int a, int b);\n```\n其中`a` 、`b` 是用户传入的参数。\n\n### 裁判测试程序样例：\n```c++\n#include<iostream>\nusing namespace std;\n\nlong long int pow(int a, int b); //求a^b\n\n//输入整数a，b，求 a^b，处理到文件尾 \nint main() { \n    int a,b;\n    while(cin>>a>>b) {\n        cout<<pow(a,b)<<endl; \n    }    \n    return 0;\n}\n```\n### 输入样例：\n\n```in\n2 3\n2 10\n```\n\n### 输出样例：\n\n```out\n8\n1024\n```",
  "type": "CODE_COMPLETION",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "76",
          "name": "递归函数",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 98,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {},
  "solution": "",
  "description": "要求实现一个递归函数，高效求$a^b(1≤a,b≤62, a^b<2^{63})$。\n\n### 函数接口定义：\n```c++\nlong long int pow(int a, int b);\n```\n其中`a` 、`b` 是用户传入的参数。\n\n### 裁判测试程序样例：\n```c++\n#include<iostream>\nusing namespace std;\n\nlong long int pow(int a, int b); //求a^b\n\n//输入整数a，b，求 a^b，处理到文件尾 \nint main() { \n    int a,b;\n    while(cin>>a>>b) {\n        cout<<pow(a,b)<<endl; \n    }    \n    return 0;\n}\n```\n### 输入样例：\n\n```in\n2 3\n2 10\n```\n\n### 输出样例：\n\n```out\n8\n1024\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd3c"
  },
  "id": "1590883382295392269",
  "label": "",
  "score": 20,
  "problemId": "528",
  "title": "IP地址转换",
  "content": "一个IP地址是用四个字节（每个字节8个位）的二进制码组成。请将32位二进制码表示的IP地址转换为十进制格式表示的IP地址输出。\n\n### 输入格式：\n\n输入在一行中给出32位二进制字符串。\n\n### 输出格式：\n\n在一行中输出十进制格式的IP地址，其由4个十进制数组成（分别对应4个8位的二进制数），中间用“.”分隔开。\n\n### 输入样例：\n```in\n11001100100101000001010101110010\n```\n\n### 输出样例：\n```out\n204.148.21.114\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "浙江大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 95,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5993fa4793d1de004a0fcc93",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "NO_COMPILER",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "一个IP地址是用四个字节（每个字节8个位）的二进制码组成。请将32位二进制码表示的IP地址转换为十进制格式表示的IP地址输出。\n\n### 输入格式：\n\n输入在一行中给出32位二进制字符串。\n\n### 输出格式：\n\n在一行中输出十进制格式的IP地址，其由4个十进制数组成（分别对应4个8位的二进制数），中间用“.”分隔开。\n\n### 输入样例：\n```in\n11001100100101000001010101110010\n```\n\n### 输出样例：\n```out\n204.148.21.114\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd3d"
  },
  "id": "1590883382295392270",
  "label": "",
  "score": 10,
  "problemId": "1216973362726117376",
  "title": "胜者",
  "content": "Sg和Gs进行乒乓球比赛，进行若干局之后，想确定最后是谁胜（赢的局数多者胜）。\n\n### 输入格式:\n\n测试数据有多组，处理到文件尾。每组测试先输入一个整数n，接下来的n行中每行输入两个整数a，b（0≤a，b≤20），表示Sg与Gs的比分是a比b。 \n\n### 输出格式:\n\n对于每组测试数据，若还不能确定胜负则输出“CONTINUE”，否则在一行上输出胜者“Sg”或“Gs”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n3 11\n13 11\n11 9\n```\n\n### 输出样例:\n\n```out\nSg\n```\n\n### 来源：\n\n\\[1\\] 黄龙军, 等. 大学生程序设计竞赛入门—C/C++程序设计（微课视频版）, 北京:清华大学出版社, 2020.11. ISBN:9787302564744\\\n\\[2\\] 黄龙军.程序设计竞赛入门（Python版）,北京:清华大学出版社,2021.4. ISBN:9787302571230",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924248495018221568",
          "name": "循环结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924249775870582784",
          "name": "遍历循环for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924248445119619072",
          "name": "选择分支结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924249494362513408",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 465,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5e1eb798568cd000064d318a",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 3
    }
  },
  "solution": "",
  "description": "Sg和Gs进行乒乓球比赛，进行若干局之后，想确定最后是谁胜（赢的局数多者胜）。\n\n### 输入格式:\n\n测试数据有多组，处理到文件尾。每组测试先输入一个整数n，接下来的n行中每行输入两个整数a，b（0≤a，b≤20），表示Sg与Gs的比分是a比b。 \n\n### 输出格式:\n\n对于每组测试数据，若还不能确定胜负则输出“CONTINUE”，否则在一行上输出胜者“Sg”或“Gs”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n3 11\n13 11\n11 9\n```\n\n### 输出样例:\n\n```out\nSg\n```\n\n### 来源：\n\n\\[1\\] 黄龙军, 等. 大学生程序设计竞赛入门—C/C++程序设计（微课视频版）, 北京:清华大学出版社, 2020.11. ISBN:9787302564744\\\n\\[2\\] 黄龙军.程序设计竞赛入门（Python版）,北京:清华大学出版社,2021.4. ISBN:9787302571230",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448d351fb4a7dada3b8bd3e"
  },
  "id": "1590883382295392271",
  "label": "",
  "score": 15,
  "problemId": "1338497807797219328",
  "title": "今天你健康打卡了吗？",
  "content": "\n## 题目描述\n众所周知，疫情期间，同学们每天都应该进行健康打卡，以确保自己的情况能被如实的反馈给辅导员，当然，这在学园都市也不例外。\n\n“为什么还有这么多同学没有健康打卡？刚刚我们不是已经发送信息通知他们了吗？”风纪委员177支部内传来了黑子焦急的声音。\n\n“可...可能是他们还没来得及看手机。”一旁的另外一位风纪委员初春回应道。\n\n“不行，打卡时间已经快到了，我要去当面提醒他们。”\n\n正直的风纪委员黑子同学决定直接使用瞬间移动赶到宿舍区，但在出发之前，她需要让初春进行定位扫描，确定哪些宿舍有人未进行健康打卡。\n\n堆积如山的工作让初春有点忙不过来了，你能帮帮她吗？\n\n首先，地图为一个 $$n$$ 行 $$m$$ 列的矩形二维平面，输入的第一行会分别给出两个正整数 $$n$$ 和 $$m$$ ，随后会给出一个 $$n$$行 $$m$$ 列的矩阵，$$A_i,_j$$ 表示**第 $$i$$ 行第 $$j$$ 列**上，数据所输入的值。当 $$A_i,_j = 0$$ 时，表示坐标 $$(i,j)$$ 上不存在需要提醒健康打卡的宿舍，当 $$A_i,_j = 1$$ 时，表示坐标 $$(i,j)$$ 上存在一个需要提醒健康打卡的宿舍，题目保证每一个 $$A_i,_j$$ 的值均为 $$0$$或 $$1$$ 。\n\n随后一行给出一个正整数 $$q$$，表示黑子会对初春询问 $$q$$ 次，接下来 $$q$$ 行，每一行分别给出四个正整数 $$x1,y1,x2,y2$$, 表示询问，以 $$(x1,y1)$$ 为左上角，$$(x2,y2)$$ 为右下角的矩形范围内，有多少个需要提醒健康打卡的宿舍。\n(ps:以上故事纯属虚构，但同学们记得要健康打卡哦~）\n\n### 输入格式:\n\n输入的第一行为两个正整数   $$ n,m $$\n\n接下来 $$n$$行，每行 $$m$$ 个数字，\n对应 $$A_i,_j$$ 的值\n\n接下来的一行给出一个正整数 $$q$$ ,表示有 $$q$$ 次询问  \n\n接下来共有 $$q$$ 行，每行给出四个正整数\n$$x1,y1,x2,y2$$\n\n### 输出格式:\n\n对于每一次查询，仅输出一个正整数  $$ans$$\n\n$$ans$$ 表示以 $$(x1,y1)$$ 为左上角，$$(x2,y2)$$ 为右下角的矩形范围内，有多少个需要提醒健康打卡的宿舍。\n\n### 输入样例1:\n\n```in\n2 3\n0 1 0\n0 0 1\n2\n1 1 2 1\n1 2 2 3\n```\n\n### 输出样例1:\n\n\n```out\n0\n2\n```\n\n\n### 输入样例2:\n\n\n```in\n3 3\n1 1 0\n1 0 1\n1 1 1\n4\n1 1 2 1\n1 2 2 3\n1 1 1 1\n1 1 3 3\n```\n\n### 输出样例2:\n\n```out\n2\n2\n1\n7\n```\n\n\n### 数据范围\n$$0<=A_i,_j<=1$$\n\n$$1<=n,m<=1000$$\n\n$$1<=q<=1000$$\n\n$$1<=x1<=x2<=n$$\n\n$$1<=y1<=y2<=m$$\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "惠州学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "1",
          "name": "数据结构与算法",
          "isLeaf": false,
          "enName": "Data Structures and Algorithms"
        },
        {
          "id": "907153560049655808",
          "name": "概论",
          "isLeaf": false,
          "enName": "Overview"
        },
        {
          "id": "907153726118928384",
          "name": "其他",
          "isLeaf": true,
          "enName": "Others"
        }
      ]
    }
  ],
  "submitCount": 285,
  "problemSetId": "1590883382228283392",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5fd77df91f69d400069a9391",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "\n## 题目描述\n众所周知，疫情期间，同学们每天都应该进行健康打卡，以确保自己的情况能被如实的反馈给辅导员，当然，这在学园都市也不例外。\n\n“为什么还有这么多同学没有健康打卡？刚刚我们不是已经发送信息通知他们了吗？”风纪委员177支部内传来了黑子焦急的声音。\n\n“可...可能是他们还没来得及看手机。”一旁的另外一位风纪委员初春回应道。\n\n“不行，打卡时间已经快到了，我要去当面提醒他们。”\n\n正直的风纪委员黑子同学决定直接使用瞬间移动赶到宿舍区，但在出发之前，她需要让初春进行定位扫描，确定哪些宿舍有人未进行健康打卡。\n\n堆积如山的工作让初春有点忙不过来了，你能帮帮她吗？\n\n首先，地图为一个 $$n$$ 行 $$m$$ 列的矩形二维平面，输入的第一行会分别给出两个正整数 $$n$$ 和 $$m$$ ，随后会给出一个 $$n$$行 $$m$$ 列的矩阵，$$A_i,_j$$ 表º**ç¬¬ $$i$$ è¡ç¬¬ $$j$$ å**ä¸ï¼æ°æ®æè¾å¥çå¼ãå½ $$A_i,_j = 0$$ æ¶ï¼è¡¨ç¤ºåæ  $$(i,j)$$ ä¸ä¸å­å¨éè¦æéå¥åº·æå¡çå®¿èï¼å½ $$A_i,_j = 1$$ æ¶ï¼è¡¨ç¤ºåæ  $$(i,j)$$ ä¸å­å¨ä¸ä¸ªéè¦æéå¥åº·æå¡çå®¿èï¼é¢ç®ä¿è¯æ¯ä¸ä¸ª $$A_i,_j$$ çå¼åä¸º $$0$$æ $$1$$ ã\n\néåä¸è¡ç»åºä¸ä¸ªæ­£æ´æ° $$q$$ï¼è¡¨ç¤ºé»å­ä¼å¯¹åæ¥è¯¢é® $$q$$ æ¬¡ï¼æ¥ä¸æ¥ $$q$$ è¡ï¼æ¯ä¸è¡åå«ç»åºåä¸ªæ­£æ´æ° $$x1,y1,x2,y2$$, è¡¨ç¤ºè¯¢é®ï¼ä»¥ $$(x1,y1)$$ ä¸ºå·¦ä¸è§ï¼$$(x2,y2)$$ ä¸ºå³ä¸è§çç©å½¢èå´åï¼æå¤å°ä¸ªéè¦æéå¥åº·æå¡çå®¿èã\n(ps:ä»¥ä¸æäºçº¯å±èæï¼ä½åå­¦ä»¬è®°å¾è¦å¥åº·æå¡å¦~ï¼\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥çç¬¬ä¸è¡ä¸ºä¸¤ä¸ªæ­£æ´æ°   $$ n,m $$\n\næ¥ä¸æ¥ $$n$$è¡ï¼æ¯è¡ $$m$$ ä¸ªæ°å­ï¼\nå¯¹åº $$A_i,_j$$ çå¼\n\næ¥ä¸æ¥çä¸è¡ç»åºä¸ä¸ªæ­£æ´æ° $$q$$ ,è¡¨ç¤ºæ $$q$$ æ¬¡è¯¢é®  \n\næ¥ä¸æ¥å±æ $$q$$ è¡ï¼æ¯è¡ç»åºåä¸ªæ­£æ´æ°\n$$x1,y1,x2,y2$$\n\n### è¾åºæ ¼å¼:\n\nå¯¹äºæ¯ä¸æ¬¡æ¥è¯¢ï¼ä»è¾åºä¸ä¸ªæ­£æ´æ°  $$ans$$\n\n$$ans$$ è¡¨ç¤ºä»¥ $$(x1,y1)$$ ä¸ºå·¦ä¸è§ï¼$$(x2,y2)$$ ä¸ºå³ä¸è§çç©å½¢èå´åï¼æå¤å°ä¸ªéè¦æéå¥åº·æå¡çå®¿èã\n\n### è¾å¥æ ·ä¾1:\n\n```in\n2 3\n0 1 0\n0 0 1\n2\n1 1 2 1\n1 2 2 3\n```\n\n### è¾åºæ ·ä¾1:\n\n\n```out\n0\n2\n```\n\n\n### è¾å¥æ ·ä¾2:\n\n\n```in\n3 3\n1 1 0\n1 0 1\n1 1 1\n4\n1 1 2 1\n1 2 2 3\n1 1 1 1\n1 1 3 3\n```\n\n### è¾åºæ ·ä¾2:\n\n```out\n2\n2\n1\n7\n```\n\n\n### æ°æ®èå´\n$$0<=A_i,_j<=1$$\n\n$$1<=n,m<=1000$$\n\n$$1<=q<=1000$$\n\n$$1<=x1<=x2<=n$$\n\n$$1<=y1<=y2<=m$$\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd3f"
  },
  "id": "1593399728040169472",
  "label": "A",
  "score": 300,
  "problemId": "985063502890082304",
  "title": "输出月份名(*)",
  "content": "请编写程序，输入月份数，输出对应的英文月份名。\n\n<table>\n<tr>\n<td align=\"center\"><b>月份数</b></td>\n<td align=\"center\"><b>月份名</b></td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">January</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">February</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">March</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">April</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">May</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">June</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">July</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">August</td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">September</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">October</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">November</td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">December</td>\n</tr>\n</table>\n\n#### 输入格式\n> m\n\n#### 输出格式\n> 若 m 在 1 ~ 12 范围内，则输出月份名\n> 若 m 在 1 ~ 12 范围外，则输出None\n\n#### 输入样例1\n```in\n3\n\n```\n#### 输出样例1\n```out\nMarch\n\n```\n\n#### 输入样例2\n```in\n15\n\n```\n#### 输出样例2\n```out\nNone\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "69",
          "name": "switch",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 101,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "63737a0a3dc6570b5304e465",
      "answer": "#include <stdio.h>\n\nvoid ShowNameMonthEng(int month);\n\nint main()\n{\n\tint m;\n\tscanf(\"%d\", &m);\n\tShowNameMonthEng(m);\n\tputchar('\\n');\n\treturn 0;\n}\n\nvoid ShowNameMonthEng(int month)\n{\n\tswitch (month)\n\t{\n\tcase 1:\n\t\tprintf(\"January\");\n\t\tbreak;\n\tcase 2:\n\t\tprintf(\"February\");\n\t\tbreak;\n\tcase 3:\n\t\tprintf(\"March\");\n\t\tbreak;\n\tcase 4:\n\t\tprintf(\"April\");\n\t\tbreak;\n\tcase 5:\n\t\tprintf(\"May\");\n\t\tbreak;\n\tcase 6:\n\t\tprintf(\"June\");\n\t\tbreak;\n\tcase 7:\n\t\tprintf(\"July\");\n\t\tbreak;\n\tcase 8:\n\t\tprintf(\"August\");\n\t\tbreak;\n\tcase 9:\n\t\tprintf(\"September\");\n\t\tbreak;\n\tcase 10:\n\t\tprintf(\"October\");\n\t\tbreak;\n\tcase 11:\n\t\tprintf(\"November\");\n\t\tbreak;\n\tcase 12:\n\t\tprintf(\"December\");\n\t\tbreak;\n\tdefault:\n\t\tprintf(\"None\");\n\t}\n}\n",
      "answerCompiler": "GCC",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 6
    }
  },
  "solution": "",
  "description": "请编写程序，输入月份数，输出对应的英文月份名。\n\n<table>\n<tr>\n<td align=\"center\"><b>月份数</b></td>\n<td align=\"center\"><b>月份名</b></td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">January</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">February</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">March</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">April</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">May</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">June</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">July</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">August</td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">September</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">October</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">November</td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">December</td>\n</tr>\n</table>\n\n#### 输入格式\n> m\n\n#### 输出格式\n> 若 m 在 1 ~ 12 范围内，则输出月份名\n> 若 m 在 1 ~ 12 范围外，则输出None\n\n#### 输入样例1\n```in\n3\n\n```\n#### 输出样例1\n```out\nMarch\n\n```\n\n#### 输入样例2\n```in\n15\n\n```\n#### 输出样例2\n```out\nNone\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd40"
  },
  "id": "1593399728040169473",
  "label": "B",
  "score": 300,
  "problemId": "1585535365241401344",
  "title": "大写字母转换为小写",
  "content": "用户输入一个字符，如果为大写字母，则输出小写字母；如果为其他字符，则原样输出。\n\n\n\n### 输入格式:\n\n输入一个字符。\n\n### 输出格式:\n\n对输入的大写字母输出其对应的小写字母，其他字符则原样输出。\n\n### 输入样例:\n\n例如：\n\n```in\nA\n```\n\n### 输出样例:\n\n例如：\n\n```out\na\n```\n### 输入样例:\n\n例如：\n\n```in\na\n```\n\n### 输出样例:\n\n例如：\n\n```out\na\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "西北大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 69,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "635a3f4dee9ae64fae95be40",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 5
    }
  },
  "solution": "需要对输入的字符进行检查判断是否大写字母，如果是则输出其对应的小写字母，如果不是，则原样输出。",
  "description": "用户输入一个字符，如果为大写字母，则输出小写字母；如果为其他字符，则原样输出。\n\n\n\n### 输入格式:\n\n输入一个字符。\n\n### 输出格式:\n\n对输入的大写字母输出其对应的小写字母，其他字符则原样输出。\n\n### 输入样例:\n\n例如：\n\n```in\nA\n```\n\n### 输出样例:\n\n例如：\n\n```out\na\n```\n### 输入样例:\n\n例如：\n\n```in\na\n```\n\n### 输出样例:\n\n例如：\n\n```out\na\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd41"
  },
  "id": "1593399728040169474",
  "label": "C",
  "score": 300,
  "problemId": "1590018567452618752",
  "title": "矩阵输出",
  "content": "输出特殊格式的矩阵。\n\n### 输入格式:\n\n输入一行，给出3个整数：$$m$$、$$n$$和$$q$$，分别表示：\n1. 待输出矩阵的行数$$m$$；\n1. 待输出矩阵的列数$$n$$；\n1. 待输出矩阵中第1行第1列的数字$$q$$。\n\n### 输出格式:\n\n首先，输出$$m$$行$$n$$列的矩阵，要求：\n1. 第1列是公差为2的等差数列；\n1. 第$$i$$行是公差为$$2\\times i+3$$的等差数列。\n\n然后，在下一行输出第一个能被5整除的数的行号、列号及数值；若不存在这样的数值，则输出0\n\n### 输入样例1:\n```in\n3 5 2\n```\n\n### 输出样例1:\n```out\n2\t7\t12\t17\t22\n4\t11\t18\t25\t32\n6\t15\t24\t33\t42\n2\t4\t25\n```\n**注意**：列间用一个水平制表位相隔，最后一列后面没有制表位。\n### 输入样例2:\n```in\n1 4 1\n```\n### 输出样例2:\n```out\n1\t6\t11\t16\n0\n```\n**注意**：列间用一个水平制表位(\\t)相隔，最后一列后面没有制表位。",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "太原理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "66",
          "name": "输入输出格式化控制",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 207,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636a887fff323b25150f2792",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 54
    }
  },
  "solution": "",
  "description": "输出特殊格式的矩阵。\n\n### 输入格式:\n\n输入一行，给出3个整数：$$m$$、$$n$$和$$q$$，分别表示：\n1. 待输出矩阵的行数$$m$$；\n1. 待输出矩阵的列数$$n$$；\n1. 待输出矩阵中第1行第1列的数字$$q$$。\n\n### 输出格式:\n\n首先，输出$$m$$行$$n$$列的矩阵，要求：\n1. 第1列是公差为2的等差数列；\n1. 第$$i$$行是公差为$$2\\times i+3$$的等差数列。\n\n然后，在下一行输出第一个能被5整除的数的行号、列号及数值；若不存在这样的数值，则输出0\n\n### 输入样例1:\n```in\n3 5 2\n```\n\n### 输出样例1:\n```out\n2\t7\t12\t17\t22\n4\t11\t18\t25\t32\n6\t15\t24\t33\t42\n2\t4\t25\n```\n**注意**：列间用一个水平制表位相隔，最后一列后面没有制表位。\n### 输入样例2:\n```in\n1 4 1\n```\n### 输出样例2:\n```out\n1\t6\t11\t16\n0\n```\n**注意**：列间用一个水平制表位(\\t)相隔，最后一列后面没有制表位。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd42"
  },
  "id": "1593399728040169475",
  "label": "D",
  "score": 300,
  "problemId": "1314906125914398720",
  "title": "字符串输入输出练习",
  "content": "输入起始位置m、长度l及字符串s，要求输出字符串s从第m个字符开始的长度为l的子串。\n\n### 输入格式:\n\n测试数据有多组，处理到文件尾。\n每组测试数据输入一行，首先是以一个空格间隔的两个整数m、l，分别表示起始位置和长度，然后在一个空格之后是一个字符串s（长度不超过80，可能包含空格）。测试数据保证取得的结果字符串至少包含一个字符。\n\n### 输出格式:\n\n对于每组测试，输出字符串s从第m个字符开始的长度为l的子串（若长度不足l，则只需输出从第m个字符开始到最后一个字符结束的子串）。每两组测试数据之间留一个空行。\n\n### 输入样例:\n\n```in\n1 2 hello world!\n9 6 welcome to acm world\n```\n\n### 输出样例:\n\n```out\nhe\n\nto acm\n```\n\n### 来源：\n黄龙军, 等. 大学生程序设计竞赛入门—C/C++程序设计（微课视频版）, 北京:清华大学出版社, 2020.11. ISBN:9787302564744\t",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 154,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5f81a970f7f11e00069b24e4",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 3
    }
  },
  "solution": "",
  "description": "输入起始位置m、长度l及字符串s，要求输出字符串s从第m个字符开始的长度为l的子串。\n\n### 输入格式:\n\n测试数据有多组，处理到文件尾。\n每组测试数据输入一行，首先是以一个空格间隔的两个整数m、l，分别表示起始位置和长度，然后在一个空格之后是一个字符串s（长度不超过80，可能包含空格）。测试数据保证取得的结果字符串至少包含一个字符。\n\n### 输出格式:\n\n对于每组测试，输出字符串s从第m个字符开始的长度为l的子串（若长度不足l，则只需输出从第m个字符开始到最后一个字符结束的子串）。每两组测试数据之间留一个空行。\n\n### 输入样例:\n\n```in\n1 2 hello world!\n9 6 welcome to acm world\n```\n\n### 输出样例:\n\n```out\nhe\n\nto acm\n```\n\n### 来源：\n黄龙军, 等. 大学生程序设计竞赛入门—C/C++程序设计（微课视频版）, 北京:清华大学出版社, 2020.11. ISBN:9787302564744\t",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd43"
  },
  "id": "1593399728040169476",
  "label": "E",
  "score": 300,
  "problemId": "1466430406186815488",
  "title": "美好日子",
  "content": "据说2021年12月2日是一个美好日子，因为这是一个完全对称日！这里认为一个美好日子是一个共8位数字的完全对称日（例如20211202），其中年份占4位，月份、日份都是2位。对于给定的年份，请判断该年是否存在美好日子。\n\n### 输入格式:\n\n首先输入一个正整数T（<8000）表示测试数据的组数，然后输入T组测试数据。对于每组测试数据，输入一个年份y（2020<y<10000）。\n\n### 输出格式:\n\n对于每组测试数据，输出一行。若年份y存在美好日子，则输出该日期，否则输出“none”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n2021\n2022\n2100\n```\n\n### 输出样例:\n\n```out\n20211202\nnone\nnone\n```\n\n### 说明:\n2021年12月2日，顺利接娃放学，晚饭没获差评。谨以此题纪念这个美好日子。",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924248495018221568",
          "name": "循环结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924249775870582784",
          "name": "遍历循环for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924247889578827776",
          "name": "组合数据类型",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924249261695049728",
          "name": "列表",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 115,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "61bcb32ccc8d047d05a18cf4",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 2
    }
  },
  "solution": "",
  "description": "据说2021年12月2日是一个美好日子，因为这是一个完全对称日！这里认为一个美好日子是一个共8位数字的完全对称日（例如20211202），其中年份占4位，月份、日份都是2位。对于给定的年份，请判断该年是否存在美好日子。\n\n### 输入格式:\n\n首先输入一个正整数T（<8000）表示测试数据的组数，然后输入T组测试数据。对于每组测试数据，输入一个年份y（2020<y<10000）。\n\n### 输出格式:\n\n对于每组测试数据，输出一行。若年份y存在美好日子，则输出该日期，否则输出“none”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n2021\n2022\n2100\n```\n\n### 输出样例:\n\n```out\n20211202\nnone\nnone\n```\n\n### 说明:\n2021年12月2日，顺利接娃放学，晚饭没获差评。谨以此题纪念这个美好日子。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd44"
  },
  "id": "1593399728040169477",
  "label": "F",
  "score": 300,
  "problemId": "1429348337564860416",
  "title": "海明悬崖",
  "content": "在信息编码中，两个二进制编码的对应位取值不同的数量称为这两个编码的海明距离。例如：10101和00110从第一位开始依次有第一位、第四、五位不同，则海明距离为3。\n\n若两个二进制编码的每一位都不相同，则这两个编码产生了海明悬崖(Hamming Cliff)。例如，15的二进制编码为01111，16的二进制编码为10000，则产生“Hamming Cliff”。\n\n任务：给你两个正整数，请你判断是否会产生“Hamming Cliff”。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数T, 表示测试数据的组数。然后是T组测试数据(1<=T<=30)。\n每组测试数据输入两个正整数n,m（1<=n<=$$2^{31}$$-1）。 \n说明:若两个二进制编码长度不等，则在较短的编码前面添加前导0。\n\n### 输出格式:\n\n对于每组测试数据，若产生“Hamming Cliff”输出“Yes”，否则输出“No”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n15 16\n2 3\n512 511\n```\n\n### 输出样例:\n\n```out\nYes\nNo\nYes\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 90,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "61220010e61ce94930f44198",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "在信息编码中，两个二进制编码的对应位取值不同的数量称为这两个编码的海明距离。例如：10101和00110从第一位开始依次有第一位、第四、五位不同，则海明距离为3。\n\n若两个二进制编码的每一位都不相同，则这两个编码产生了海明悬崖(Hamming Cliff)。例如，15的二进制编码为01111，16的二进制编码为10000，则产生“Hamming Cliff”。\n\n任务：给你两个正整数，请你判断是否会产生“Hamming Cliff”。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数T, 表示测试数据的组数。然后是T组测试数据(1<=T<=30)。\n每组测试数据输入两个正整数n,m（1<=n<=$$2^{31}$$-1）。 \n说明:若两个二进制编码长度不等，则在较短的编码前面添加前导0。\n\n### 输出格式:\n\n对于每组测试数据，若产生“Hamming Cliff”输出“Yes”，否则输出“No”。引号不必输出。\n\n### 输入样例:\n\n```in\n3\n15 16\n2 3\n512 511\n```\n\n### 输出样例:\n\n```out\nYes\nNo\nYes\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448de52fb4a7dada3b8bd45"
  },
  "id": "1593399728040169478",
  "label": "G",
  "score": 300,
  "problemId": "1585490141660078080",
  "title": "歌手得分",
  "content": "在歌手大赛中，有n个评委为参赛的歌手打分，分数为0~100分。歌手最后得分为去掉$m$个最高分和$m$个最低分后，剩余的$n-2m$个分数的平均值。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数$T$，表示测试数据的组数，然后是$T$组测试数据。对于每组测试数据，第一行输入两个整数$n, m(3<n<100, m<n/2)$，含义如上；第二行输入$n$个整数。\n\n### 输出格式:\n\n对于每组测试数据，输出一行，包含一个实数，表示歌手的最后得分。结果保留两位小数。\n\n### 输入样例:\n\n```in\n2\n10 1\n20 20 80 80 10 10 10 40 40 60\n10 2\n20 20 80 80 10 10 10 40 40 60\n```\n\n### 输出样例:\n\n```out\n35.00\n31.67\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 69,
  "problemSetId": "1593399727973060608",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "635a0eed7815ff4379f20b93",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 6
    }
  },
  "solution": "",
  "description": "在歌手大赛中，有n个评委为参赛的歌手打分，分数为0~100分。歌手最后得分为去掉$m$个最高分和$m$个最低分后，剩余的$n-2m$个分数的平均值。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数$T$，表示测试数据的组数，然后是$T$组测试数据。对于每组测试数据，第一行输入两个整数$n, m(3<n<100, m<n/2)$，含义如上；第二行输入$n$个整数。\n\n### 输出格式:\n\n对于每组测试数据，输出一行，包含一个实数，表示歌手的最后得分。结果保留两位小数。\n\n### 输入样例:\n\n```in\n2\n10 1\n20 20 80 80 10 10 10 40 40 60\n10 2\n20 20 80 80 10 10 10 40 40 60\n```\n\n### 输出样例:\n\n```out\n35.00\n31.67\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc29"
  },
  "id": "1594605504100421632",
  "label": "",
  "score": 1,
  "problemId": "1759",
  "title": "直接访问就是直接利用变量的地址直接进行访问。",
  "content": "直接访问就是直接利用变量的地址直接进行访问。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "吉首大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "直接访问就是直接利用变量的地址直接进行访问。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2a"
  },
  "id": "1594605504100421633",
  "label": "",
  "score": 1,
  "problemId": "1799",
  "title": "指向结构体变量的指针可以作函数参数，实现传址调用。",
  "content": "指向结构体变量的指针可以作函数参数，实现传址调用。 ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "吉首大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "指向结构体变量的指针可以作函数参数，实现传址调用。 ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2b"
  },
  "id": "1594605504104615936",
  "label": "",
  "score": 1,
  "problemId": "1009991897476583424",
  "title": "变量定义：int \\*p, q; 中，p和q都是指针。  ",
  "content": "变量定义：int \\*p, q; 中，p和q都是指针。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "变量定义：int \\*p, q; 中，p和q都是指针。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2c"
  },
  "id": "1594605504104615937",
  "label": "",
  "score": 1,
  "problemId": "1024566602666127360",
  "title": "要通过函数调用来改变主调函数中某个变量的值，可以把指针作为函数的参数。  ",
  "content": "要通过函数调用来改变主调函数中某个变量的值，可以把指针作为函数的参数。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "要通过函数调用来改变主调函数中某个变量的值，可以把指针作为函数的参数。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2d"
  },
  "id": "1594605504104615938",
  "label": "",
  "score": 1,
  "problemId": "1024567663640494080",
  "title": "数组的基地址是在内存中存储数组的起始位置，数组名本身就是一个地址即指针值。  ",
  "content": "数组的基地址是在内存中存储数组的起始位置，数组名本身就是一个地址即指针值。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "数组的基地址是在内存中存储数组的起始位置，数组名本身就是一个地址即指针值。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2e"
  },
  "id": "1594605504104615939",
  "label": "",
  "score": 1,
  "problemId": "1024570278864531456",
  "title": "调用strcmp函数比较字符串大小时，通常较长的字符串会较大。  ",
  "content": "调用strcmp函数比较字符串大小时，通常较长的字符串会较大。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "调用strcmp函数比较字符串大小时，通常较长的字符串会较大。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc2f"
  },
  "id": "1594605504104615940",
  "label": "",
  "score": 1,
  "problemId": "1024633651694190592",
  "title": "如果函数的返回类型是指针，则可以返回函数内部任意变量的地址。  ",
  "content": "如果函数的返回类型是指针，则可以返回函数内部任意变量的地址。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "如果函数的返回类型是指针，则可以返回函数内部任意变量的地址。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc30"
  },
  "id": "1594605504104615941",
  "label": "",
  "score": 1,
  "problemId": "1024633748700053504",
  "title": "如果函数的返回类型是指针，则可以返回0。  ",
  "content": "如果函数的返回类型是指针，则可以返回0。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "TRUE"
    }
  },
  "solution": "",
  "description": "如果函数的返回类型是指针，则可以返回0。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc31"
  },
  "id": "1594605504104615942",
  "label": "",
  "score": 1,
  "problemId": "1135736215152844800",
  "title": "可以将一个整型数据赋给一个指针变量，如p=3000。  ",
  "content": "可以将一个整型数据赋给一个指针变量，如p=3000。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "山东理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "可以将一个整型数据赋给一个指针变量，如p=3000。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc32"
  },
  "id": "1594605504108810240",
  "label": "",
  "score": 1,
  "problemId": "1135737127170695168",
  "title": "指针变量中保存的不一定是一个地址。  ",
  "content": "指针变量中保存的不一定是一个地址。  ~@[](1)",
  "type": "TRUE_OR_FALSE",
  "authorOrganization": {
    "name": "山东理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "trueOrFalseJudgeConfig": {
      "answer": "FALSE"
    }
  },
  "solution": "",
  "description": "指针变量中保存的不一定是一个地址。  ",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc33"
  },
  "id": "1594605840114507776",
  "label": "",
  "score": 2,
  "problemId": "1071289414412328960",
  "title": "下面程序输出数组中的最大值，由s指针指向该元素   ",
  "content": "下面程序输出数组中的最大值，由s指针指向该元素\n```\nint main()\n {\n    int a[10]={6,7,2,9,1,10,5,8,4,3,},*p,*s;\n    for(p=a, s=a; p-a<10; p++)\n    if( ---?--- )\n      s=p;\n    printf(\"The max:%d\",*s):\n    return 0;\n}\n```\n则在if语句中的判断表达式应该是：",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "B"
    }
  },
  "solution": "",
  "description": "下面程序输出数组中的最大值，由s指针指向该元素\n```\nint main()\n {\n    int a[10]={6,7,2,9,1,10,5,8,4,3,},*p,*s;\n    for(p=a, s=a; p-a<10; p++)\n    if( ---?--- )\n      s=p;\n    printf(\"The max:%d\",*s):\n    return 0;\n}\n```\n则在if语句中的判断表达式应该是：",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc34"
  },
  "id": "1594605840118702080",
  "label": "",
  "score": 2,
  "problemId": "1071341425396727808",
  "title": "以下程序的输出结果是：   ",
  "content": "以下程序的输出结果是：\n```\n#include<stdio.h>\nvoid sub1(char a,char b)\n{\n    char c;\n    c=a;\n    a=b;\n    b=c;\n}\nvoid sub2(char* a,char b)\n{\n    char c;\n    c=*a;\n    *a=b;b=c;\n}\nvoid sub3(char* a,char*b)\n{\n    char c;\n    c=*a;\n    *a=*b;\n    *b=c;\n}\nint main()\n{\n    char a,b;\n    a='A';b='B';sub3(&a,&b);putchar(a);putchar(b);\n    a='A';b='B';sub2(&a,b);putchar(a);putchar(b);\n    a='A';b='B';sub1(a,b);putchar(a);putchar(b);\n    return 0;\n}\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "以下程序的输出结果是：\n```\n#include<stdio.h>\nvoid sub1(char a,char b)\n{\n    char c;\n    c=a;\n    a=b;\n    b=c;\n}\nvoid sub2(char* a,char b)\n{\n    char c;\n    c=*a;\n    *a=b;b=c;\n}\nvoid sub3(char* a,char*b)\n{\n    char c;\n    c=*a;\n    *a=*b;\n    *b=c;\n}\nint main()\n{\n    char a,b;\n    a='A';b='B';sub3(&a,&b);putchar(a);putchar(b);\n    a='A';b='B';sub2(&a,b);putchar(a);putchar(b);\n    a='A';b='B';sub1(a,b);putchar(a);putchar(b);\n    return 0;\n}\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc35"
  },
  "id": "1594605840118702081",
  "label": "",
  "score": 2,
  "problemId": "1071346134736093184",
  "title": "下列程序的输出结果是    ",
  "content": "下列程序的输出结果是\n```\nint main( )\n {\n     char *p1, *p2, str[50]=\"xyz\";\n     p1=\"abcd\";\n     p2=\"ABCD\";\n     strcpy(str+2,strcat(p1+2,p2+1));\n     printf（\"%s\",str);\n     return 0\n }\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "下列程序的输出结果是\n```\nint main( )\n {\n     char *p1, *p2, str[50]=\"xyz\";\n     p1=\"abcd\";\n     p2=\"ABCD\";\n     strcpy(str+2,strcat(p1+2,p2+1));\n     printf（\"%s\",str);\n     return 0\n }\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc36"
  },
  "id": "1594605840118702082",
  "label": "",
  "score": 2,
  "problemId": "1071346669052674048",
  "title": "执行以下程序后，y的值是：   ",
  "content": "执行以下程序后，y的值是：\n```\nint main ( )\n {\n    int a[]={2,4,6,8,10};\n    int y=1,x,*p;\n    p=&a[1];\n    for(x=0;x<3;x++)\n      y + = * (p + x);\n    printf(\"%d\\n\",y);\n    return 0;\n }\n```",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "执行以下程序后，y的值是：\n```\nint main ( )\n {\n    int a[]={2,4,6,8,10};\n    int y=1,x,*p;\n    p=&a[1];\n    for(x=0;x<3;x++)\n      y + = * (p + x);\n    printf(\"%d\\n\",y);\n    return 0;\n }\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc37"
  },
  "id": "1594605840118702083",
  "label": "",
  "score": 3,
  "problemId": "1354729264799879168",
  "title": "若有说明：int n=2,*p=&n,*q=p,则以下非法的赋值语句是: （ ）。",
  "content": "若有说明：int n=2,*p=&n,*q=p,则以下非法的赋值语句是: （ ）。\n@[](3)\n\nA. p=q\nB. *p=*q\nC. n=*q\nD. p=n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新疆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "若有说明：int n=2,*p=&n,*q=p,则以下非法的赋值语句是: （ ）。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc38"
  },
  "id": "1594605840122896384",
  "label": "",
  "score": 3,
  "problemId": "1354730030843367424",
  "title": "若有说明语句“int a[5],*p=a;”,则对数组元素的正确引用是(    )。",
  "content": "若有说明语句“int a[5],*p=a;”,则对数组元素的正确引用是(    )。\n@[](3)\n\nA. a[p]\nB. p[a]\nC. *(p+2)\nD. p+2",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "新疆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "若有说明语句“int a[5],*p=a;”,则对数组元素的正确引用是(    )。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc39"
  },
  "id": "1594605840122896385",
  "label": "",
  "score": 2,
  "problemId": "1458820420605440000",
  "title": "以下程序的输出结果",
  "content": "以下程序的输出结果\n```\nvoid Sub(int x, int y, int *z)\n{   *z=y-x;  }\nvoid main()\n{  \n     int a,b,c;\n     Sub(10,5,&a);\n     Sub(7,a,&b);\n     Sub(a,b,&c);\n     printf(\"%d,%d,%d\\n\",a,b,c); \n}\n```\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "以下程序的输出结果\n```\nvoid Sub(int x, int y, int *z)\n{   *z=y-x;  }\nvoid main()\n{  \n     int a,b,c;\n     Sub(10,5,&a);\n     Sub(7,a,&b);\n     Sub(a,b,&c);\n     printf(\"%d,%d,%d\\n\",a,b,c); \n}\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3a"
  },
  "id": "1594605840122896386",
  "label": "",
  "score": 2,
  "problemId": "1458821423795539968",
  "title": "```",
  "content": "下列数组定义\n```\nint a[10]={1,2,3,4,5,6,7,8,9,10},*p=a;\n```\n 则数值为6的表达式是",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "D"
    }
  },
  "solution": "",
  "description": "下列数组定义\n```\nint a[10]={1,2,3,4,5,6,7,8,9,10},*p=a;\n```\n 则数值为6的表达式是",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3b"
  },
  "id": "1594605840122896387",
  "label": "",
  "score": 2,
  "problemId": "1458822434413088768",
  "title": "下面程序输出数组中的最大值,由s指针指向该元素.",
  "content": "下面程序输出数组中的最大值,由s指针指向该元素.\n\n\t int main()\n     {\n\t\t int a[10]={6,7,2,9,1,10,5,8,4,3,},*p,*s;\n\t\t for(p=a, s=a; p-a<10; p++)\n             if(---?---)    s=p;\n\t\t printf(\"The max:%d\",*s):\n\t\t return 0;\n     }    \n\n则在if语句中的判断表达式应该是:",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "C"
    }
  },
  "solution": "",
  "description": "下面程序输出数组中的最大值,由s指针指向该元素.\n\n\t int main()\n     {\n\t\t int a[10]={6,7,2,9,1,10,5,8,4,3,},*p,*s;\n\t\t for(p=a, s=a; p-a<10; p++)\n             if(---?---)    s=p;\n\t\t printf(\"The max:%d\",*s):\n\t\t return 0;\n     }    \n\n则在if语句中的判断表达式应该是:",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3c"
  },
  "id": "1594605840122896388",
  "label": "",
  "score": 2,
  "problemId": "1458824261459636224",
  "title": "以下程序段给数组所有的元素输入数据, 请选择正确答案填入:",
  "content": "以下程序段给数组所有的元素输入数据, 请选择正确答案填入:\n```\n    int main()\n    {  \n\t\tint a[10],i=0;\n        while(i<10)\n\t\tscanf(\"%d\",＿＿);\n\t    return 0;\n     }\n```\n",
  "type": "MULTIPLE_CHOICE",
  "authorOrganization": {
    "name": "集美大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {
    "multipleChoiceJudgeConfig": {
      "answer": "A"
    }
  },
  "solution": "",
  "description": "以下程序段给数组所有的元素输入数据, 请选择正确答案填入:\n```\n    int main()\n    {  \n\t\tint a[10],i=0;\n        while(i<10)\n\t\tscanf(\"%d\",＿＿);\n\t    return 0;\n     }\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3d"
  },
  "id": "1594605940920414208",
  "label": "",
  "score": 1,
  "problemId": "1361581978393346048",
  "title": "若有定义 `double *p;`，使`p`指向一个双精度型的动态存储单元的语句为（）。",
  "content": "若有定义 `double *p;`，使`p`指向一个双精度型的动态存储单元的语句为（）。\n\n\n*@[](1)\n\nA. p = malloc(sizeof(double));\nB. p = (double *)malloc(sizeof(*p));\nC. p = malloc(8);\nD. p = (double *)malloc(sizeof(double));",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "浙大城市学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "若有定义 `double *p;`，使`p`指向一个双精度型的动态存储单元的语句为（）。\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3e"
  },
  "id": "1594605940924608512",
  "label": "",
  "score": 2,
  "problemId": "1453269105388953600",
  "title": "指针的定义",
  "content": "指针的定义\n\n有如下变量定义：\n\n```c\ndouble a;\n```\n\n下列指针定义语句中，▁▁▁▁▁ 是正确的。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的定义\n\n有如下变量定义：\n\n```c\ndouble a;\n```\n\n下列指针定义语句中，▁▁▁▁▁ 是正确的。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc3f"
  },
  "id": "1594605940924608513",
  "label": "",
  "score": 2,
  "problemId": "1453269812134481920",
  "title": "指针的使用(1)",
  "content": "指针的使用(1)\n\n有如下变量定义：\n\n```c\ndouble a;\ndouble *p, *q;\n```\n\n假设 p 指向 a，则使 q 指向 a 的正确语句是 ▁▁▁▁▁ 。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的使用(1)\n\n有如下变量定义：\n\n```c\ndouble a;\ndouble *p, *q;\n```\n\n假设 p 指向 a，则使 q 指向 a 的正确语句是 ▁▁▁▁▁ 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc40"
  },
  "id": "1594605940924608514",
  "label": "",
  "score": 2,
  "problemId": "1453275719919607808",
  "title": "指针的使用(2)",
  "content": "指针的使用(2)\n\n有如下变量定义：\n\n```c\ndouble a = 2.5, b;\ndouble *p, *q;\n```\n\n假设 p 指向 a，q 指向 b，则使 b 的值变成 2.5 的正确语句是 ▁▁▁▁▁ 。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的使用(2)\n\n有如下变量定义：\n\n```c\ndouble a = 2.5, b;\ndouble *p, *q;\n```\n\n假设 p 指向 a，q 指向 b，则使 b 的值变成 2.5 的正确语句是 ▁▁▁▁▁ 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc41"
  },
  "id": "1594605940924608515",
  "label": "",
  "score": 2,
  "problemId": "1453282841156849664",
  "title": "指针的使用(3)",
  "content": "指针的使用(3)\n\n有如下变量定义：\n\n```c\ndouble a;\ndouble *p, *q;\n```\n\n假设 p 指向 a，则使 q 指向 a 的正确语句是 ▁▁▁▁▁ 。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的使用(3)\n\n有如下变量定义：\n\n```c\ndouble a;\ndouble *p, *q;\n```\n\n假设 p 指向 a，则使 q 指向 a 的正确语句是 ▁▁▁▁▁ 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc42"
  },
  "id": "1594605940924608516",
  "label": "",
  "score": 2,
  "problemId": "1453316927681339392",
  "title": "指针的使用(4)",
  "content": "指针的使用(4)\n\n有如下变量定义：\n\n```c\ndouble a = 2.5, b;\ndouble *p, *q;\n```\n\n假设 p 指向 a，q 指向 b，则使 b 的值变成 2.5 的正确语句是 ▁▁▁▁▁ 。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的使用(4)\n\n有如下变量定义：\n\n```c\ndouble a = 2.5, b;\ndouble *p, *q;\n```\n\n假设 p 指向 a，q 指向 b，则使 b 的值变成 2.5 的正确语句是 ▁▁▁▁▁ 。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc43"
  },
  "id": "1594605940924608517",
  "label": "",
  "score": 2,
  "problemId": "1453367886584418304",
  "title": "指针的使用",
  "content": "指针的使用\n\n若有以下变量定义\n\n```c\nchar a, *p;\ndouble b, *q;\n```\n\n则下列语句中， ▁▁▁▁▁ 是合理合法的。",
  "type": "MULTIPLE_CHOICE_MORE_THAN_ONE_ANSWER",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 0,
  "problemSetId": "1594605247375466496",
  "judgeConfig": {},
  "solution": "",
  "description": "指针的使用\n\n若有以下变量定义\n\n```c\nchar a, *p;\ndouble b, *q;\n```\n\n则下列语句中， ▁▁▁▁▁ 是合理合法的。",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc44"
  }
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc45"
  }
},{
  "_id": {
    "$oid": "6448e3cffb4a7dada3b8cc46"
  }
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc4e"
  },
  "id": "1595937666963656704",
  "label": "",
  "score": 300,
  "problemId": "1593588967918919680",
  "title": "矩阵乘法",
  "content": "已知A矩阵是一个3行4列的整数矩阵，B矩阵是一个4行2列的整数矩阵。计算输出两矩阵的乘积矩阵C。\n### 输入格式:\n表空格式输入。分别按行输入两个矩阵，先输入A矩阵，再输入B矩阵。\n\n### 输出格式:\n\n格式控制输出C矩阵，按矩阵逻辑结构输出，每个数据输出字段宽度为6\n\n### 输入样例:\n\n\n```in\n1  2  3  4\n5  6  7  8\n9 10 11 12\n1 2\n3 4\n5 6\n7 8\n\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n    50    60\n   114   140\n   178   220\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "兰州交通大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "969040536861708288",
          "name": "FORTRAN",
          "isLeaf": false,
          "enName": "FORTRAN Programming"
        },
        {
          "id": "969040815673827328",
          "name": "数组及应用",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "969041541284225024",
          "name": "多维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 66,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "637781d539c4615de5171bc1",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 8
    }
  },
  "solution": "",
  "description": "已知A矩阵是一个3行4列的整数矩阵，B矩阵是一个4行2列的整数矩阵。计算输出两矩阵的乘积矩阵C。\n### 输入格式:\n表空格式输入。分别按行输入两个矩阵，先输入A矩阵，再输入B矩阵。\n\n### 输出格式:\n\n格式控制输出C矩阵，按矩阵逻辑结构输出，每个数据输出字段宽度为6\n\n### 输入样例:\n\n\n```in\n1  2  3  4\n5  6  7  8\n9 10 11 12\n1 2\n3 4\n5 6\n7 8\n\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n    50    60\n   114   140\n   178   220\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc4f"
  },
  "id": "1595937666963656705",
  "label": "",
  "score": 300,
  "problemId": "1587265611770654720",
  "title": "正序和逆序输出超长正整数",
  "content": "正序和逆序输出一个500位以内的十进制正整数，每一位后用_号隔开。（每一位后都有1个_号，包括最后一位）\n\n注意：若正整数开头输入0，则将开头的0视为无效。例如输入000123，那么实际输入的数字为123。\n### 输入格式：\n保证只输入正整数，且只数字0-9组成\n### 输入样例1:\n\n```in\n000123\n```\n\n### 输出样例1:\n\n\n```out\n1_2_3_\n3_2_1_\n```\n\n\n### 输入样例2:\n\n```in\n987654321012345678902345678901987654321012345678902345678901\n```\n\n### 输出样例2:\n\n\n```out\n9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_0_2_3_4_5_6_7_8_9_0_1_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_0_2_3_4_5_6_7_8_9_0_1_\n1_0_9_8_7_6_5_4_3_2_0_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_1_0_9_8_7_6_5_4_3_2_0_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "怀化学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "80",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 114,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636080bc7815ff4379f23432",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 14
    }
  },
  "solution": "",
  "description": "正序和逆序输出一个500位以内的十进制正整数，每一位后用_号隔开。（每一位后都有1个_号，包括最后一位）\n\n注意：若正整数开头输入0，则将开头的0视为无效。例如输入000123，那么实际输入的数字为123。\n### 输入格式：\n保证只输入正整数，且只数字0-9组成\n### 输入样例1:\n\n```in\n000123\n```\n\n### 输出样例1:\n\n\n```out\n1_2_3_\n3_2_1_\n```\n\n\n### 输入样例2:\n\n```in\n987654321012345678902345678901987654321012345678902345678901\n```\n\n### 输出样例2:\n\n\n```out\n9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_0_2_3_4_5_6_7_8_9_0_1_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_0_2_3_4_5_6_7_8_9_0_1_\n1_0_9_8_7_6_5_4_3_2_0_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_1_0_9_8_7_6_5_4_3_2_0_9_8_7_6_5_4_3_2_1_0_1_2_3_4_5_6_7_8_9_\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc50"
  },
  "id": "1595937666963656706",
  "label": "",
  "score": 300,
  "problemId": "1590044783081549824",
  "title": "布尔积与逻辑短路（动态数组）",
  "content": "对于布尔(0-1)矩阵$$A=(a_{ij})_{m\\times n}$$和$$B=(b_{ij})_{n\\times p}$$，求$A$和$B$的布尔积$A\\odot B=(c_{ij})_{m\\times p}$，并返回逻辑与运算的执行次数。\n\n布尔积运算定义如下：\n$\\qquad c_{ij}=\\displaystyle\\bigvee_{k=1}^{n}(a_{ik}\\wedge b_{kj})$.\n其中，$\\vee$是逻辑或(||)操作，$\\wedge$是逻辑与(&&)操作。\n\n例如：\n$$\\left(\n\\begin{array}{ccc}\n1&0&1\\\\\n\\textcolor{red}{0}&\\textcolor{red}{1}&\\textcolor{red}{1}\\\\\n1&0&0\n\\end{array}\\right)\\odot \\left(\n\\begin{array}{ccc}\n1&0&\\textcolor{lightgreen}{1}\\\\\n0&1&\\textcolor{lightgreen}{1}\\\\\n1&0&\\textcolor{lightgreen}{0}\n\\end{array}\\right)=\\left(\n\\begin{array}{ccc}\n1&0&1\\\\\n1&1&\\large{\\textcircled{\\small{1}}}\\\\\n1&0&1\n\\end{array}\\right)\n$$\n其中，\n$\\qquad\\large{\\textcircled{\\small{1}}}=\\textcolor{red}{0}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{0}$\n考虑到逻辑运算的逻辑短路(惰性求值)现象，事实上，\n$\\qquad\\large{\\textcircled{\\small{1}}}=\\textcolor{red}{0}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{1}$\n即只做了2次逻辑与操作。\n\n### 输入格式:\n第一行给出变量$m$, $n$和$p$的变量, 其中，$m,n,p\\in Z^+$。\n接下来的$m$行给出矩阵$A_{m\\times n}$，每行包括$n$个布尔值（即0/1值），用空格隔开；\n接下来的$n$行给出矩阵$B_{n\\times p}$，每行包括$p$个布尔值（即0/1值），用空格隔开。\n\n### 输出格式:\n首先输出$m$行$p$列数据，即$A\\odot B$的结果，列间使用一个空格隔开，最后一列后无空格；然后在下一行给出运算过程中逻辑与运算发生的次数。\n\n### 输入样例:\n```in\n3 3 3\n1 0 1\n0 1 1\n1 0 0\n1 0 1\n0 1 1\n1 0 0\n```\n\n### 输出样例:\n```out\n1 0 1\n1 1 1\n1 0 1\n17\n```\n\n### 提示:\n由于本题中矩阵$A$和$B$的维数是由变量$m$, $n$和$p$确定的，而C语言在定义普通数组时，数组大小必须是整型常量，所以不能在程序中直接定义二维数组，需要用到动态数组。请参考如下代码段：\n```c++\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m, n, p, i, j;\n    int **A, **B, **C;\n    scanf(\"%d%d%d\", &m, &n, &p);\n    \n    //生成动态数组A,B和C, 即为这3个二维数组分配内存，然后录入矩阵数据\n    A=(int**)calloc(m,sizeof(int*));\n    B=(int**)calloc(n,sizeof(int*));\n\t\tC=(int**)calloc(m,sizeof(int*));\n    for(i=0;i<m;i++)\n    {\n        A[i]=(int*)calloc(n,sizeof(int));\n        for(j=0;j<n;j++)\n\t\t\tscanf(\"%d\", &A[i][j]);\n    }\n    for(i=0;i<n;i++)\n    {\n        B[i]=(int*)calloc(p,sizeof(int));\n        for(j=0;j<p;j++)\n\t\t\tscanf(\"%d\", &B[i][j]);\n    }\n\tfor(i=0;i<m;i++)\n    {\n        C[i]=(int*)calloc(p,sizeof(int));\n    }\n    \n    /*-----------------------------------\n\t\t矩阵录入数据已结束，以下是实现布尔积的代码部分，请注意：动态数组与普通数组的引用形式相同\n\t\t该部分上面的代码和下面的代码你无需关注，不过变量声明部分可能需要增加新的变量\n\t-----------------------------------*/\n    \n    \n    \n    \n    //动态数组用完后，所占内存不会自动释放，需要手动释放\n    for(i=0;i<m;i++)\n        free(A[i]);\n    free(A);\n    for(i=0;i<n;i++)\n        free(B[i]);\n    free(B);\n    for(i=0;i<m;i++)\n        free(C[i]);\n    free(C);\n\t\t\n    return 0;\n}\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "太原理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "992015922862505984",
          "name": "线性代数",
          "isLeaf": false,
          "enName": "Linear Algebra"
        },
        {
          "id": "992016022380769280",
          "name": "矩阵及其运算",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "992016252002140160",
          "name": "矩阵的基本运算",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "82",
          "name": "指针与结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "83",
          "name": "指针",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 53,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "63787c6a39c4615de5171f69",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 24
    }
  },
  "solution": "",
  "description": "对于布尔(0-1)矩阵$$A=(a_{ij})_{m\\times n}$$和$$B=(b_{ij})_{n\\times p}$$，求$A$和$B$的布尔积$A\\odot B=(c_{ij})_{m\\times p}$，并返回逻辑与运算的执行次数。\n\n布尔积运算定义如下：\n$\\qquad c_{ij}=\\displaystyle\\bigvee_{k=1}^{n}(a_{ik}\\wedge b_{kj})$.\n其中，$\\vee$是逻辑或(||)操作，$\\wedge$是逻辑与(&&)操作。\n\n例如：\n$$\\left(\n\\begin{array}{ccc}\n1&0&1\\\\\n\\textcolor{red}{0}&\\textcolor{red}{1}&\\textcolor{red}{1}\\\\\n1&0&0\n\\end{array}\\right)\\odot \\left(\n\\begin{array}{ccc}\n1&0&\\textcolor{lightgreen}{1}\\\\\n0&1&\\textcolor{lightgreen}{1}\\\\\n1&0&\\textcolor{lightgreen}{0}\n\\end{array}\\right)=\\left(\n\\begin{array}{ccc}\n1&0&1\\\\\n1&1&\\large{\\textcircled{\\small{1}}}\\\\\n1&0&1\n\\end{array}\\right)\n$$\n其中，\n$\\qquad\\large{\\textcircled{\\small{1}}}=\\textcolor{red}{0}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{0}$\n考虑到逻辑运算的逻辑短路(惰性求值)现象，事实上，\n$\\qquad\\large{\\textcircled{\\small{1}}}=\\textcolor{red}{0}\\&\\&\\textcolor{lightgreen}{1}||\\textcolor{red}{1}\\&\\&\\textcolor{lightgreen}{1}$\n即只做了2次逻辑与操作。\n\n### 输入格式:\n第一行给出变量$m$, $n$和$p$的变量, 其中，$m,n,p\\in Z^+$。\n接下来的$m$行给出矩阵$A_{m\\times n}$，每行包括$n$个布尔值（即0/1值），用空格隔开；\n接下来的$n$行给出矩阵$B_{n\\times p}$，每行包括$p$个布尔值（即0/1值），用空格隔开。\n\n### 输出格式:\n首先输出$m$行$p$列数据，即$A\\odot B$的结果，列间使用一个空格隔开，最后一列后无空格；然后在下一行给出运算过程中逻辑与运算发生的次数。\n\n### 输入样例:\n```in\n3 3 3\n1 0 1\n0 1 1\n1 0 0\n1 0 1\n0 1 1\n1 0 0\n```\n\n### 输出样例:\n```out\n1 0 1\n1 1 1\n1 0 1\n17\n```\n\n### 提示:\n由于本题中矩阵$A$和$B$的维数是由变量$m$, $n$和$p$确定的，而C语言在定义普通数组时，数组大小必须是整型常量，所以不能在程序中直接定义二维数组，需要用到动态数组。请参考如下代码段：\n```c++\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m, n, p, i, j;\n    int **A, **B, **C;\n    scanf(\"%d%d%d\", &m, &n, &p);\n    \n    //生成动态数组A,B和C, 即为这3个二维数组分配内存，然后录入矩阵数据\n    A=(int**)calloc(m,sizeof(int*));\n    B=(int**)calloc(n,sizeof(int*));\n\t\tC=(int**)calloc(m,sizeof(int*));\n    for(i=0;i<m;i++)\n    {\n        A[i]=(int*)calloc(n,sizeof(int));\n        for(j=0;j<n;j++)\n\t\t\tscanf(\"%d\", &A[i][j]);\n    }\n    for(i=0;i<n;i++)\n    {\n        B[i]=(int*)calloc(p,sizeof(int));\n        for(j=0;j<p;j++)\n\t\t\tscanf(\"%d\", &B[i][j]);\n    }\n\tfor(i=0;i<m;i++)\n    {\n        C[i]=(int*)calloc(p,sizeof(int));\n    }\n    \n    /*-----------------------------------\n\t\t矩阵录入数据已结束，以下是实现布尔积的代码部分，请注意：动态数组与普通数组的引用形式相同\n\t\t该部分上面的代码和下面的代码你无需关注，不过变量声明部分可能需要增加新的变量\n\t-----------------------------------*/\n    \n    \n    \n    \n    //动态数组用完后，所占内存不会自动释放，需要手动释放\n    for(i=0;i<m;i++)\n        free(A[i]);\n    free(A);\n    for(i=0;i<n;i++)\n        free(B[i]);\n    free(B);\n    for(i=0;i<m;i++)\n        free(C[i]);\n    free(C);\n\t\t\n    return 0;\n}\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc51"
  },
  "id": "1595937666963656707",
  "label": "",
  "score": 300,
  "problemId": "1475728515092512768",
  "title": "一维世界的疫情传播",
  "content": "可怕的阿尔法病毒正在一维世界传播，如果某人的活动范围与病毒携带者的活动范围有交集，则有被感染的可能。假设有一名病毒携带者A在位于X的家附近活动，他到过的地方用$$x_i$$表示（这些地点不重复），对于X和$$x_i$$之间的区域，都认为是A的活动范围。另外有一名健康者B，他在位于Y的家附近活动，他到过的地方用$$y_i$$表示（这些地点不重复），对于Y和$$y_i$$之间的区域，都认为是B的活动范围。所有的地点都位于整数点上，$$−100≤X,Y,x_i,y_i≤100,X \\neq Y,x_i \\neq X,y_i \\neq Y$$。现在需要判断B是否有被感染的可能。\n\n### 输入格式:\n\n第一行输入$$N,M,X,Y$$四个整数，接下来2行分别是$$N$$个$$x_i$$和$$M$$个$$y_i$$的值。整数值之间都用空格隔开。具体如下：\n\n$$N M X Y$$\n\n$$x_1 x_2 … x_N$$\n\n$$y_1 y_2 … y_M$$\n\n### 输出格式:\n\n用家的位置表示A和B两人，输出是否有被感染的可能，具体格式请参见样例。\n\n### 输入样例1:\n\n```in\n3 2 10 20\n8 15 13\n16 22\n```\n\n### 输出样例1:\n\n```out\n10 and 20: impossible\n```\n\n### 输入样例2:\n```in\n4 2 -48 -1\n-20 -35 -91 -23\n-22 66\n```\n\n#### 输出样例2:\n```out\n-48 and -1: possible\n```\n\n### 输入样例3:\n```in\n5 3 6 8\n-10 3 1 5 -100\n100 6 14\n```\n\n### 输出样例3:\n```out\n6 and 8: possible\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "重庆大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "一维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 99,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "61cabb0dccb6e912fcb9aaf7",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "可怕的阿尔法病毒正在一维世界传播，如果某人的活动范围与病毒携带者的活动范围有交集，则有被感染的可能。假设有一名病毒携带者A在位于X的家附近活动，他到过的地方用$$x_i$$表示（这些地点不重复），对于X和$$x_i$$之间的区域，都认为是A的活动范围。另外有一名健康者B，他在位于Y的家附近活动，他到过的地方用$$y_i$$表示（这些地点不重复），对于Y和$$y_i$$之间的区域，都认为是B的活动范围。所有的地点都位于整数点上，$$−100≤X,Y,x_i,y_i≤100,X \\neq Y,x_i \\neq X,y_i \\neq Y$$。现在需要判断B是否有被感染的可能。\n\n### 输入格式:\n\n第一行输入$$N,M,X,Y$$四个整数，接下来2行分别是$$N$$个$$x_i$$和$$M$$个$$y_i$$的值。整数值之间都用空格隔开。具体如下：\n\n$$N M X Y$$\n\n$$x_1 x_2 … x_N$$\n\n$$y_1 y_2 … y_M$$\n\n### 输出格式:\n\n用家的位置表示A和B两人，输出是否有被感染的可能，具体格式请参见样例。\n\n### 输入样例1:\n\n```in\n3 2 10 20\n8 15 13\n16 22\n```\n\n### 输出样例1:\n\n```out\n10 and 20: impossible\n```\n\n### 输入样例2:\n```in\n4 2 -48 -1\n-20 -35 -91 -23\n-22 66\n```\n\n#### 输出样例2:\n```out\n-48 and -1: possible\n```\n\n### 输入样例3:\n```in\n5 3 6 8\n-10 3 1 5 -100\n100 6 14\n```\n\n### 输出样例3:\n```out\n6 and 8: possible\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc52"
  },
  "id": "1595937666963656709",
  "label": "",
  "score": 300,
  "problemId": "1590577260791459840",
  "title": "追赶问题",
  "content": "甲乙两人相距 $$d$$ 公里，两人的行进速度分别为 $$v_1$$ 和 $$v_2$$ 公里/小时，从时刻 $$h_1:m_1:s_1$$ 同时出发同向而行，甲在前、乙在后，请计算乙追上甲的时刻 $$h_2:m_2:s_2$$。\n\n注：$$h_1:m_1:s_1$$ 和 $$h_2:m_2:s_2$$ 分别为两个时刻的时、分和秒，其中时和分为整数，秒为小数。\n\n#### 输入格式\n> $$d$$\n> $$v_1 \\ \\  v_2$$\n> $$h_1:m_1:s_1$$\n\n#### 输出格式\n> 若问题有解，则输出：$$h_2:m_2:s_2$$\n> 否则输出：None\n\n要求：时间的输出格式为 hh:mm:ss.ss。秒数保留 2 位小数。\n\n#### 输入样例1\n```in\n12.5\n2.3 1.6\n8:18:7.2\n\n```\n#### 输出样例1\n```out\nNone\n\n```\n\n#### 输入样例2\n```in\n16.56\n1.05 2.67\n12:36:4.5\n\n```\n#### 输出样例2\n```out\n22:49:24.50\n\n```\n\n注：为方便计算，假定两人行走的时间均不到 1 天。\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 277,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636c8c3dff323b25150f337e",
      "answer": "#include <stdio.h>\n#include <math.h>\n\nvoid TimeOutput(int hour, int minute, double second);\nvoid TimeInput(int *hour, int *minute, double *second);\n\ndouble TotalSecond(int hour, int minute, double second);\nvoid ToHms(int *hour, int *minute, double *second, double total);\n\nvoid TimeAdd(int *endHour, int *endMinute, double *endSecond,\n\t\t\tint startHour, int startMinute, double startSecond, double duration);\n\nint main()\n{\n\tint h1, h2, m1, m2;\n\tdouble s1, s2, d, v1, v2, t;\n\n\tscanf(\"%lf\", &d);\n\tscanf(\"%lf%lf\", &v1, &v2);\n\tTimeInput(&h1, &m1, &s1);\n\n\tif (v2 > v1)\n\t{\n\t\tt = d / (v2 - v1);\n\t\tTimeAdd(&h2, &m2, &s2, h1, m1, s1, t * 3600.0);\n\t\tTimeOutput(h2, m2, s2);\n\t\tputchar('\\n');\n\t}\n\telse\n\t{\n\t\tputs(\"None\");\n\t}\n\treturn 0;\n}\n\nvoid TimeOutput(int hour, int minute, double second)\n{\n\tprintf(\"%02d:%02d:%05.2f\", hour, minute, second);\n}\n\nvoid TimeInput(int *hour, int *minute, double *second)\n{\n\tint h, m;\n\tdouble s;\n\tscanf(\"%d : %d : %lg\", &h, &m, &s);\n\t*hour = h;\n\t*minute = m;\n\t*second = s;\n}\n\ndouble TotalSecond(int hour, int minute, double second)\n{\n\treturn (hour * 60.0 + minute) * 60.0 + second;\n}\n\nvoid ToHms(int *hour, int *minute, double *second, double total)\n{\n\tint m;\n\t*second = fmod(total, 60.0);\n\tm = total / 60.0;\n\t*hour = m / 60;\n\t*minute = m % 60;\n}\n\nvoid TimeAdd(int *endHour, int *endMinute, double *endSecond,\n            int startHour, int startMinute, double startSecond, double duration)\n{\n\tdouble time = fmod(TotalSecond(startHour, startMinute, startSecond), 86400);\n\ttime = fmod(time + 86400 + fmod(duration, 86400), 86400);\n\tToHms(endHour, endMinute, endSecond, time);\n}\n",
      "answerCompiler": "GCC",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 6
    }
  },
  "solution": "",
  "description": "甲乙两人相距 $$d$$ 公里，两人的行进速度分别为 $$v_1$$ 和 $$v_2$$ 公里/小时，从时刻 $$h_1:m_1:s_1$$ 同时出发同向而行，甲在前、乙在后，请计算乙追上甲的时刻 $$h_2:m_2:s_2$$。\n\n注：$$h_1:m_1:s_1$$ 和 $$h_2:m_2:s_2$$ 分别为两个时刻的时、分和秒，其中时和分为整数，秒为小数。\n\n#### 输入格式\n> $$d$$\n> $$v_1 \\ \\  v_2$$\n> $$h_1:m_1:s_1$$\n\n#### 输出格式\n> 若问题有解，则输出：$$h_2:m_2:s_2$$\n> 否则输出：None\n\n要求：时间的输出格式为 hh:mm:ss.ss。秒数保留 2 位小数。\n\n#### 输入样例1\n```in\n12.5\n2.3 1.6\n8:18:7.2\n\n```\n#### 输出样例1\n```out\nNone\n\n```\n\n#### 输入样例2\n```in\n16.56\n1.05 2.67\n12:36:4.5\n\n```\n#### 输出样例2\n```out\n22:49:24.50\n\n```\n\n注：为方便计算，假定两人行走的时间均不到 1 天。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e728fb4a7dada3b8cc53"
  },
  "id": "1595937666963656708",
  "label": "",
  "score": 300,
  "problemId": "1591251585039200256",
  "title": "连乘与累加",
  "content": "本题目要求读入2个非负整数$$m$$和$$n$$，然后计算如下算式。\n\n$$\n\\qquad\\displaystyle\\sum_{i=1}^{m}{\\prod_{j=i}^{n}\\bigg((-1)^{j-i}\\frac{i}{i+j}}\\bigg)\n$$\n\n### 输入格式:\n在一行中给出2个非负整数$$m$$和$$n$$。要求：$$m,n\\leq 10^5$$。\n\n### 输出格式:\n输出$$\n\\displaystyle\\sum_{i=1}^{m}{\\prod_{j=i}^{n}\\bigg((-1)^{j-i}\\frac{i}{i+j}}\\bigg)\n$$的值。要求：结果精确到小数点后2位。\n\n### 输入样例1:\n\n在这里给出一组输入。例如：\n\n```in\n2 2\n```\n\n### 输出样例1:\n\n在这里给出相应的输出。例如：\n\n```out\n0.33\n```\n\n### 输入样例2:\n\n在这里给出一组输入。例如：\n\n```in\n2 0\n```\n\n### 输出样例2:\n\n在这里给出相应的输出。例如：\n\n```out\n0.00\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "太原理工大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 141,
  "problemSetId": "1595937666900742144",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636fb65339c4615de516d8d0",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 23
    }
  },
  "solution": "",
  "description": "本题目要求读入2个非负整数$$m$$和$$n$$，然后计算如下算式。\n\n$$\n\\qquad\\displaystyle\\sum_{i=1}^{m}{\\prod_{j=i}^{n}\\bigg((-1)^{j-i}\\frac{i}{i+j}}\\bigg)\n$$\n\n### 输入格式:\n在一行中给出2个非负整数$$m$$和$$n$$。要求：$$m,n\\leq 10^5$$。\n\n### 输出格式:\n输出$$\n\\displaystyle\\sum_{i=1}^{m}{\\prod_{j=i}^{n}\\bigg((-1)^{j-i}\\frac{i}{i+j}}\\bigg)\n$$的值。要求：结果精确到小数点后2位。\n\n### 输入样例1:\n\n在这里给出一组输入。例如：\n\n```in\n2 2\n```\n\n### 输出样例1:\n\n在这里给出相应的输出。例如：\n\n```out\n0.33\n```\n\n### 输入样例2:\n\n在这里给出一组输入。例如：\n\n```in\n2 0\n```\n\n### 输出样例2:\n\n在这里给出相应的输出。例如：\n\n```out\n0.00\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc54"
  },
  "id": "1598484478849466368",
  "label": "",
  "score": 300,
  "problemId": "1597616700563124224",
  "title": "精准查找",
  "content": "题目给出一个n*m的棋盘，在棋盘上会落入一定数量且携带有数字的棋子，（没有落子的值为一般为0）我们需要统计出棋盘上棋子的数量，并且找到它相应的位置坐标。\n### 输入格式:\n\n输入第一行给出n,m.接着输入一个n*m的二维数组\n\n### 输出格式:\n\n在第一行输出数组大小，以空格分隔，再输出棋盘落子数量，接着输出落子对应的坐标，及棋子所携带的数字。没有棋子则输出0。\n\n### 输入样例:\n\n```in\n10 10\n0 3 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n1 2 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 5 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 6 0 0 \n\n```\n\n### 输出样例:\n\n\n```out\n10 10 5\n0 1 3\n3 0 1\n3 1 2\n5 6 5\n9 7 6\n```\n### 输入样例:\n\n```in\n10 10\n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n\n\n```\n### 输出样例:\n\n\n```out\n10 10 0\n```\n\n\n\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "贵州工程应用技术学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 72,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "63862871c44a5e15e4002aaf",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 6
    }
  },
  "solution": "",
  "description": "题目给出一个n*m的棋盘，在棋盘上会落入一定数量且携带有数字的棋子，（没有落子的值为一般为0）我们需要统计出棋盘上棋子的数量，并且找到它相应的位置坐标。\n### 输入格式:\n\n输入第一行给出n,m.接着输入一个n*m的二维数组\n\n### 输出格式:\n\n在第一行输出数组大小，以空格分隔，再输出棋盘落子数量，接着输出落子对应的坐标，及棋子所携带的数字。没有棋子则输出0。\n\n### 输入样例:\n\n```in\n10 10\n0 3 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n1 2 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 5 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 6 0 0 \n\n```\n\n### 输出样例:\n\n\n```out\n10 10 5\n0 1 3\n3 0 1\n3 1 2\n5 6 5\n9 7 6\n```\n### 输入样例:\n\n```in\n10 10\n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n\n\n```\n### 输出样例:\n\n\n```out\n10 10 0\n```\n\n\n\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc55"
  },
  "id": "1598484478849466369",
  "label": "",
  "score": 300,
  "problemId": "1594898001611501568",
  "title": "奖项计算",
  "content": "中国大学生程序设计竞赛（CCPC）女生专场即将举办，本次比赛设置金、银、铜奖，各奖项数分别为有效参赛队伍数的 $10\\%、20\\%、30\\%$。其中，有效参赛队伍是指至少成功解出1道题的正式参赛队伍。若有效参赛队伍数为$A$，则：\n* 金奖项数=$\\lceil J \\rceil$，$J = A*10\\%$\n* 银奖项数=$\\lceil Y \\rceil$，$Y = A*30\\%-J$\n* 铜奖项数=$\\lceil T \\rceil$，$T = A*60\\% – Y - J$\n\n其中，$\\lceil x \\rceil$表示向上取整，即取不小于 $x$ 的最小整数。\n\n### 输入格式:\n\n首先输入一个整数T，表示测试数据的组数。对于每组测试数据，输入一个整数$A$，表示有效参赛队伍数。\n\n### 输出格式:\n\n对于每组测试数据，输出金、银、铜奖的奖项数及奖项总数。每两个数据之间留一个空格。\n\n### 输入样例:\n\n```in\n2\n277\n268\n```\n\n### 输出样例:\n\n```out\n28 56 83 167\n27 54 80 161\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "64",
          "name": "基本数据类型与表达式",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "65",
          "name": "表达式",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 129,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "637c442ab102dd0b2d82cb18",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 4
    }
  },
  "solution": "",
  "description": "中国大学生程序设计竞赛（CCPC）女生专场即将举办，本次比赛设置金、银、铜奖，各奖项数分别为有效参赛队伍数的 $10\\%、20\\%、30\\%$。其中，有效参赛队伍是指至少成功解出1道题的正式参赛队伍。若有效参赛队伍数为$A$，则：\n* 金奖项数=$\\lceil J \\rceil$，$J = A*10\\%$\n* 银奖项数=$\\lceil Y \\rceil$，$Y = A*30\\%-J$\n* 铜奖项数=$\\lceil T \\rceil$，$T = A*60\\% – Y - J$\n\n其中，$\\lceil x \\rceil$表示向上取整，即取不小于 $x$ 的最小整数。\n\n### 输入格式:\n\n首先输入一个整数T，表示测试数据的组数。对于每组测试数据，输入一个整数$A$，表示有效参赛队伍数。\n\n### 输出格式:\n\n对于每组测试数据，输出金、银、铜奖的奖项数及奖项总数。每两个数据之间留一个空格。\n\n### 输入样例:\n\n```in\n2\n277\n268\n```\n\n### 输出样例:\n\n```out\n28 56 83 167\n27 54 80 161\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc56"
  },
  "id": "1598484478849466370",
  "label": "",
  "score": 300,
  "problemId": "1589126032802738176",
  "title": "相遇问题",
  "content": "甲乙两人相距 $$d$$ 公里，两人的行进速度分别为 $$v_1$$ 和 $$v_2$$ 公里/小时，从时刻 $$h_1:m_1:s_1$$ 同时出发相向而行，请计算两人相遇的时刻 $$h_2:m_2:s_2$$。\n\n注：$$h_1:m_1:s_1$$ 和 $$h_2:m_2:s_2$$ 分别为两个时刻的时、分和秒，其中时和分为整数，秒为小数。\n\n#### 输入格式\n> $$d$$\n> $$v_1 \\ \\  v_2$$\n> $$h_1:m_1:s_1$$\n\n#### 输出格式\n> $$h_2:m_2:s_2$$\n\n要求：时间的输出格式为 hh:mm:ss.ss。秒数保留 2 位小数。\n\n#### 输入样例\n```in\n16.56\n1.98 1.86\n8:18:7.2\n\n```\n#### 输出样例\n```out\n12:36:52.20\n\n```\n\n注：为方便计算，假定两人行走的时间均不到 1 天。\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "湖北经济学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "74",
          "name": "函数与程序结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "75",
          "name": "函数定义与调用",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 134,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636744dbc7625e5d8eb2a633",
      "answer": "#include <stdio.h>\n#include <math.h>\n\nvoid TimeOutput(int hour, int minute, double second);\nvoid TimeInput(int *hour, int *minute, double *second);\n\ndouble TotalSecond(int hour, int minute, double second);\nvoid ToHms(int *hour, int *minute, double *second, double total);\n\nvoid TimeAdd(int *endHour, int *endMinute, double *endSecond,\n\t\t\tint startHour, int startMinute, double startSecond, double duration);\n\nint main()\n{\n\tint h1, h2, m1, m2;\n\tdouble s1, s2, d, v1, v2, t;\n\n\tscanf(\"%lf\", &d);\n\tscanf(\"%lf%lf\", &v1, &v2);\n\tTimeInput(&h1, &m1, &s1);\n\n\tt = d / (v1 + v2);\n\tTimeAdd(&h2, &m2, &s2, h1, m1, s1, t * 3600.0);\n\n\tTimeOutput(h2, m2, s2);\n\tputchar('\\n');\n\treturn 0;\n}\n\nvoid TimeOutput(int hour, int minute, double second)\n{\n\tprintf(\"%02d:%02d:%05.2f\", hour, minute, second);\n}\n\nvoid TimeInput(int *hour, int *minute, double *second)\n{\n\tint h, m;\n\tdouble s;\n\tscanf(\"%d : %d : %lg\", &h, &m, &s);\n\t*hour = h;\n\t*minute = m;\n\t*second = s;\n}\n\ndouble TotalSecond(int hour, int minute, double second)\n{\n\treturn (hour * 60.0 + minute) * 60.0 + second;\n}\n\nvoid ToHms(int *hour, int *minute, double *second, double total)\n{\n\tint m;\n\t*second = fmod(total, 60.0);\n\tm = total / 60.0;\n\t*hour = m / 60;\n\t*minute = m % 60;\n}\n\nvoid TimeAdd(int *endHour, int *endMinute, double *endSecond,\n            int startHour, int startMinute, double startSecond, double duration)\n{\n\tdouble time = fmod(TotalSecond(startHour, startMinute, startSecond), 86400);\n\ttime = fmod(time + 86400 + fmod(duration, 86400), 86400);\n\tToHms(endHour, endMinute, endSecond, time);\n}\n",
      "answerCompiler": "GCC",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 9
    }
  },
  "solution": "",
  "description": "甲乙两人相距 $$d$$ 公里，两人的行进速度分别为 $$v_1$$ 和 $$v_2$$ 公里/小时，从时刻 $$h_1:m_1:s_1$$ 同时出发相向而行，请计算两人相遇的时刻 $$h_2:m_2:s_2$$。\n\n注：$$h_1:m_1:s_1$$ 和 $$h_2:m_2:s_2$$ 分别为两个时刻的时、分和秒，其中时和分为整数，秒为小数。\n\n#### 输入格式\n> $$d$$\n> $$v_1 \\ \\  v_2$$\n> $$h_1:m_1:s_1$$\n\n#### 输出格式\n> $$h_2:m_2:s_2$$\n\n要求：时间的输出格式为 hh:mm:ss.ss。秒数保留 2 位小数。\n\n#### 输入样例\n```in\n16.56\n1.98 1.86\n8:18:7.2\n\n```\n#### 输出样例\n```out\n12:36:52.20\n\n```\n\n注：为方便计算，假定两人行走的时间均不到 1 天。\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc57"
  },
  "id": "1598484478849466371",
  "label": "",
  "score": 300,
  "problemId": "1318547787983212544",
  "title": "明天",
  "content": "小明喜欢上了日期的计算。这次他要做的是日期的加1天操作，即求在已知日期的基础上加上1天后的结果日期。如，日期为2019-11-11，加上1天，则结果日期为2019-11-12。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组测试数据，每组测试输入1个日期d，日期形式为yyyy-mm-dd。保证输入的日期合法，而且输入的日期和结果日期都在[1000-01-01，9999-12-31]范围内。\n\n### 输出格式:\n\n对于每组测试，在一行上以yyyy-mm-dd的形式输出结果日期。\n\n### 输入样例:\n\n```in\n2\n2019-11-11\n2020-02-28\n```\n\n### 输出样例:\n\n```out\n2019-11-12\n2020-02-29\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文理学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "68",
          "name": "if-else",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "71",
          "name": "for",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "67",
          "name": "分支控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "69",
          "name": "switch",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 124,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5f8ee8f703e5d90007cc1d69",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "小明喜欢上了日期的计算。这次他要做的是日期的加1天操作，即求在已知日期的基础上加上1天后的结果日期。如，日期为2019-11-11，加上1天，则结果日期为2019-11-12。\n\n### 输入格式:\n\n输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组测试数据，每组测试输入1个日期d，日期形式为yyyy-mm-dd。保证输入的日期合法，而且输入的日期和结果日期都在[1000-01-01，9999-12-31]范围内。\n\n### 输出格式:\n\n对于每组测试，在一行上以yyyy-mm-dd的形式输出结果日期。\n\n### 输入样例:\n\n```in\n2\n2019-11-11\n2020-02-28\n```\n\n### 输出样例:\n\n```out\n2019-11-12\n2020-02-29\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc58"
  },
  "id": "1598484478849466373",
  "label": "",
  "score": 300,
  "problemId": "1596508596257673216",
  "title": "胜局排序",
  "content": "n个人打乒乓球，好不热闹。已知每人各自胜了几局，请按胜局从多到少排序并输出每个人的胜局数及每个人的排名，若胜局数相同，则排名也相同。\n\n### 输入格式:\n\n首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试先输入人数n（不大于10），再输入n个整数（不大于30），表示各人的胜局数。\n\n### 输出格式:\n\n对于每组测试，输出两行，第一行是各人从多到少排序的胜局数，第二行是各人相应的排名（从1开始）。每行的每两个数据之间留一个空格。\n\n### 输入样例:\n\n```in\n2\n6 5 1 2 3 4 6\n5 4 5 6 6 4\n```\n\n### 输出样例:\n\n```out\n6 5 4 3 2 1\n1 2 3 4 5 6\n6 6 5 4 4\n1 1 3 4 4\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "绍兴文å­¦é¢"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "æ°ç»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "79",
          "name": "ä¸ç»´æ°ç»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 87,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "6382202d1d8a342ac5c49b4f",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 3
    }
  },
  "solution": "",
  "description": "nä¸ªäººæä¹ä¹çï¼å¥½ä¸ç­é¹ãå·²ç¥æ¯äººåèªèäºå å±ï¼è¯·æèå±ä»å¤å°å°æåºå¹¶è¾åºæ¯ä¸ªäººçèå±æ°åæ¯ä¸ªäººçæåï¼è¥èå±æ°ç¸åï¼åæåä¹ç¸åã\n\n### è¾å¥æ ¼å¼:\n\né¦åè¾å¥ä¸ä¸ªæ­£æ´æ°Tï¼è¡¨ç¤ºæµè¯æ°æ®çç»æ°ï¼ç¶åæ¯Tç»æµè¯æ°æ®ãæ¯ç»æµè¯åè¾å¥äººæ°nï¼ä¸å¤§äº10ï¼ï¼åè¾å¥nä¸ªæ´æ°ï¼ä¸å¤§äº30ï¼ï¼è¡¨ç¤ºåäººçèå±æ°ã\n\n### è¾åºæ ¼å¼:\n\nå¯¹äºæ¯ç»æµè¯ï¼è¾åºä¸¤è¡ï¼ç¬¬ä¸è¡æ¯åäººä»å¤å°å°æåºçèå±æ°ï¼ç¬¬äºè¡æ¯åäººç¸åºçæåï¼ä»1å¼å§ï¼ãæ¯è¡çæ¯ä¸¤ä¸ªæ°æ®ä¹é´çä¸ä¸ªç©ºæ ¼ã\n\n### è¾å¥æ ·ä¾:\n\n```in\n2\n6 5 1 2 3 4 6\n5 4 5 6 6 4\n```\n\n### è¾åºæ ·ä¾:\n\n```out\n6 5 4 3 2 1\n1 2 3 4 5 6\n6 6 5 4 4\n1 1 3 4 4\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc59"
  },
  "id": "1598484478849466374",
  "label": "",
  "score": 300,
  "problemId": "1597024555586289664",
  "title": "F008 排队买饭­",
  "content": "周晓晓吃完中午饭后又觉得没吃饱，因此想要再去食堂买点饭，当她走进食堂发现已经有n个人排队了，她知道每个人买饭需要的时间。她想帮助大家尽快的买到饭，即让n个人的平均等待时间最小，周晓晓已经饿的无法想出办法，只想知道他们最小的平均等待时间是多少，你能帮助她吗?输入格式:输入可能有多组，每组第一行为一个整数n。 第二行 n 个整数，第 i 个整数 Ti 表示第i个人的等待时间Ti。输出格式:每组输出占一行，为每组最小的平均等待时间（输出结果精确到小数点后两位）。输入样例:10 56 12 1 99 1000 234 33 55 99 812输出样例:532.00",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "ä¸åå¸èå¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "å¶ä»",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "å¶ä»",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 110,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "638400da1d8a342ac5c4a2fa",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 21
    }
  },
  "solution": "",
  "description": "å¨ææåå®ä¸­åé¥­ååè§å¾æ²¡åé¥±ï¼å æ­¤æ³è¦åå»é£å ä¹°ç¹é¥­ï¼å½å¥¹èµ°è¿é£å åç°å·²ç»ænä¸ªäººæéäºï¼å¥¹ç¥éæ¯ä¸ªäººä¹°é¥­éè¦çæ¶é´ãå¥¹æ³å¸®å©å¤§å®¶å°½å¿«çä¹°å°é¥­ï¼å³è®©nä¸ªäººçå¹³åç­å¾æ¶é´æå°ï¼å¨ææå·²ç»é¥¿çæ æ³æ³åºåæ³ï¼åªæ³ç¥éä»ä»¬æå°çå¹³åç­å¾æ¶é´æ¯å¤å°ï¼ä½ è½å¸®å©å¥¹å?\n\n### è¾å¥æ ¼å¼:\n\nè¾å¥å¯è½æå¤ç»ï¼æ¯ç»ç¬¬ä¸è¡ä¸ºä¸ä¸ªæ´æ°nã ç¬¬äºè¡ n ä¸ªæ´æ°ï¼ç¬¬ i ä¸ªæ´æ° Ti è¡¨ç¤ºç¬¬iä¸ªäººçç­å¾æ¶é´Tiã\n\n### è¾åºæ ¼å¼:\n\næ¯ç»è¾åºå ä¸è¡ï¼ä¸ºæ¯ç»æå°çå¹³åç­å¾æ¶é´ï¼è¾åºç»æç²¾ç¡®å°å°æ°ç¹åä¸¤ä½ï¼ã\n\n### è¾å¥æ ·ä¾:\n\n```in\n10 \n56 12 1 99 1000 234 33 55 99 812\n```\n\n### è¾åºæ ·ä¾:\n\n```out\n532.00\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e72efb4a7dada3b8cc5a"
  },
  "id": "1598484478849466372",
  "label": "",
  "score": 300,
  "problemId": "1590379064198819840",
  "title": "数论中的模幂运算",
  "content": "设a,m,n∈Z+，且a×n≤230, 试计算：am(mod n)，即求a的m次方再对n求余，并给出a参与的乘法次数。输入格式:在一行内输入三个正整数a,m和n，用空格隔开，要求a×n≤230输出格式:am(mod n)的结果，大小不超过231−1输入样例1:2 4 5输出样例1:1 1",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "å¤ªåçå·¥å¤§å­¦"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "316",
          "name": "ä¸­å­¦ä¿¡æ¯å­¦",
          "isLeaf": false,
          "enName": "Middle School Informatics"
        },
        {
          "id": "327",
          "name": "ç®æ³åæ°æ®ç»æåæ­¥",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "332",
          "name": "æ°è®º",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "Cç¨åºè®¾è®¡",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "å¾ªç¯æ§å¶",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "åµå¥å¾ªç¯",
          "isLeaf": true,
          "enName": ""
        }
      ]
    },
    {
      "knowledgePoints": [
        {
          "id": "1049225510747021312",
          "name": "è®¡ç®æºç§å­¦å¯¼è®º",
          "isLeaf": false,
          "enName": "Introduction to Computer Science"
        },
        {
          "id": "1049225683992748032",
          "name": "æ°æ®è¡¨ç¤º",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "1049226397448056832",
          "name": "è¿å¶è½¬æ¢",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 36,
  "problemSetId": "1598484478786551808",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "636c00a439c4615de516ab3b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 40
    }
  },
  "solution": "",
  "description": "è®¾$$a, m, n\\in Z^+$$ï¼ä¸$$a\\times n\\leq 2^{30}$$, è¯è®¡ç®ï¼$$a^m (\\rm{mod}\\space \\it{n})$$ï¼å³æ±$$a$$ç$$m$$æ¬¡æ¹åå¯¹$$n$$æ±ä½ï¼å¹¶ç»åº$$a$$åä¸çä¹æ³æ¬¡æ°ã\n\n### è¾å¥æ ¼å¼:\nå¨ä¸è¡åè¾å¥ä¸ä¸ªæ­£æ´æ°$$a, m$$å$$n$$ï¼ç¨ç©ºæ ¼éå¼ï¼è¦æ±$$a\\times n\\leq 2^{30}$$\n\n### è¾åºæ ¼å¼:\n$$a^m (\\rm{mod}\\space \\it{n})$$çç»æï¼å¤§å°ä¸è¶è¿$$2^{31}-1$$\n\n### è¾å¥æ ·ä¾1:\n```in\n2 4 5\n```\n\n### è¾åºæ ·ä¾1:\n```out\n1 1\n```\n\n### è¾å¥æ ·ä¾2:\n```in\n22 418 53\n```\n\n### è¾åºæ ·ä¾2:\n```out\n7 1\n```\n\n### æç¤ºï¼\nå¯¹äºå¹è¿ç®ï¼æï¼\n**è§å1**ï¼è®¾$$(m)_{10}=(b_kb_{k-1}b_{k-2}\\cdots b_2b_1b_0)_2$$ï¼å¶ä¸­ä¸æ ä»£è¡¨è¿å¶ï¼åæ\n$$\n\\begin{array}{ll}\na^m&=a^{b_kb_{k-1}b_{k-2}\\cdots b_2b_1b_0}\\\\\n&=a^{b_k\\times 2^k+b_{k-1}\\times 2^{k-1}+\\cdots +b_0\\times 2^0}\\\\\n&=a^{b_k\\times 2^k}\\times a^{b_{k-1}\\times 2^{k-1}}\\times \\cdots \\times 2^{b_0\\times 2^0}\n\\end{array}\n$$\n\nå¦\n$$\n\\begin{array}{ll}\n5^{(5)_{10}}=5^{(101)_{2}}&=5^{1\\times 4}\\times 5^{0\\times 2}\\times\n5^{1\\times 1}\\\\\n&=((1^2\\times 5)^2)^2\\times 5\n\\end{array}\n$$\n\nä½å½$$a$$æ$$m$$å¼å¾å¤§æ¶ï¼$$a^m$$ä¼å¾å¤§ï¼çè³è¶è¿è®¡ç®æºå¯ä»¥è¡¨ç¤ºçèå´ï¼å³åçæº¢åºï¼ãæ­¤æ¶ï¼å¨åæ¨¡å¹è¿ç®æ¶ï¼ä¸è½åæ±å¹åæ±æ¨¡ãèèå°æ¨¡è¿ç®æï¼\n**è§å2**ï¼å¦æ$$a=b\\times c$$ï¼å\n$$\n\\begin{array}{ll}\na \\space(\\rm{mod}\\space \\it{n})&=(b\\times c)\\space(\\rm{mod}\\space \\it{n})\\\\\n&=((b\\space(\\rm{mod}\\space \\it{n}))\\times c)\\space(\\rm{mod}\\space \\it{n})\\\\\n&=(b\\space(\\rm{mod}\\space \\it{n})\\times c\\space(\\rm{mod}\\space \\it{n}))\\space(\\rm{mod}\\space \\it{n})\n\\end{array}$$\n\nå¦\n$$\n\\begin{array}{ll}\n5^{(5)_{10}}\\space(\\rm{mod}\\space 8)\n&=5^{(101)_{2}}\\space(\\rm{mod}\\space 8)\\\\\n&=(5^{1\\times 4}\\times 5^{0\\times 2}\\times 5^{1\\times 1})\\space(\\rm{mod}\\space 8)\\\\\n&=((((1^2\\space(\\rm{mod}\\space 8)\\times 5)\\space(\\rm{mod}\\space 8))^2\\space(\\rm{mod}\\space 8))^2\\space(\\rm{mod}\\space 8)\\times 5)\\space(\\rm{mod}\\space 8)\n\\end{array}\n$$\n\nå½$m>n$ä¸$n$æ¯ç´ æ°æ¶ï¼è¿å¯ä»¥åè**è´¹é©¬å°å®ç**è¿è¡è¿ä¸æ­¥åç®ï¼\n**è§å3**ï¼è®¾$$a,n\\in Z^+$$ï¼è¥$$n$$æ¯ç´ æ°ï¼ä¸$$\\rm{GCD}(\\it{a,n})=\\rm{1}$$ï¼å³$$a$$å$$n$$äºè´¨ï¼åæï¼$$a^{n-1}\\space(\\rm{mod}\\space \\it{n})=\\rm{1}$$\n\n**ä¸¾ä¾è¯´æ**\n$$\n\\begin{array}{ll}\n15^{40}\\space(\\rm{mod}\\space 31)&=((15^{30}\\space(\\rm{mod}\\space 31))\\times (15^{10}\\space(\\rm{mod}\\space 31))) \\space(\\rm{mod}\\space 31)\\\\\n&=(1\\times (15^{10}\\space(\\rm{mod}\\space 31))) \\space(\\rm{mod}\\space 31)\\\\\n&=15^{10}\\space(\\rm{mod}\\space 31)\n\\end{array}\n$$\n\nåçï¼æï¼\n$$\n\\begin{array}{ll}\n5^{200}\\space(\\rm{mod}\\space 31)&=\n5^{30\\times 6+20}\\space(\\rm{mod}\\space 31)\\\\\n&=5^{20}\\space(\\rm{mod}\\space 31)\n\\end{array}\n$$\n\nå æ­¤ï¼è®¡ç®æ¨¡å¹$$a^m \\space(\\rm{mod}\\space \\it{n})$$æ¶ï¼è¯·åèå¦ä¸ç®æ³ï¼\n\n$$\\bold{\\textcolor{blue}{ç®æ³}}\\textcolor{red}{\\rm{ExpMod}}$$\nè¾å¥ï¼$$a, m, n$$\nè¾åºï¼$$a^m \\space(\\rm{mod}\\space \\it{n})$$\n1$$\\quad$$ **if** $$n$$æ¯ç´ æ° **and** $$a$$ä¸$$n$$äºè´¨ **and** $$m\\geq n$$ **then**\n2$$\\qquad$$m%=n-1\n3$$\\quad$$$$c\\gets1$$\n2$$\\quad$$å°$$m$$è½¬æ¢ä¸ºäºè¿å¶ä¸²$$b_{\\textcolor{red}{k}}b_{k-1}\\cdots b_2b_1b_{\\textcolor{red}{0}}$$\n3$$\\quad$$**for** $$j\\gets \\textcolor{red}{k}$$ **downto** $$\\textcolor{red}{0}$$ **do**\n4$$\\qquad$$$$c\\gets c^2\\space (\\rm{mod}\\space \\it{n})$$\n5$$\\qquad$$**if** $$b_j$$ **then**\n6$$\\qquad\\quad$$$$c\\gets ac\\space (\\rm{mod}\\space \\it{n})$$\n7$$\\qquad$$**end_if**\n8$$\\quad$$**end_for**\n9$$\\quad$$**return** $$c$$\n\n**æ³¨æ**ï¼æ­£æ´æ°çæ¨¡(**mod**)è¿ç®å³æ±ä½(**%**)æä½ã",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc5b"
  },
  "id": "1601015996230680576",
  "label": "",
  "score": 300,
  "problemId": "1311137716558749696",
  "title": "成绩百分与五分制的转换",
  "content": "输入百分成绩，输出五分制等级。转换规则如下：100~90等级A，89~80等级B，79~70等级C，69~60等级D，小于60等级E，如果输入的成绩在0--100范围之外，则输出”输入错误“。\n\n### 输入格式:\n\n输入一个正整数，在0--100之间。\n注意：\n1.  输入使用input()，不要增加额外的提示信息\n1.  input 函数返回值是字符串, 可以使用 int(input()) 或 eval(input()) 来进行转换\n\n\n### 输出格式:\n\n直接输出A、B、C、D、E其中的一个，或者”输入错误“。\n\n### 输入样例1:\n```in\n98\n```\n\n### 输出样例1:\n\n```out\nA\n```\n### 输入样例2:\n```in\n103\n```\n\n### 输出样例2:\n\n```out\n输入错误\n```",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "福州大学至诚学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "924247594312409088",
          "name": "Python程序设计",
          "isLeaf": false,
          "enName": "Python Programming"
        },
        {
          "id": "924248445119619072",
          "name": "选择分支结构",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "924249537052139520",
          "name": "多分支",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 72,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "5f73f3e7799965000721394c",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 0
    }
  },
  "solution": "",
  "description": "输入百分成绩，输出五分制等级。转换规则如下：100~90等级A，89~80等级B，79~70等级C，69~60等级D，小于60等级E，如果输入的成绩在0--100范围之外，则输出”输入错误“。\n\n### 输入格式:\n\n输入一个正整数，在0--100之间。\n注意：\n1.  输入使用input()，不要增加额外的提示信息\n1.  input 函数返回值是字符串, 可以使用 int(input()) 或 eval(input()) 来进行转换\n\n\n### 输出格式:\n\n直接输出A、B、C、D、E其中的一个，或者”输入错误“。\n\n### 输入样例1:\n```in\n98\n```\n\n### 输出样例1:\n\n```out\nA\n```\n### 输入样例2:\n```in\n103\n```\n\n### 输出样例2:\n\n```out\n输入错误\n```",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc5c"
  },
  "id": "1601015996230680577",
  "label": "",
  "score": 300,
  "problemId": "1598937448774889472",
  "title": "错误探测",
  "content": "给定一个m行n列的二维数组。\n如果每一行偶数的个数是偶数，并且每一列奇数的个数是奇数，认为是正确的，输出yes；否则输出no\n注意：0是偶数。\n### 输入格式:\n\n第1行是两个整数m、n。输入保证1 <= m <= 100, 1 <= n <= 200。 \n接下来输入有m行，每行n个整数。输入保证在32位整型取值范围之内。\n### 输出格式:\n如果输入的每一行偶数的个数是偶数，并且每一列奇数的个数是奇数，输出yes；否则输出no\n\n### 输入样例1:\n```in\n3 5\n1 7 8 9 6\n2 7 5 0 7\n4 3 8 2 6\n```\n\n### 输出样例1:\n```out\nyes\n```\n\n### 输入样例2:\n```in\n3 4\n1 8 8 9 \n2 7 5 0 \n4 3 6 2\n```\n\n### 输出样例2:\n```out\nno\n```\n\n### 输出样例2提示:\n输入的第2列\n8\n7\n3\n奇数的个数不是奇数，所以输出 no",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "重庆科技学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 86,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "638af677f77d37305f291643",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 12
    }
  },
  "solution": "",
  "description": "给定一个m行n列的二维数组。\n如果每一行偶数的个数是偶数，并且每一列奇数的个数是奇数，认为是正确的，输出yes；否则输出no\n注意：0是偶数。\n### 输入格式:\n\n第1行是两个整数m、n。输入保证1 <= m <= 100, 1 <= n <= 200。 \n接下来输入有m行，每行n个整数。输入保证在32位整型取值范围之内。\n### 输出格式:\n如果输入的每一行偶数的个数是偶数，并且每一列奇数的个数是奇数，输出yes；否则输出no\n\n### 输入样例1:\n```in\n3 5\n1 7 8 9 6\n2 7 5 0 7\n4 3 8 2 6\n```\n\n### 输出样例1:\n```out\nyes\n```\n\n### 输入样例2:\n```in\n3 4\n1 8 8 9 \n2 7 5 0 \n4 3 6 2\n```\n\n### 输出样例2:\n```out\nno\n```\n\n### 输出样例2提示:\n输入的第2列\n8\n7\n3\n奇数的个数不是奇数，所以输出 no",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc5d"
  },
  "id": "1601015996230680578",
  "label": "",
  "score": 300,
  "problemId": "1599257924319576064",
  "title": "h020-求中间数",
  "content": "\n\n给出三个数，找出这三个数当中的中间数\n\n### 输入格式:\n\n输入三个数\n\n### 输出格式:\n\n输出这三个数当中的中间数\n\n### 输入样例:\n\n在这里给出一组输入。例如：\n\n```in\n1 3 2\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n2\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "贵州工程应用技术学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "1027906739684155392",
          "name": "PHP程序设计",
          "isLeaf": false,
          "enName": "PHP Programming"
        },
        {
          "id": "1027906981326397440",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "1027907811647602688",
          "name": "数组的常用函数",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 58,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "638c22f3c44a5e15e40056d9",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 22
    }
  },
  "solution": "",
  "description": "\n\n给出三个数，找出这三个数当中的中间数\n\n### 输入格式:\n\n输入三个数\n\n### 输出格式:\n\n输出这三个数当中的中间数\n\n### 输入样例:\n\n在这里给出一组输入。例如：\n\n```in\n1 3 2\n```\n\n### 输出样例:\n\n在这里给出相应的输出。例如：\n\n```out\n2\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc5e"
  },
  "id": "1601015996230680579",
  "label": "",
  "score": 300,
  "problemId": "1597035092109938688",
  "title": "F009 放书",
  "content": "周小小最近想为自己的图书室添置一个巨型书架，尽管它是如此的大，但它还是几乎瞬间就被各种各样的书塞满了。现在，只有书架的顶上还留有一点空间。\n\t所有N(1<=N<=2000)把椅子都有一个确定的高度Hi（1<=Hi<=1000）。为了够到书架顶，周小小想像演杂技一般，将椅子一个一个的叠在一起，并上去把书架的空间补上。\n\t显然，椅子叠的越多，就越不稳定，于是小小希望在够到书架顶的前提下，让椅子数量尽量少，作为聪明的你，一定能帮助他计算出这个最小数量吧。\n\n### 输入格式:\n\n第1行: 2个用空格隔开的整数：N和B，表示有N把椅子和书架的高度；\n第2行到N+1行: 第i+1行是1个整数：Hi，表示椅子的高度。\n可能存在多组输入数据。\n\n### 输出格式:\n\n输出1个整数，即最少要多少把椅子。（如果到不了顶端，输出-1）\n\n### 输入样例:\n\n```in\n6 40\n6\n18\n11\n13\n19\n11\n```\n\n### 输出样例:\n\n```out\n3\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "东北师范大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "89",
          "name": "其他",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "315",
          "name": "其他",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 190,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "63840acbf77d37305f28e3aa",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 25
    }
  },
  "solution": "",
  "description": "周小小最近想为自己的图书室添置一个巨型书架，尽管它是如此的大，但它还是几乎瞬间就被各种各样的书塞满了。现在，只有书架的顶上还留有一点空间。\n\t所有N(1<=N<=2000)把椅子都有一个确定的高度Hi（1<=Hi<=1000）。为了够到书架顶，周小小想像演杂技一般，将椅子一个一个的叠在一起，并上去把书架的空间补上。\n\t显然，椅子叠的越多，就越不稳定，于是小小希望在够到书架顶的前提下，让椅子数量尽量少，作为聪明的你，一定能帮助他计算出这个最小数量吧。\n\n### 输入格式:\n\n第1行: 2个用空格隔开的整数：N和B，表示有N把椅子和书架的高度；\n第2行到N+1行: 第i+1行是1个整数：Hi，表示椅子的高度。\n可能存在多组输入数据。\n\n### 输出格式:\n\n输出1个整数，即最少要多少把椅子。（如果到不了顶端，输出-1）\n\n### 输入样例:\n\n```in\n6 40\n6\n18\n11\n13\n19\n11\n```\n\n### 输出样例:\n\n```out\n3\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc5f"
  },
  "id": "1601015996230680580",
  "label": "",
  "score": 300,
  "problemId": "1596443647770624000",
  "title": "h003.读文章",
  "content": "\n假定文章是一个3行80列的二维数组，读文章就是将文章中的大写字母、小写字母、数字、空格以及其他字符统计。\n\n### 输入格式:\n\n输入一篇文章，输入要保证文章为一个3行80列的二维数组。\n\n### 输出格式:\n\n输出文章中大写字母、小写字母、数字、空格以及其他字符的数量。\n\n### 输入样例:\n\n\n```in\noWxxn*srK*E * AGX* 4*R0 1*W Pm****Lr* *m**Zn*  6Q N *w  sh 78f x*h 8f2k* 8zk  MO\n2**G4q*M02U*Y0k T  **7M9 H LY4NE 4    1*6**U*e*Ntn **g  *  av*M* Y  FSG9*FVt*B* \n*5*iYHu*6i****G*9Q  c2 Y1*Y6K  B P84I*F8*3 4 ey 0 R  9*bvYx9  6 *X 73 5 0useR6 E\n\n```\n\n### 输出样例:\n\n\n```out\n52\n41\n41\n56\n50\n\n```\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "贵州工程应用技术学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "78",
          "name": "数组",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "81",
          "name": "二维数组",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 93,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "6381e3ad1d8a342ac5c498bb",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 5
    }
  },
  "solution": "",
  "description": "\n假定文章是一个3行80列的二维数组，读文章就是将文章中的大写字母、小写字母、数字、空格以及其他字符统计。\n\n### 输入格式:\n\n输入一篇文章，输入要保证文章为一个3行80列的二维数组。\n\n### 输出格式:\n\n输出文章中大写字母、小写字母、数字、空格以及其他字符的数量。\n\n### 输入样例:\n\n\n```in\noWxxn*srK*E * AGX* 4*R0 1*W Pm****Lr* *m**Zn*  6Q N *w  sh 78f x*h 8f2k* 8zk  MO\n2**G4q*M02U*Y0k T  **7M9 H LY4NE 4    1*6**U*e*Ntn **g  *  av*M* Y  FSG9*FVt*B* \n*5*iYHu*6i****G*9Q  c2 Y1*Y6K  B P84I*F8*3 4 ey 0 R  9*bvYx9  6 *X 73 5 0useR6 E\n\n```\n\n### 输出样例:\n\n\n```out\n52\n41\n41\n56\n50\n\n```\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc60"
  },
  "id": "1601015996230680581",
  "label": "",
  "score": 300,
  "problemId": "1599080200057647104",
  "title": "语言之争",
  "content": "\n现在要你编写一个程序进行字符串s1特定的转换输出。\n输出为“Error!”情况：1.字符串s1含大写字符并且首字符为小写字符，同时含字符“_\"不相连。2.字符串s1不含大写字符或者首字符大写并且有多个字符“_”相连或者不含字符“_”。\n输出不为“Error!”情况：当字符串s1含有多个字符“_”相连或者不含字符“_”表示将字符串s1中的大写字符转换成字符“_”加其小写字符，输出转换后的字符串s2;否则表示将字符串s1中字符“_”后紧邻的一个小写字符转换成其大写字符，删除字符串s1中原有的所有大写字符和字符“_”,输出转换后的字符串s2。\n### 输入格式:\n\n输入一串字符串s1。\n字符串s1：26英文字母和字符“_”组合，字符“_”可以没有。\n### 输出格式:\n\n输出转换后的字符串s2。\n\n### 输入字符串（小写字符转换成大写字符）样例1:\n\n在这里给出一组输入。例如：\n\n```in\nAfaAe_a_f_\n```\n\n### 输出样例1:\n\n在这里给出相应的输出。例如：\n\n```out\nfaeAF\n```\n### 输入字符串（大写字符转换成小写字符）样例2:\n\n在这里给出一组输入。例如：\n\n```in\naBC__D_f\n```\n\n### 输出样例2:\n\n在这里给出相应的输出。例如：\n\n```out\na_b_c___d_f\n```\n\n### 输入样例3:\n\n在这里给出一组输入。例如：\n\n```in\naBcd_e_f\n```\n\n### 输出样例3:\n\n在这里给出相应的输出。例如：\n\n```out\nError!\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "贵州工程应用技术学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "1199542721402277888",
          "name": "C#程序设计",
          "isLeaf": false,
          "enName": "C# Programming"
        },
        {
          "id": "1199542849299181568",
          "name": "数组与集合",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "1199543318595670016",
          "name": "字符串",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 41,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "638b7e40f77d37305f2919ed",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 3
    }
  },
  "solution": "",
  "description": "\n现在要你编写一个程序进行字符串s1特定的转换输出。\n输出为“Error!”情况：1.字符串s1含大写字符并且首字符为小写字符，同时含字符“_\"不相连。2.字符串s1不含大写字符或者首字符大写并且有多个字符“_”相连或者不含字符“_”。\n输出不为“Error!”情况：当字符串s1含有多个字符“_”相连或者不含字符“_”表示将字符串s1中的大写字符转换成字符“_”加其小写字符，输出转换后的字符串s2;否则表示将字符串s1中字符“_”后紧邻的一个小写字符转换成其大写字符，删除字符串s1中原有的所有大写字符和字符“_”,输出转换后的字符串s2。\n### 输入格式:\n\n输入一串字符串s1。\n字符串s1：26英文字母和字符“_”组合，字符“_”可以没有。\n### 输出格式:\n\n输出转换后的字符串s2。\n\n### 输入字符串（小写字符转换成大写字符）样例1:\n\n在这里给出一组输入。例如：\n\n```in\nAfaAe_a_f_\n```\n\n### 输出样例1:\n\n在这里给出相应的输出。例如：\n\n```out\nfaeAF\n```\n### 输入字符串（大写字符转换成小写字符）样例2:\n\n在这里给出一组输入。例如：\n\n```in\naBC__D_f\n```\n\n### 输出样例2:\n\n在这里给出相应的输出。例如：\n\n```out\na_b_c___d_f\n```\n\n### 输入样例3:\n\n在这里给出一组输入。例如：\n\n```in\naBcd_e_f\n```\n\n### 输出样例3:\n\n在这里给出相应的输出。例如：\n\n```out\nError!\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc61"
  },
  "id": "1601015996230680582",
  "label": "",
  "score": 300,
  "problemId": "1599215155270119424",
  "title": "编写程序 ，求二元一次方程一组解乘积的最大值。",
  "content": "有二元一次方程5x+2y=n，其中20<=n<=100，编写程序求该方程正整数解x和y相乘的最大值。\n\n### 输入格式:\n\n输入一个[20,100]间的正整数n。\n\n### 输出格式:\n\n输出对应方程正整数解x*y的最大值。\n\n### 输入样例1:\n\n```in\n50\n```\n### 输出样例1:\n\n```out\nx*y=60\n```\n### 输入样例2:\n\n```in\n100\n```\n### 输出样例2:\n\n```out\nx*y=250\n```\n\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "桂林学院"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "63",
          "name": "C程序设计",
          "isLeaf": false,
          "enName": "C Programming"
        },
        {
          "id": "70",
          "name": "循环控制",
          "isLeaf": false,
          "enName": ""
        },
        {
          "id": "73",
          "name": "嵌套循环",
          "isLeaf": true,
          "enName": ""
        }
      ]
    }
  ],
  "submitCount": 46,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "638bf907c44a5e15e4005546",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "GCC",
      "interactorProgram": "",
      "testDataVersion": 18
    }
  },
  "solution": "",
  "description": "有二元一次方程5x+2y=n，其中20<=n<=100，编写程序求该方程正整数解x和y相乘的最大值。\n\n### 输入格式:\n\n输入一个[20,100]间的正整数n。\n\n### 输出格式:\n\n输出对应方程正整数解x*y的最大值。\n\n### 输入样例1:\n\n```in\n50\n```\n### 输出样例1:\n\n```out\nx*y=60\n```\n### 输入样例2:\n\n```in\n100\n```\n### 输出样例2:\n\n```out\nx*y=250\n```\n\n",
  "indexInProblemPool": 1
},{
  "_id": {
    "$oid": "6448e7c0fb4a7dada3b8cc62"
  },
  "id": "1601015996230680583",
  "label": "",
  "score": 300,
  "problemId": "1501187720155676672",
  "title": "Bang Bang Klee Ba！",
  "content": "可莉今天抓到了花纹奇怪的蜥蜴，很多很多条！\n\n可莉很想知道她到底抓到了多少种不同的蜥蜴，每一种蜥蜴各抓了多少只。所以，求求你啦！帮帮可莉吧！\n\n\n![%OP~O2@A{2CY3WWAX5C1OWF.png](~/79b84ef1-f373-4ecc-a6a3-9e25f2063cc3.png)\n\n可莉一共抓到了n只蜥蜴，分别编号1~n，但她不知道每只蜥蜴的具体种类。派蒙作为你的好向导，告诉你了m条信息，每条信息可以知道其中哪两只蜥蜴属于同一种类，但十分聪明的派蒙算不出来蜥蜴的种类数和每种蜥蜴的具体数量，所以就交给非常聪明的你了！\n\n\n### 输入格式:\n\n第一行有n，m两个正整数，n为可莉今天抓到的蜥蜴总数，m为信息的数量。($$1≤n,m≤10^5$$ )\n\n接下来m行，每行两个正整数a，b，表示第a只蜥蜴与第b只蜥蜴属于同一类别。\n\n### 输出格式:\n\n第一行输出一个正整数sum，表示抓到的蜥蜴种数。\n\n第二行有sum个正整数，以**降序**输出每种蜥蜴的数量，两数间使用一个空格隔开，行末没有多余的空格。\n\n### 输入样例:\n\n```in\n6 5\n1 2\n1 3\n1 4\n2 4\n3 5\n```\n\n### 输出样例:\n\n```out\n2\n5 1\n```\n\n### 样例解释:\n\n6只蜥蜴当中，第1,2,3,4,5只蜥蜴属于同一类别，所以共计2类。\n\n按照蜥蜴数量降序排列后，第一类蜥蜴共5只，第二类蜥蜴共1只。\n",
  "type": "PROGRAMMING",
  "authorOrganization": {
    "name": "成都信息工程大学"
  },
  "knowledgePointPaths": [
    {
      "knowledgePoints": [
        {
          "id": "1",
          "name": "数据结构与算法",
          "isLeaf": false,
          "enName": "Data Structures and Algorithms"
        },
        {
          "id": "12",
          "name": "树",
          "isLeaf": false,
          "enName": "Trees"
        },
        {
          "id": "23",
          "name": "并查集",
          "isLeaf": true,
          "enName": "Union/Find"
        }
      ]
    }
  ],
  "submitCount": 68,
  "problemSetId": "1601015996159377408",
  "judgeConfig": {
    "programmingJudgeConfig": {
      "testDataId": "6235ce1a48f35774a205336b",
      "answer": "",
      "answerCompiler": "NO_COMPILER",
      "useSpecialJudge": false,
      "checkerCompiler": "GCC",
      "checkerProgram": "",
      "scoringRule": "NORMAL",
      "useInteractor": false,
      "interactorCompiler": "NO_COMPILER",
      "interactorProgram": "",
      "testDataVersion": 1
    }
  },
  "solution": "",
  "description": "可莉今天抓到了花纹奇怪的蜥蜴，很多很多条！\n\n可莉很想知道她到底抓到了多少种不同的蜥蜴，每一种蜥蜴各抓了多少只。所以，求求你啦！帮帮可莉吧！\n\n\n![%OP~O2@A{2CY3WWAX5C1OWF.png](~/79b84ef1-f373-4ecc-a6a3-9e25f2063cc3.png)\n\n可莉一共抓到了n只蜥蜴，分别编号1~n，但她不知道每只蜥蜴的具体种类。派蒙作为你的好向导，告诉你了m条信息，每条信息可以知道其中哪两只蜥蜴属于同一种类，但十分聪明的派蒙算不出来蜥蜴的种类数和每种蜥蜴的具体数量，所以就交给非常聪明的你了！\n\n\n### 输入格式:\n\n第一行有n，m两个正整数，n为可莉今天抓到的蜥蜴总数，m为信息的数量。($$1≤n,m≤10^5$$ )\n\n接下来m行，每行两个正整数a，b，表示第a只蜥蜴与第b只蜥蜴属于同一类别。\n\n### 输出格式:\n\n第一行输出一个正整数sum，表示抓到的蜥蜴种数。\n\n第二行有sum个正整数，以**降序**输出每种蜥蜴的数量，两数间使用一个空格隔开，行末没有多余的空格。\n\n### 输入样例:\n\n```in\n6 5\n1 2\n1 3\n1 4\n2 4\n3 5\n```\n\n### 输出样例:\n\n```out\n2\n5 1\n```\n\n### 样例解释:\n\n6只蜥蜴当中，第1,2,3,4,5只蜥蜴属于同一类别，所以共计2类。\n\n按照蜥蜴数量降序排列后，第一类蜥蜴共5只，第二类蜥蜴共1只。\n",
  "indexInProblemPool": 1
}]